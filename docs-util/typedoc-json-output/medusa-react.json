{
	"id": 0,
	"name": "medusa-react",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 1,
			"name": "Providers",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": ":::info\n\nThis is an experimental feature.\n\n:::\n\n"
					},
					{
						"kind": "code",
						"text": "`medusa-react`"
					},
					{
						"kind": "text",
						"text": " exposes React Context Providers that facilitate building custom storefronts."
					}
				],
				"modifierTags": [
					"@packageDocumentation"
				]
			},
			"children": [
				{
					"id": 2,
					"name": "Cart",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@packageDocumentation"
						]
					},
					"children": [
						{
							"id": 169,
							"name": "useCart",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"signatures": [
								{
									"id": 170,
									"name": "useCart",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This hook exposes the context of "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "CartProvider",
												"target": 174,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": ".\n\nThe context provides helper functions and mutations for managing the cart and checkout. You can refer to the following guides for examples on how to use them:\n\n- [How to Add Cart Functionality](https://docs.medusajs.com/modules/carts-and-checkout/storefront/implement-cart)\n- [How to Implement Checkout Flow](https://docs.medusajs.com/modules/carts-and-checkout/storefront/implement-checkout-flow)"
											}
										],
										"blockTags": [
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```tsx title=\"src/Cart.ts\"\nimport * as React from \"react\"\n\nimport { useCart } from \"medusa-react\"\n\nconst Cart = () => {\n  const handleClick = () => {\n    createCart.mutate({}) // create an empty cart\n  }\n\n  const { cart, createCart } = useCart()\n\n  return (\n    <div>\n      {createCart.isLoading && <div>Loading...</div>}\n      {!cart?.id && (\n        <button onClick={handleClick}>\n          Create cart\n        </button>\n      )}\n      {cart?.id && (\n        <div>Cart ID: {cart.id}</div>\n      )}\n    </div>\n  )\n}\n\nexport default Cart\n```"
													},
													{
														"kind": "text",
														"text": "\n\nIn the example above, you retrieve the "
													},
													{
														"kind": "code",
														"text": "`createCart`"
													},
													{
														"kind": "text",
														"text": " mutation and "
													},
													{
														"kind": "code",
														"text": "`cart`"
													},
													{
														"kind": "text",
														"text": " state object using the "
													},
													{
														"kind": "code",
														"text": "`useCart`"
													},
													{
														"kind": "text",
														"text": " hook. \nIf the "
													},
													{
														"kind": "code",
														"text": "`cart`"
													},
													{
														"kind": "text",
														"text": " is not set, a button is shown. When the button is clicked, the "
													},
													{
														"kind": "code",
														"text": "`createCart`"
													},
													{
														"kind": "text",
														"text": " mutation is executed, which interacts with the backend and creates a new cart.\n\nAfter the cart is created, the "
													},
													{
														"kind": "code",
														"text": "`cart`"
													},
													{
														"kind": "text",
														"text": " state variable is set and its ID is shown instead of the button.\n\n:::note\n\nThe example above does not store in the browser the ID of the cart created, so the cart’s data will be gone on refresh. \nYou would have to do that using the browser’s [Local Storage](https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage).\n\n:::"
													}
												]
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 156,
										"name": "CartContext",
										"package": "medusa-react"
									}
								}
							]
						},
						{
							"id": 174,
							"name": "CartProvider",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"signatures": [
								{
									"id": 175,
									"name": "CartProvider",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "code",
												"text": "`CartProvider`"
											},
											{
												"kind": "text",
												"text": " makes use of some of the hooks already exposed by "
											},
											{
												"kind": "code",
												"text": "`medusa-react`"
											},
											{
												"kind": "text",
												"text": " to perform cart operations on the Medusa backend. \nYou can use it to create a cart, start the checkout flow, authorize payment sessions, and so on.\n\nIt also manages one single global piece of state which represents a cart, exactly like the one created on your Medusa backend.\n\nTo use "
											},
											{
												"kind": "code",
												"text": "`CartProvider`"
											},
											{
												"kind": "text",
												"text": ", you first have to insert it somewhere in your component tree below the "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "MedusaProvider",
												"target": 77
											},
											{
												"kind": "text",
												"text": ". Then, in any of the child components, \nyou can use the "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "useCart",
												"target": 169,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": " hook exposed by "
											},
											{
												"kind": "code",
												"text": "`medusa-react`"
											},
											{
												"kind": "text",
												"text": " to get access to cart operations and data."
											}
										],
										"blockTags": [
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```tsx title=\"src/App.ts\"\nimport { CartProvider, MedusaProvider } from \"medusa-react\"\nimport Storefront from \"./Storefront\"\nimport { QueryClient } from \"@tanstack/react-query\"\nimport React from \"react\"\n\nconst queryClient = new QueryClient()\n\nfunction App() {\n  return (\n    <MedusaProvider\n      queryClientProviderProps={{ client: queryClient }}\n      baseUrl=\"http://localhost:9000\"\n    >\n      <CartProvider>\n        <Storefront />\n      </CartProvider>\n    </MedusaProvider>\n  )\n}\n\nexport default App\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 176,
											"name": "param0",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Props of the provider."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 171,
												"name": "CartProps",
												"package": "medusa-react"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa-react/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.JSX.Element"
										},
										"name": "Element",
										"package": "@types/react",
										"qualifiedName": "React.JSX.Element"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Functions",
							"children": [
								169,
								174
							]
						}
					]
				},
				{
					"id": 3,
					"name": "Medusa",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@packageDocumentation"
						]
					},
					"children": [
						{
							"id": 67,
							"name": "useMedusa",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"signatures": [
								{
									"id": 68,
									"name": "useMedusa",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This hook gives you access to context of "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "MedusaProvider",
												"target": 77,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": ". It's useful if you want access to the \n[Medusa JS Client](https://docs.medusajs.com/js-client/overview)."
											}
										],
										"blockTags": [
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nimport React from \"react\"\nimport { useMeCustomer, useMedusa } from \"medusa-react\"\n\nconst CustomerLogin = () => {\n  const { client } = useMedusa()\n  const { refetch: refetchCustomer } = useMeCustomer()\n  // ...\n\n  const handleLogin = (\n    email: string,\n    password: string\n  ) => {\n    client.auth.authenticate({\n      email,\n      password\n    })\n    .then(() => {\n      // customer is logged-in successfully\n      refetchCustomer()\n    })\n    .catch(() => {\n      // an error occurred.\n    })\n  }\n\n  // ...\n}\n```"
													}
												]
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 65,
										"name": "MedusaContextState",
										"package": "medusa-react"
									}
								}
							]
						},
						{
							"id": 77,
							"name": "MedusaProvider",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"signatures": [
								{
									"id": 78,
									"name": "MedusaProvider",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`MedusaProvider`"
											},
											{
												"kind": "text",
												"text": " must be used at the highest possible point in the React component tree. Using any of "
											},
											{
												"kind": "code",
												"text": "`medusa-react`"
											},
											{
												"kind": "text",
												"text": "'s hooks or providers requires having "
											},
											{
												"kind": "code",
												"text": "`MedusaProvider`"
											},
											{
												"kind": "text",
												"text": "\nhigher in the component tree."
											}
										],
										"blockTags": [
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```tsx title=\"src/App.ts\"\nimport { MedusaProvider } from \"medusa-react\"\nimport Storefront from \"./Storefront\"\nimport { QueryClient } from \"@tanstack/react-query\"\nimport React from \"react\"\n\nconst queryClient = new QueryClient()\n\nconst App = () => {\n  return (\n    <MedusaProvider\n      queryClientProviderProps={{ client: queryClient }}\n      baseUrl=\"http://localhost:9000\"\n    >\n      <Storefront />\n    </MedusaProvider>\n  )\n}\n\nexport default App\n```"
													},
													{
														"kind": "text",
														"text": "\n\nIn the example above, you wrap the "
													},
													{
														"kind": "code",
														"text": "`Storefront`"
													},
													{
														"kind": "text",
														"text": " component with the "
													},
													{
														"kind": "code",
														"text": "`MedusaProvider`"
													},
													{
														"kind": "text",
														"text": ". "
													},
													{
														"kind": "code",
														"text": "`Storefront`"
													},
													{
														"kind": "text",
														"text": " is assumed to be the top-level component of your storefront, but you can place "
													},
													{
														"kind": "code",
														"text": "`MedusaProvider`"
													},
													{
														"kind": "text",
														"text": " at any point in your tree. Only children of "
													},
													{
														"kind": "code",
														"text": "`MedusaProvider`"
													},
													{
														"kind": "text",
														"text": " can benefit from its hooks.\n\nThe "
													},
													{
														"kind": "code",
														"text": "`Storefront`"
													},
													{
														"kind": "text",
														"text": " component and its child components can now use hooks exposed by Medusa React."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 79,
											"name": "param0",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Props of the provider."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 69,
												"name": "MedusaProviderProps",
												"package": "medusa-react"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa-react/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.JSX.Element"
										},
										"name": "Element",
										"package": "@types/react",
										"qualifiedName": "React.JSX.Element"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Functions",
							"children": [
								67,
								77
							]
						}
					]
				},
				{
					"id": 4,
					"name": "Session Cart",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@packageDocumentation"
						]
					},
					"children": [
						{
							"id": 151,
							"name": "SessionCartProvider",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"signatures": [
								{
									"id": 152,
									"name": "SessionCartProvider",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Unlike the "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "CartProvider",
												"target": 174
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`SessionProvider`"
											},
											{
												"kind": "text",
												"text": " never interacts with the Medusa backend. It can be used to implement the user experience related to managing a cart’s items. \nIts state variables are JavaScript objects living in the browser, but are in no way communicated with the backend.\n\nYou can use the "
											},
											{
												"kind": "code",
												"text": "`SessionProvider`"
											},
											{
												"kind": "text",
												"text": " as a lightweight client-side cart functionality. It’s not stored in any database or on the Medusa backend.\n\nTo use "
											},
											{
												"kind": "code",
												"text": "`SessionProvider`"
											},
											{
												"kind": "text",
												"text": ", you first have to insert it somewhere in your component tree below the "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "MedusaProvider",
												"target": 77
											},
											{
												"kind": "text",
												"text": ". Then, in any of the child components, \nyou can use the "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "useSessionCart",
												"target": 154,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": " hook to get access to client-side cart item functionalities."
											}
										],
										"blockTags": [
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```tsx title=\"src/App.ts\"\nimport { SessionProvider, MedusaProvider } from \"medusa-react\"\nimport Storefront from \"./Storefront\"\nimport { QueryClient } from \"@tanstack/react-query\"\nimport React from \"react\"\n\nconst queryClient = new QueryClient()\n\nconst App = () => {\n  return (\n    <MedusaProvider\n      queryClientProviderProps={{ client: queryClient }}\n      baseUrl=\"http://localhost:9000\"\n    >\n      <SessionProvider>\n        <Storefront />\n      </SessionProvider>\n    </MedusaProvider>\n  )\n}\n\nexport default App\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 153,
											"name": "param0",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Props of the provider."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 148,
												"name": "SessionCartProviderProps",
												"package": "medusa-react"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa-react/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.JSX.Element"
										},
										"name": "Element",
										"package": "@types/react",
										"qualifiedName": "React.JSX.Element"
									}
								}
							]
						},
						{
							"id": 154,
							"name": "useSessionCart",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"signatures": [
								{
									"id": 155,
									"name": "useSessionCart",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This hook exposes the context of "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "SessionCartProvider",
												"target": 151,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": "."
											}
										],
										"blockTags": [
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "The following example assumes that you've added "
													},
													{
														"kind": "code",
														"text": "`SessionCartProvider`"
													},
													{
														"kind": "text",
														"text": " previously in the React components tree:\n\n"
													},
													{
														"kind": "code",
														"text": "```tsx title=\"src/Products.ts\"\nconst Products = () => {\n  const { addItem } = useSessionCart()\n  // ...\n\n  function addToCart(variant: ProductVariant) {\n    addItem({\n      variant: variant,\n      quantity: 1,\n    })\n  }\n}\n```"
													}
												]
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 89,
										"name": "SessionCartContextState",
										"package": "medusa-react"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Functions",
							"children": [
								151,
								154
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Namespaces",
					"children": [
						2,
						3,
						4
					]
				}
			]
		},
		{
			"id": 5,
			"name": "Utilities",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "code",
						"text": "`medusa-react`"
					},
					{
						"kind": "text",
						"text": " exposes a set of utility functions that are mainly used to retrieve or format the price of a product variant."
					}
				],
				"modifierTags": [
					"@packageDocumentation"
				]
			},
			"children": [
				{
					"id": 3371,
					"name": "formatVariantPrice",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"signatures": [
						{
							"id": 3372,
							"name": "formatVariantPrice",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This utility function can be used to compute the price of a variant for a region and retrieve the formatted amount. For example, "
									},
									{
										"kind": "code",
										"text": "`$20.00`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The formatted price."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```tsx title=\"src/Products.ts\"\nimport React from \"react\"\nimport { formatVariantPrice } from \"medusa-react\"\nimport { Product, ProductVariant } from \"@medusajs/medusa\"\n\nconst Products = () => {\n  // ...\n  return (\n    <ul>\n      {products?.map((product: Product) => (\n        <li key={product.id}>\n          {product.title}\n          <ul>\n            {product.variants.map((variant: ProductVariant) => (\n              <li key={variant.id}>\n                {formatVariantPrice({\n                  variant,\n                  region, // should be retrieved earlier\n                })}\n              </li>\n            ))}\n          </ul>\n        </li>\n      ))}\n    </ul>\n  )\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3373,
									"name": "param0",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Options to format the variant's price."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3364,
										"name": "FormatVariantPriceParams",
										"package": "medusa-react"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 3378,
					"name": "computeVariantPrice",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"signatures": [
						{
							"id": 3379,
							"name": "computeVariantPrice",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This utility function can be used to compute the price of a variant for a region and retrieve the amount without formatting. \nFor example, "
									},
									{
										"kind": "code",
										"text": "`20`"
									},
									{
										"kind": "text",
										"text": ". This method is used by "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "formatVariantPrice",
										"target": 3371,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " before applying the price formatting."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The computed price of the variant."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```tsx title=\"src/Products.ts\"\nimport React from \"react\"\nimport { computeVariantPrice } from \"medusa-react\"\nimport { Product, ProductVariant } from \"@medusajs/medusa\"\n\nconst Products = () => {\n  // ...\n  return (\n    <ul>\n      {products?.map((product: Product) => (\n        <li key={product.id}>\n          {product.title}\n          <ul>\n            {product.variants.map((variant: ProductVariant) => (\n              <li key={variant.id}>\n                {computeVariantPrice({\n                  variant,\n                  region, // should be retrieved earlier\n                })}\n              </li>\n            ))}\n          </ul>\n        </li>\n      ))}\n    </ul>\n  )\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3380,
									"name": "param0",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Options to compute the variant's price."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3374,
										"name": "ComputeVariantPriceParams",
										"package": "medusa-react"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 3381,
					"name": "getVariantPrice",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"signatures": [
						{
							"id": 3382,
							"name": "getVariantPrice",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This utility function is used to retrieve a variant's price in a region. It doesn't take into account taxes or any options, so you typically wouldn't need this function on its own.\nIt's used by the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "computeVariantPrice",
										"target": 3378,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " function to retrieve the variant's price in a region before computing the correct price for the options provided."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The variant's price in a region."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```tsx title=\"src/Products.ts\"\nimport React from \"react\"\nimport { getVariantPrice } from \"medusa-react\"\nimport { Product, ProductVariant } from \"@medusajs/medusa\"\n\nconst Products = () => {\n  // ...\n  return (\n    <ul>\n      {products?.map((product: Product) => (\n        <li key={product.id}>\n          {product.title}\n          <ul>\n            {product.variants.map((variant: ProductVariant) => (\n              <li key={variant.id}>\n                {getVariantPrice(\n                  variant,\n                  region, // should be retrieved earlier\n                )}\n              </li>\n            ))}\n          </ul>\n        </li>\n      ))}\n    </ul>\n  )\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3383,
									"name": "variant",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The variant's details."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3404,
										"name": "ProductVariantInfo",
										"package": "medusa-react"
									}
								},
								{
									"id": 3384,
									"name": "region",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The region's details."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3405,
										"name": "RegionInfo",
										"package": "medusa-react"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 3390,
					"name": "computeAmount",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"signatures": [
						{
							"id": 3391,
							"name": "computeAmount",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This utility function can be used to compute the price of an amount for a region and retrieve the amount without formatting. For example, "
									},
									{
										"kind": "code",
										"text": "`20`"
									},
									{
										"kind": "text",
										"text": ".\nThis function is used by "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "formatAmount",
										"target": 3401,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " before applying the price formatting.\n\nThe main difference between this utility function and "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "computeVariantPrice",
										"target": 3378,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " is that you don’t need to pass a complete variant object. This can be used with any number."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The computed amount."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```tsx title=\"src/MyComponent.ts\"\nimport React from \"react\"\nimport { computeAmount } from \"medusa-react\"\n\nconst MyComponent = () => {\n  // ...\n  return (\n    <div>\n      {computeAmount({\n        amount,\n        region, // should be retrieved earlier\n      })}\n    </div>\n  )\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3392,
									"name": "params0",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The options to compute the amount."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3385,
										"name": "ComputeAmountParams",
										"package": "medusa-react"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 3401,
					"name": "formatAmount",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"signatures": [
						{
							"id": 3402,
							"name": "formatAmount",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This utility function can be used to compute the price of an amount for a region and retrieve the formatted amount. For example, "
									},
									{
										"kind": "code",
										"text": "`$20.00`"
									},
									{
										"kind": "text",
										"text": ".\n\nThe main difference between this utility function and "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "formatVariantPrice",
										"target": 3371,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " is that you don’t need to pass a complete variant object. This can be used with any number."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The formatted price."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport React from \"react\"\nimport { formatVariantPrice } from \"medusa-react\"\nimport { Product, ProductVariant } from \"@medusajs/medusa\"\n\nconst Products = () => {\n  // ...\n  return (\n    <ul>\n      {products?.map((product: Product) => (\n        <li key={product.id}>\n          {product.title}\n          <ul>\n            {product.variants.map((variant: ProductVariant) => (\n              <li key={variant.id}>\n                {formatVariantPrice({\n                  variant,\n                  region, // should be retrieved earlier\n                })}\n              </li>\n            ))}\n          </ul>\n        </li>\n      ))}\n    </ul>\n  )\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3403,
									"name": "param0",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Options to format the amount."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3393,
										"name": "FormatAmountParams",
										"package": "medusa-react"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						3371,
						3378,
						3381,
						3390,
						3401
					]
				}
			]
		},
		{
			"id": 6,
			"name": "Hooks",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 7,
					"name": "Admin",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@namespaceMember"
						]
					},
					"children": [
						{
							"id": 8,
							"name": "Auth",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and mutations listed here are used to send requests to the [Admin Auth API Routes](https://docs.medusajs.com/api/admin#auth_getauth).\n\nThey allow admin users to manage their session, such as login or log out.\nYou can send authenticated requests for an admin user either using the Cookie header, their API token, or the JWT Token.\nWhen you log the admin user in using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 852
									},
									{
										"kind": "text",
										"text": " hook, Medusa React will automatically attach the\ncookie header in all subsequent requests.\n\nRelated Guide: [How to implement user profiles](https://docs.medusajs.com/modules/users/admin/manage-profile)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 852,
									"name": "useAdminLogin",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 853,
											"name": "useAdminLogin",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook is used to log a User in using their credentials. If the user is authenticated successfully, \nthe cookie is automatically attached to subsequent requests sent with other hooks."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminLogin } from \"medusa-react\"\n\nconst Login = () => {\n  const adminLogin = useAdminLogin()\n  // ...\n\n  const handleLogin = () => {\n    adminLogin.mutate({\n      email: \"user@example.com\",\n      password: \"supersecret\",\n    }, {\n      onSuccess: ({ user }) => {\n        console.log(user)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Login\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 854,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/auth/index.d.ts",
																			"qualifiedName": "AdminAuthRes"
																		},
																		"name": "AdminAuthRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/auth/create-session.d.ts",
																	"qualifiedName": "AdminPostAuthReq"
																},
																"name": "AdminPostAuthReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/auth/index.d.ts",
																	"qualifiedName": "AdminAuthRes"
																},
																"name": "AdminAuthRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/auth/create-session.d.ts",
															"qualifiedName": "AdminPostAuthReq"
														},
														"name": "AdminPostAuthReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 855,
									"name": "useAdminDeleteSession",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 856,
											"name": "useAdminDeleteSession",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook is used to Log out the user and remove their authentication session. This will only work if you're using Cookie session for authentication. If the API token is still passed in the header,\nthe user is still authorized to perform admin functionalities in other API Routes.\n\nThis hook requires "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "user authentication",
														"target": 852
													},
													{
														"kind": "text",
														"text": "."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteSession } from \"medusa-react\"\n\nconst Logout = () => {\n  const adminLogout = useAdminDeleteSession()\n  // ...\n\n  const handleLogout = () => {\n    adminLogout.mutate(undefined, {\n      onSuccess: () => {\n        // user logged out.\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Logout\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 857,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 837,
									"name": "useAdminGetSession",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 838,
											"name": "useAdminGetSession",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook is used to get the currently logged in user's details. Can also be used to check if there is an authenticated user.\n\nThis hook requires "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "user authentication",
														"target": 852
													},
													{
														"kind": "text",
														"text": "."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminGetSession } from \"medusa-react\"\n\nconst Profile = () => {\n  const { user, isLoading } = useAdminGetSession()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {user && <span>{user.email}</span>}\n    </div>\n  )\n}\n\nexport default Profile\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 839,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/auth/index.d.ts",
																			"qualifiedName": "AdminAuthRes"
																		},
																		"name": "AdminAuthRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_auth"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 840,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 842,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 841,
																	"name": "user",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa/dist/models/user.d.ts",
																					"qualifiedName": "User"
																				},
																				"name": "User",
																				"package": "@medusajs/medusa"
																			},
																			{
																				"type": "literal",
																				"value": "password_hash"
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		842,
																		841
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 843,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 845,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 844,
																	"name": "user",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa/dist/models/user.d.ts",
																					"qualifiedName": "User"
																				},
																				"name": "User",
																				"package": "@medusajs/medusa"
																			},
																			{
																				"type": "literal",
																				"value": "password_hash"
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		845,
																		844
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 846,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 848,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 847,
																	"name": "user",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa/dist/models/user.d.ts",
																					"qualifiedName": "User"
																				},
																				"name": "User",
																				"package": "@medusajs/medusa"
																			},
																			{
																				"type": "literal",
																				"value": "password_hash"
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		848,
																		847
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 849,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 851,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 850,
																	"name": "user",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa/dist/models/user.d.ts",
																					"qualifiedName": "User"
																				},
																				"name": "User",
																				"package": "@medusajs/medusa"
																			},
																			{
																				"type": "literal",
																				"value": "password_hash"
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		851,
																		850
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										852,
										855,
										837
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										837
									]
								},
								{
									"title": "Mutations",
									"children": [
										852,
										855
									]
								}
							]
						},
						{
							"id": 9,
							"name": "Batch Jobs",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and mutations listed here are used to send requests to the [Admin Batch Job API Routes](https://docs.medusajs.com/api/admin#batch-jobs).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 852
									},
									{
										"kind": "text",
										"text": ".\n\nA batch job is a task that is performed by the Medusa backend asynchronusly. For example, the Import Product feature is implemented using batch jobs.\nThe methods in this class allow admins to manage the batch jobs and their state.\n\nRelated Guide: [How to import products](https://docs.medusajs.com/modules/products/admin/import-products)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 905,
									"name": "useAdminCreateBatchJob",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 906,
											"name": "useAdminCreateBatchJob",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a Batch Job to be executed asynchronously in the Medusa backend. If "
													},
													{
														"kind": "code",
														"text": "`dry_run`"
													},
													{
														"kind": "text",
														"text": " is set to "
													},
													{
														"kind": "code",
														"text": "`true`"
													},
													{
														"kind": "text",
														"text": ", the batch job will not be executed until the it is confirmed,\nwhich can be done using the "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "useAdminConfirmBatchJob",
														"target": 912,
														"tsLinkText": ""
													},
													{
														"kind": "text",
														"text": " hook."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateBatchJob } from \"medusa-react\"\n\nconst CreateBatchJob = () => {\n  const createBatchJob = useAdminCreateBatchJob()\n  // ...\n\n  const handleCreateBatchJob = () => {\n    createBatchJob.mutate({\n      type: \"publish-products\",\n      context: {},\n      dry_run: true\n    }, {\n      onSuccess: ({ batch_job }) => {\n        console.log(batch_job)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateBatchJob\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 907,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/batch/index.d.ts",
																			"qualifiedName": "AdminBatchJobRes"
																		},
																		"name": "AdminBatchJobRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/batch/create-batch-job.d.ts",
																	"qualifiedName": "AdminPostBatchesReq"
																},
																"name": "AdminPostBatchesReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/batch/index.d.ts",
																	"qualifiedName": "AdminBatchJobRes"
																},
																"name": "AdminBatchJobRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/batch/create-batch-job.d.ts",
															"qualifiedName": "AdminPostBatchesReq"
														},
														"name": "AdminPostBatchesReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 908,
									"name": "useAdminCancelBatchJob",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 909,
											"name": "useAdminCancelBatchJob",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook marks a batch job as canceled. When a batch job is canceled, the processing of the batch job doesn’t automatically stop."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCancelBatchJob } from \"medusa-react\"\n\ntype Props = {\n  batchJobId: string\n}\n\nconst BatchJob = ({ batchJobId }: Props) => {\n  const cancelBatchJob = useAdminCancelBatchJob(batchJobId)\n  // ...\n\n  const handleCancel = () => {\n    cancelBatchJob.mutate(undefined, {\n      onSuccess: ({ batch_job }) => {\n        console.log(batch_job)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default BatchJob\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 910,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The ID of the batch job."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 911,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/batch/index.d.ts",
																			"qualifiedName": "AdminBatchJobRes"
																		},
																		"name": "AdminBatchJobRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/batch/index.d.ts",
																	"qualifiedName": "AdminBatchJobRes"
																},
																"name": "AdminBatchJobRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 859,
									"name": "useAdminBatchJobs",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 860,
											"name": "useAdminBatchJobs",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of Batch Jobs. The batch jobs can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`type`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`confirmed_at`"
													},
													{
														"kind": "text",
														"text": ". The batch jobs can also be sorted or paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list batch jobs:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminBatchJobs } from \"medusa-react\"\n\nconst BatchJobs = () => {\n  const { \n    batch_jobs, \n    limit,\n    offset,\n    count,\n    isLoading\n  } = useAdminBatchJobs()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {batch_jobs?.length && (\n        <ul>\n          {batch_jobs.map((batchJob) => (\n            <li key={batchJob.id}>\n              {batchJob.id}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default BatchJobs\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved within the batch jobs:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminBatchJobs } from \"medusa-react\"\n\nconst BatchJobs = () => {\n  const { \n    batch_jobs, \n    limit,\n    offset,\n    count,\n    isLoading\n  } = useAdminBatchJobs({\n    expand: \"created_by_user\",\n    limit: 10,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {batch_jobs?.length && (\n        <ul>\n          {batch_jobs.map((batchJob) => (\n            <li key={batchJob.id}>\n              {batchJob.id}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default BatchJobs\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`10`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminBatchJobs } from \"medusa-react\"\n\nconst BatchJobs = () => {\n  const { \n    batch_jobs, \n    limit,\n    offset,\n    count,\n    isLoading\n  } = useAdminBatchJobs({\n    expand: \"created_by_user\",\n    limit: 20,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {batch_jobs?.length && (\n        <ul>\n          {batch_jobs.map((batchJob) => (\n            <li key={batchJob.id}>\n              {batchJob.id}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default BatchJobs\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 861,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved batch jobs."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/batch/list-batch-jobs.d.ts",
															"qualifiedName": "AdminGetBatchParams"
														},
														"name": "AdminGetBatchParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 862,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/batch/index.d.ts",
																			"qualifiedName": "AdminBatchJobListRes"
																		},
																		"name": "AdminBatchJobListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_batches"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 863,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 864,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						864
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 865,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 870,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 869,
																	"name": "batch_jobs",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/batch-job.d.ts",
																				"qualifiedName": "BatchJob"
																			},
																			"name": "BatchJob",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 866,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 867,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 868,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		870,
																		869,
																		866,
																		867,
																		868
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 871,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 876,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 875,
																	"name": "batch_jobs",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/batch-job.d.ts",
																				"qualifiedName": "BatchJob"
																			},
																			"name": "BatchJob",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 872,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 873,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 874,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		876,
																		875,
																		872,
																		873,
																		874
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 877,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 882,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 881,
																	"name": "batch_jobs",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/batch-job.d.ts",
																				"qualifiedName": "BatchJob"
																			},
																			"name": "BatchJob",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 878,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 879,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 880,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		882,
																		881,
																		878,
																		879,
																		880
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 883,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 888,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 887,
																	"name": "batch_jobs",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/batch-job.d.ts",
																				"qualifiedName": "BatchJob"
																			},
																			"name": "BatchJob",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 884,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 885,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 886,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		888,
																		887,
																		884,
																		885,
																		886
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 889,
									"name": "useAdminBatchJob",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 890,
											"name": "useAdminBatchJob",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves the details of a batch job."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminBatchJob } from \"medusa-react\"\n\ntype Props = {\n  batchJobId: string\n}\n\nconst BatchJob = ({ batchJobId }: Props) => {\n  const { batch_job, isLoading } = useAdminBatchJob(batchJobId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {batch_job && <span>{batch_job.created_by}</span>}\n    </div>\n  )\n}\n\nexport default BatchJob\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 891,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The ID of the batch job."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 892,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/batch/index.d.ts",
																			"qualifiedName": "AdminBatchJobRes"
																		},
																		"name": "AdminBatchJobRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_batches"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 893,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 895,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 894,
																	"name": "batch_job",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/batch-job.d.ts",
																			"qualifiedName": "BatchJob"
																		},
																		"name": "BatchJob",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		895,
																		894
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 896,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 898,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 897,
																	"name": "batch_job",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/batch-job.d.ts",
																			"qualifiedName": "BatchJob"
																		},
																		"name": "BatchJob",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		898,
																		897
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 899,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 901,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 900,
																	"name": "batch_job",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/batch-job.d.ts",
																			"qualifiedName": "BatchJob"
																		},
																		"name": "BatchJob",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		901,
																		900
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 902,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 904,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 903,
																	"name": "batch_job",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/batch-job.d.ts",
																			"qualifiedName": "BatchJob"
																		},
																		"name": "BatchJob",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		904,
																		903
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										905,
										908,
										859,
										889
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										859,
										889
									]
								},
								{
									"title": "Mutations",
									"children": [
										905,
										908
									]
								}
							]
						},
						{
							"id": 10,
							"name": "Claims",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Mutations listed here are used to send requests to the [Admin Order API Routes related to claims](https://docs.medusajs.com/api/admin#orders).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 852
									},
									{
										"kind": "text",
										"text": ".\n\nA claim represents a return or replacement request of order items. It allows refunding the customer or replacing some or all of its\norder items with new items.\n\nRelated Guide: [How to manage claims](https://docs.medusajs.com/modules/orders/admin/manage-claims)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 916,
									"name": "useAdminCreateClaim",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 917,
											"name": "useAdminCreateClaim",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a claim for an order. If a return shipping method is specified, a return will also be created and associated with the claim. If the claim's type is "
													},
													{
														"kind": "code",
														"text": "`refund`"
													},
													{
														"kind": "text",
														"text": ",\nthe refund is processed as well."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateClaim } from \"medusa-react\"\n\ntype Props = {\n  orderId: string\n}\n\nconst CreateClaim = ({ orderId }: Props) => {\n  const createClaim = useAdminCreateClaim(orderId)\n  // ...\n\n  const handleCreate = (itemId: string) => {\n    createClaim.mutate({\n      type: \"refund\",\n      claim_items: [\n        {\n          item_id: itemId,\n          quantity: 1,\n        },\n      ],\n    }, {\n      onSuccess: ({ order }) => {\n        console.log(order.claims)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateClaim\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 918,
													"name": "orderId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The ID of the order the claim is associated with."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 919,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/create-claim.d.ts",
																	"qualifiedName": "AdminPostOrdersOrderClaimsReq"
																},
																"name": "AdminPostOrdersOrderClaimsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/create-claim.d.ts",
															"qualifiedName": "AdminPostOrdersOrderClaimsReq"
														},
														"name": "AdminPostOrdersOrderClaimsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 923,
									"name": "useAdminUpdateClaim",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 924,
											"name": "useAdminUpdateClaim",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a claim's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateClaim } from \"medusa-react\"\n\ntype Props = {\n  orderId: string\n  claimId: string\n}\n\nconst Claim = ({ orderId, claimId }: Props) => {\n  const updateClaim = useAdminUpdateClaim(orderId)\n  // ...\n\n  const handleUpdate = () => {\n    updateClaim.mutate({\n      claim_id: claimId,\n      no_notification: false\n    }, {\n      onSuccess: ({ order }) => {\n        console.log(order.claims)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Claim\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 925,
													"name": "orderId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The ID of the order the claim is associated with."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 926,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": 920,
																"name": "AdminUpdateClaimReq",
																"package": "medusa-react"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": 920,
														"name": "AdminUpdateClaimReq",
														"package": "medusa-react"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 927,
									"name": "useAdminCancelClaim",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 928,
											"name": "useAdminCancelClaim",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook cancels a claim and change its status. A claim can't be canceled if it has a refund, if its fulfillments haven't been canceled, \nof if its associated return hasn't been canceled."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "string - The claim's ID."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCancelClaim } from \"medusa-react\"\n\ntype Props = {\n  orderId: string\n  claimId: string\n}\n\nconst Claim = ({ orderId, claimId }: Props) => {\n  const cancelClaim = useAdminCancelClaim(orderId)\n  // ...\n\n  const handleCancel = () => {\n    cancelClaim.mutate(claimId)\n  }\n\n  // ...\n}\n\nexport default Claim\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 929,
													"name": "orderId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The ID of the order the claim is associated with."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 930,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 934,
									"name": "useAdminFulfillClaim",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 935,
											"name": "useAdminFulfillClaim",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a Fulfillment for a Claim, and change its fulfillment status to "
													},
													{
														"kind": "code",
														"text": "`partially_fulfilled`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`fulfilled`"
													},
													{
														"kind": "text",
														"text": " depending on whether all the items were fulfilled.\nIt may also change the status to "
													},
													{
														"kind": "code",
														"text": "`requires_action`"
													},
													{
														"kind": "text",
														"text": " if any actions are required."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminFulfillClaim } from \"medusa-react\"\n\ntype Props = {\n  orderId: string\n  claimId: string\n}\n\nconst Claim = ({ orderId, claimId }: Props) => {\n  const fulfillClaim = useAdminFulfillClaim(orderId)\n  // ...\n\n  const handleFulfill = () => {\n    fulfillClaim.mutate({\n      claim_id: claimId,\n    }, {\n      onSuccess: ({ order }) => {\n        console.log(order.claims)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Claim\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 936,
													"name": "orderId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The ID of the order the claim is associated with."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 937,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": 931,
																"name": "AdminFulfillClaimReq",
																"package": "medusa-react"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": 931,
														"name": "AdminFulfillClaimReq",
														"package": "medusa-react"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 942,
									"name": "useAdminCancelClaimFulfillment",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 943,
											"name": "useAdminCancelClaimFulfillment",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook cancels a claim's fulfillment and change its fulfillment status to "
													},
													{
														"kind": "code",
														"text": "`canceled`"
													},
													{
														"kind": "text",
														"text": "."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCancelClaimFulfillment } from \"medusa-react\"\n\ntype Props = {\n  orderId: string\n  claimId: string\n}\n\nconst Claim = ({ orderId, claimId }: Props) => {\n  const cancelFulfillment = useAdminCancelClaimFulfillment(\n    orderId\n  )\n  // ...\n\n  const handleCancel = (fulfillmentId: string) => {\n    cancelFulfillment.mutate({\n      claim_id: claimId,\n      fulfillment_id: fulfillmentId,\n    }, {\n      onSuccess: ({ order }) => {\n        console.log(order.claims)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Claim\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 944,
													"name": "orderId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The ID of the order the claim is associated with."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 945,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": 938,
																"name": "AdminCancelClaimFulfillmentReq",
																"package": "medusa-react"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": 938,
														"name": "AdminCancelClaimFulfillmentReq",
														"package": "medusa-react"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 946,
									"name": "useAdminCreateClaimShipment",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 947,
											"name": "useAdminCreateClaimShipment",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a shipment for the claim and mark its fulfillment as shipped. If the shipment is created successfully, this changes the claim's fulfillment status\nto either "
													},
													{
														"kind": "code",
														"text": "`partially_shipped`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`shipped`"
													},
													{
														"kind": "text",
														"text": ", depending on whether all the items were shipped."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateClaimShipment } from \"medusa-react\"\n\ntype Props = {\n  orderId: string\n  claimId: string\n}\n\nconst Claim = ({ orderId, claimId }: Props) => {\n  const createShipment = useAdminCreateClaimShipment(orderId)\n  // ...\n\n  const handleCreateShipment = (fulfillmentId: string) => {\n    createShipment.mutate({\n      claim_id: claimId,\n      fulfillment_id: fulfillmentId,\n    }, {\n      onSuccess: ({ order }) => {\n        console.log(order.claims)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Claim\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 948,
													"name": "orderId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The ID of the order the claim is associated with."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 949,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intersection",
																"types": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/create-claim-shipment.d.ts",
																			"qualifiedName": "AdminPostOrdersOrderClaimsClaimShipmentsReq"
																		},
																		"name": "AdminPostOrdersOrderClaimsClaimShipmentsReq",
																		"package": "@medusajs/medusa"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 950,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 951,
																					"name": "claim_id",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"comment": {
																						"summary": [
																							{
																								"kind": "text",
																								"text": "The claim's ID."
																							}
																						]
																					},
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						951
																					]
																				}
																			]
																		}
																	}
																]
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intersection",
														"types": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/create-claim-shipment.d.ts",
																	"qualifiedName": "AdminPostOrdersOrderClaimsClaimShipmentsReq"
																},
																"name": "AdminPostOrdersOrderClaimsClaimShipmentsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 952,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 953,
																			"name": "claim_id",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "The claim's ID."
																					}
																				]
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				953
																			]
																		}
																	]
																}
															}
														]
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										916,
										923,
										927,
										934,
										942,
										946
									]
								}
							],
							"categories": [
								{
									"title": "Mutations",
									"children": [
										916,
										923,
										927,
										934,
										942,
										946
									]
								}
							]
						},
						{
							"id": 11,
							"name": "Product Collections",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Product Collection API Routes](https://docs.medusajs.com/api/admin#product-collections).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 852
									},
									{
										"kind": "text",
										"text": ".\n\nA product collection is used to organize products for different purposes such as marketing or discount purposes. For example, you can create a Summer Collection."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 1001,
									"name": "useAdminCreateCollection",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1002,
											"name": "useAdminCreateCollection",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a product collection."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateCollection } from \"medusa-react\"\n\nconst CreateCollection = () => {\n  const createCollection = useAdminCreateCollection()\n  // ...\n\n  const handleCreate = (title: string) => {\n    createCollection.mutate({\n      title\n    }, {\n      onSuccess: ({ collection }) => {\n        console.log(collection.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateCollection\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1003,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/index.d.ts",
																			"qualifiedName": "AdminCollectionsRes"
																		},
																		"name": "AdminCollectionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/create-collection.d.ts",
																	"qualifiedName": "AdminPostCollectionsReq"
																},
																"name": "AdminPostCollectionsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/index.d.ts",
																	"qualifiedName": "AdminCollectionsRes"
																},
																"name": "AdminCollectionsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/create-collection.d.ts",
															"qualifiedName": "AdminPostCollectionsReq"
														},
														"name": "AdminPostCollectionsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1004,
									"name": "useAdminUpdateCollection",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1005,
											"name": "useAdminUpdateCollection",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a product collection's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateCollection } from \"medusa-react\"\n\ntype Props = {\n  collectionId: string\n}\n\nconst Collection = ({ collectionId }: Props) => {\n  const updateCollection = useAdminUpdateCollection(collectionId)\n  // ...\n\n  const handleUpdate = (title: string) => {\n    updateCollection.mutate({\n      title\n    }, {\n      onSuccess: ({ collection }) => {\n        console.log(collection.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Collection\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1006,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product collection's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1007,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/index.d.ts",
																			"qualifiedName": "AdminCollectionsRes"
																		},
																		"name": "AdminCollectionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/update-collection.d.ts",
																	"qualifiedName": "AdminPostCollectionsCollectionReq"
																},
																"name": "AdminPostCollectionsCollectionReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/index.d.ts",
																	"qualifiedName": "AdminCollectionsRes"
																},
																"name": "AdminCollectionsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/update-collection.d.ts",
															"qualifiedName": "AdminPostCollectionsCollectionReq"
														},
														"name": "AdminPostCollectionsCollectionReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1008,
									"name": "useAdminDeleteCollection",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1009,
											"name": "useAdminDeleteCollection",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a product collection. This does not delete associated products."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteCollection } from \"medusa-react\"\n\ntype Props = {\n  collectionId: string\n}\n\nconst Collection = ({ collectionId }: Props) => {\n  const deleteCollection = useAdminDeleteCollection(collectionId)\n  // ...\n\n  const handleDelete = (title: string) => {\n    deleteCollection.mutate(void 0, {\n      onSuccess: ({ id, object, deleted }) => {\n        console.log(id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Collection\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1010,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product collection's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1011,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																			"qualifiedName": "DeleteResponse"
																		},
																		"name": "DeleteResponse",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1012,
									"name": "useAdminAddProductsToCollection",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1013,
											"name": "useAdminAddProductsToCollection",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook adds products to a collection."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminAddProductsToCollection } from \"medusa-react\"\n\ntype Props = {\n  collectionId: string\n}\n\nconst Collection = ({ collectionId }: Props) => {\n  const addProducts = useAdminAddProductsToCollection(collectionId)\n  // ...\n\n  const handleAddProducts = (productIds: string[]) => {\n    addProducts.mutate({\n      product_ids: productIds\n    }, {\n      onSuccess: ({ collection }) => {\n        console.log(collection.products)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Collection\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1014,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product collection's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1015,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/index.d.ts",
																			"qualifiedName": "AdminCollectionsRes"
																		},
																		"name": "AdminCollectionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/add-products.d.ts",
																	"qualifiedName": "AdminPostProductsToCollectionReq"
																},
																"name": "AdminPostProductsToCollectionReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/index.d.ts",
																	"qualifiedName": "AdminCollectionsRes"
																},
																"name": "AdminCollectionsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/add-products.d.ts",
															"qualifiedName": "AdminPostProductsToCollectionReq"
														},
														"name": "AdminPostProductsToCollectionReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1016,
									"name": "useAdminRemoveProductsFromCollection",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1017,
											"name": "useAdminRemoveProductsFromCollection",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook removes a list of products from a collection. This would not delete the product, \nonly the association between the product and the collection."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminRemoveProductsFromCollection } from \"medusa-react\"\n\ntype Props = {\n  collectionId: string\n}\n\nconst Collection = ({ collectionId }: Props) => {\n  const removeProducts = useAdminRemoveProductsFromCollection(collectionId)\n  // ...\n\n  const handleRemoveProducts = (productIds: string[]) => {\n    removeProducts.mutate({\n      product_ids: productIds\n    }, {\n      onSuccess: ({ id, object, removed_products }) => {\n        console.log(removed_products)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Collection\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1018,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product collection's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1019,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/index.d.ts",
																			"qualifiedName": "AdminDeleteProductsFromCollectionRes"
																		},
																		"name": "AdminDeleteProductsFromCollectionRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/remove-products.d.ts",
																	"qualifiedName": "AdminDeleteProductsFromCollectionReq"
																},
																"name": "AdminDeleteProductsFromCollectionReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/index.d.ts",
																	"qualifiedName": "AdminDeleteProductsFromCollectionRes"
																},
																"name": "AdminDeleteProductsFromCollectionRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/remove-products.d.ts",
															"qualifiedName": "AdminDeleteProductsFromCollectionReq"
														},
														"name": "AdminDeleteProductsFromCollectionReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 955,
									"name": "useAdminCollections",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 956,
											"name": "useAdminCollections",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of product collections. The product collections can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`handle`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`title`"
													},
													{
														"kind": "text",
														"text": ".\nThe collections can also be sorted or paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list product collections:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminCollections } from \"medusa-react\"\n\nconst Collections = () => {\n  const { collections, isLoading } = useAdminCollections()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {collections && !collections.length && <span>\n        No Product Collections\n      </span>}\n      {collections && collections.length > 0 && (\n        <ul>\n          {collections.map((collection) => (\n            <li key={collection.id}>{collection.title}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Collections\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`10`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminCollections } from \"medusa-react\"\n\nconst Collections = () => {\n  const { collections, limit, offset, isLoading } = useAdminCollections({\n    limit: 15,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {collections && !collections.length && <span>\n        No Product Collections\n      </span>}\n      {collections && collections.length > 0 && (\n        <ul>\n          {collections.map((collection) => (\n            <li key={collection.id}>{collection.title}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Collections\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 957,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved product collections."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/list-collections.d.ts",
															"qualifiedName": "AdminGetCollectionsParams"
														},
														"name": "AdminGetCollectionsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 958,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/index.d.ts",
																			"qualifiedName": "AdminCollectionsListRes"
																		},
																		"name": "AdminCollectionsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_collections"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 959,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 960,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						960
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 961,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 966,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 965,
																	"name": "collections",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-collection.d.ts",
																				"qualifiedName": "ProductCollection"
																			},
																			"name": "ProductCollection",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 962,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 963,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 964,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		966,
																		965,
																		962,
																		963,
																		964
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 967,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 972,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 971,
																	"name": "collections",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-collection.d.ts",
																				"qualifiedName": "ProductCollection"
																			},
																			"name": "ProductCollection",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 968,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 969,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 970,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		972,
																		971,
																		968,
																		969,
																		970
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 973,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 978,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 977,
																	"name": "collections",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-collection.d.ts",
																				"qualifiedName": "ProductCollection"
																			},
																			"name": "ProductCollection",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 974,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 975,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 976,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		978,
																		977,
																		974,
																		975,
																		976
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 979,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 984,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 983,
																	"name": "collections",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-collection.d.ts",
																				"qualifiedName": "ProductCollection"
																			},
																			"name": "ProductCollection",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 980,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 981,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 982,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		984,
																		983,
																		980,
																		981,
																		982
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 985,
									"name": "useAdminCollection",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 986,
											"name": "useAdminCollection",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a product collection by its ID. The products associated with it are expanded and returned as well."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCollection } from \"medusa-react\"\n\ntype Props = {\n  collectionId: string\n}\n\nconst Collection = ({ collectionId }: Props) => {\n  const { collection, isLoading } = useAdminCollection(collectionId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {collection && <span>{collection.title}</span>}\n    </div>\n  )\n}\n\nexport default Collection\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 987,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product collection's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 988,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/index.d.ts",
																			"qualifiedName": "AdminCollectionsRes"
																		},
																		"name": "AdminCollectionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_collections"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 989,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 991,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 990,
																	"name": "collection",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/product-collection.d.ts",
																			"qualifiedName": "ProductCollection"
																		},
																		"name": "ProductCollection",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		991,
																		990
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 992,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 994,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 993,
																	"name": "collection",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/product-collection.d.ts",
																			"qualifiedName": "ProductCollection"
																		},
																		"name": "ProductCollection",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		994,
																		993
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 995,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 997,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 996,
																	"name": "collection",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/product-collection.d.ts",
																			"qualifiedName": "ProductCollection"
																		},
																		"name": "ProductCollection",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		997,
																		996
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 998,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1000,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 999,
																	"name": "collection",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/product-collection.d.ts",
																			"qualifiedName": "ProductCollection"
																		},
																		"name": "ProductCollection",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1000,
																		999
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										1001,
										1004,
										1008,
										1012,
										1016,
										955,
										985
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										955,
										985
									]
								},
								{
									"title": "Mutations",
									"children": [
										1001,
										1004,
										1008,
										1012,
										1016
									]
								}
							]
						},
						{
							"id": 12,
							"name": "Currencies",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Currency API Routes](https://docs.medusajs.com/api/admin#currencies).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 852
									},
									{
										"kind": "text",
										"text": ".\n\nA store can use unlimited currencies, and each region must be associated with at least one currency.\nCurrencies are defined within the Medusa backend. The methods in this class allow admins to list and update currencies.\n\nRelated Guide: [How to manage currencies](https://docs.medusajs.com/modules/regions-and-currencies/admin/manage-currencies)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 1020,
									"name": "useAdminUpdateCurrency",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1021,
											"name": "useAdminUpdateCurrency",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a currency's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateCurrency } from \"medusa-react\"\n\ntype Props = {\n  currencyCode: string\n}\n\nconst Currency = ({ currencyCode }: Props) => {\n  const updateCurrency = useAdminUpdateCurrency(currencyCode)\n  // ...\n\n  const handleUpdate = (includes_tax: boolean) => {\n    updateCurrency.mutate({\n      includes_tax,\n    }, {\n      onSuccess: ({ currency }) => {\n        console.log(currency)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Currency\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1022,
													"name": "code",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The currency's code."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1023,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/currencies/index.d.ts",
																			"qualifiedName": "AdminCurrenciesRes"
																		},
																		"name": "AdminCurrenciesRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/currencies/update-currency.d.ts",
																	"qualifiedName": "AdminPostCurrenciesCurrencyReq"
																},
																"name": "AdminPostCurrenciesCurrencyReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/currencies/index.d.ts",
																	"qualifiedName": "AdminCurrenciesRes"
																},
																"name": "AdminCurrenciesRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/currencies/update-currency.d.ts",
															"qualifiedName": "AdminPostCurrenciesCurrencyReq"
														},
														"name": "AdminPostCurrenciesCurrencyReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1025,
									"name": "useAdminCurrencies",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1026,
											"name": "useAdminCurrencies",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of currencies. The currencies can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`code`"
													},
													{
														"kind": "text",
														"text": ". \nThe currencies can also be sorted or paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list currencies:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCurrencies } from \"medusa-react\"\n\nconst Currencies = () => {\n  const { currencies, isLoading } = useAdminCurrencies()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {currencies && !currencies.length && (\n        <span>No Currencies</span>\n      )}\n      {currencies && currencies.length > 0 && (\n        <ul>\n          {currencies.map((currency) => (\n            <li key={currency.code}>{currency.name}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Currencies\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`20`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCurrencies } from \"medusa-react\"\n\nconst Currencies = () => {\n  const { currencies, limit, offset, isLoading } = useAdminCurrencies({\n    limit: 10,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {currencies && !currencies.length && (\n        <span>No Currencies</span>\n      )}\n      {currencies && currencies.length > 0 && (\n        <ul>\n          {currencies.map((currency) => (\n            <li key={currency.code}>{currency.name}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Currencies\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1027,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on retrieved currencies."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/currencies/list-currencies.d.ts",
															"qualifiedName": "AdminGetCurrenciesParams"
														},
														"name": "AdminGetCurrenciesParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 1028,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/currencies/index.d.ts",
																			"qualifiedName": "AdminCurrenciesListRes"
																		},
																		"name": "AdminCurrenciesListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_currencies"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 1029,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 1030,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						1030
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 1031,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1036,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1035,
																	"name": "currencies",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/currency.d.ts",
																				"qualifiedName": "Currency"
																			},
																			"name": "Currency",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 1032,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1033,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1034,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1036,
																		1035,
																		1032,
																		1033,
																		1034
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1037,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1042,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1041,
																	"name": "currencies",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/currency.d.ts",
																				"qualifiedName": "Currency"
																			},
																			"name": "Currency",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 1038,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1039,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1040,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1042,
																		1041,
																		1038,
																		1039,
																		1040
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1043,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1048,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1047,
																	"name": "currencies",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/currency.d.ts",
																				"qualifiedName": "Currency"
																			},
																			"name": "Currency",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 1044,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1045,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1046,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1048,
																		1047,
																		1044,
																		1045,
																		1046
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1049,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1054,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1053,
																	"name": "currencies",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/currency.d.ts",
																				"qualifiedName": "Currency"
																			},
																			"name": "Currency",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 1050,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1051,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1052,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1054,
																		1053,
																		1050,
																		1051,
																		1052
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										1020,
										1025
									]
								}
							],
							"categories": [
								{
									"title": "Mutations",
									"children": [
										1020
									]
								},
								{
									"title": "Queries",
									"children": [
										1025
									]
								}
							]
						},
						{
							"id": 13,
							"name": "Custom",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This class is used to send requests custom API Routes. All its method\nare available in the JS Client under the "
									},
									{
										"kind": "code",
										"text": "`medusa.admin.custom`"
									},
									{
										"kind": "text",
										"text": " property."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 1062,
									"name": "useAdminCustomPost",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1063,
											"name": "useAdminCustomPost",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook sends a "
													},
													{
														"kind": "code",
														"text": "`POST`"
													},
													{
														"kind": "text",
														"text": " request to a custom API Route."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "TResponse - The response based on the specified type for "
															},
															{
																"kind": "code",
																"text": "`TResponse`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "TPayload - The payload based on the specified type for "
															},
															{
																"kind": "code",
																"text": "`TPayload`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCustomPost } from \"medusa-react\"\nimport Post from \"./models/Post\"\n\ntype PostRequest = {\n  title: string\n}\ntype PostResponse = {\n  post: Post\n}\n\nconst Custom = () => {\n  const customPost = useAdminCustomPost\n  <PostRequest, PostResponse>(\n    \"/blog/posts\",\n    [\"posts\"]\n  )\n\n  // ...\n\n  const handleAction = (title: string) => {\n    customPost.mutate({\n      title\n    }, {\n      onSuccess: ({ post }) => {\n        console.log(post)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Custom\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"typeParameter": [
												{
													"id": 1064,
													"name": "TPayload",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The type of accepted body parameters which defaults to "
															},
															{
																"kind": "code",
																"text": "`Record<string, any>`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												},
												{
													"id": 1065,
													"name": "TResponse",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The type of response, which defaults to "
															},
															{
																"kind": "code",
																"text": "`any`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													}
												}
											],
											"parameters": [
												{
													"id": 1066,
													"name": "path",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The path to the custom endpoint."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1067,
													"name": "queryKey",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "A list of query keys, used to invalidate data."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../node_modules/@tanstack/query-core/build/lib/types.d.ts",
															"qualifiedName": "QueryKey"
														},
														"name": "QueryKey",
														"package": "@tanstack/query-core"
													}
												},
												{
													"id": 1068,
													"name": "relatedDomains",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "A list of related domains that should be invalidated and refetch when the mutation\nfunction is invoked."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/mutations.ts",
															"qualifiedName": "RelatedDomains"
														},
														"name": "RelatedDomains",
														"package": "medusa-react"
													}
												},
												{
													"id": 1069,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 1065,
																		"name": "TResponse",
																		"package": "medusa-react",
																		"refersToTypeParameter": true
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": 1064,
																"name": "TPayload",
																"package": "medusa-react",
																"refersToTypeParameter": true
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 1065,
																"name": "TResponse",
																"package": "medusa-react",
																"refersToTypeParameter": true
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": 1064,
														"name": "TPayload",
														"package": "medusa-react",
														"refersToTypeParameter": true
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1055,
									"name": "useAdminCustomDelete",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1056,
											"name": "useAdminCustomDelete",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook sends a "
													},
													{
														"kind": "code",
														"text": "`DELETE`"
													},
													{
														"kind": "text",
														"text": " request to a custom API Route."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "TResponse - The response based on the type provided for "
															},
															{
																"kind": "code",
																"text": "`TResponse`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCustomDelete } from \"medusa-react\"\n\ntype Props = {\n  customId: string\n}\n\nconst Custom = ({ customId }: Props) => {\n  const customDelete = useAdminCustomDelete(\n    `/blog/posts/${customId}`,\n    [\"posts\"]\n  )\n\n  // ...\n\n  const handleAction = (title: string) => {\n    customDelete.mutate(void 0, {\n      onSuccess: () => {\n        // Delete action successful\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Custom\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"typeParameter": [
												{
													"id": 1057,
													"name": "TResponse",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The response's type which defaults to "
															},
															{
																"kind": "code",
																"text": "`any`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													}
												}
											],
											"parameters": [
												{
													"id": 1058,
													"name": "path",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The path to the custom endpoint."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1059,
													"name": "queryKey",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "A list of query keys, used to invalidate data."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../node_modules/@tanstack/query-core/build/lib/types.d.ts",
															"qualifiedName": "QueryKey"
														},
														"name": "QueryKey",
														"package": "@tanstack/query-core"
													}
												},
												{
													"id": 1060,
													"name": "relatedDomains",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "A list of related domains that should be invalidated and refetch when the mutation\nfunction is invoked."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/mutations.ts",
															"qualifiedName": "RelatedDomains"
														},
														"name": "RelatedDomains",
														"package": "medusa-react"
													}
												},
												{
													"id": 1061,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 1057,
																		"name": "TResponse",
																		"package": "medusa-react",
																		"refersToTypeParameter": true
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 1057,
																"name": "TResponse",
																"package": "medusa-react",
																"refersToTypeParameter": true
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1070,
									"name": "useAdminCustomQuery",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1071,
											"name": "useAdminCustomQuery",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook sends a "
													},
													{
														"kind": "code",
														"text": "`GET`"
													},
													{
														"kind": "text",
														"text": " request to a custom API Route."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "TQuery - The query parameters based on the type specified for "
															},
															{
																"kind": "code",
																"text": "`TQuery`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "TResponse - The response based on the type specified for "
															},
															{
																"kind": "code",
																"text": "`TResponse`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCustomQuery } from \"medusa-react\"\nimport Post from \"./models/Post\"\n\ntype RequestQuery = {\n  title: string\n}\n\ntype ResponseData = {\n  posts: Post\n}\n\nconst Custom = () => {\n  const { data, isLoading } = useAdminCustomQuery\n    <RequestQuery, ResponseData>(\n      \"/blog/posts\",\n      [\"posts\"],\n      {\n        title: \"My post\"\n      }\n    )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {data?.posts && !data.posts.length && (\n        <span>No Post</span>\n      )}\n      {data?.posts && data.posts?.length > 0 && (\n        <ul>\n          {data.posts.map((post) => (\n            <li key={post.id}>{post.title}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Custom\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"typeParameter": [
												{
													"id": 1072,
													"name": "TQuery",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The type of accepted query parameters which defaults to "
															},
															{
																"kind": "code",
																"text": "`Record<string, any>`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												},
												{
													"id": 1073,
													"name": "TResponse",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The type of response which defaults to "
															},
															{
																"kind": "code",
																"text": "`any`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"default": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"parameters": [
												{
													"id": 1074,
													"name": "path",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The path to the custom endpoint."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1075,
													"name": "queryKey",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "A list of query keys, used to invalidate data."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../node_modules/@tanstack/query-core/build/lib/types.d.ts",
															"qualifiedName": "QueryKey"
														},
														"name": "QueryKey",
														"package": "@tanstack/query-core"
													}
												},
												{
													"id": 1076,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Query parameters to pass to the request."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": 1072,
														"name": "TQuery",
														"package": "medusa-react",
														"refersToTypeParameter": true
													}
												},
												{
													"id": 1077,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 1073,
																		"name": "TResponse",
																		"package": "medusa-react",
																		"refersToTypeParameter": true
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "undefined"
																		},
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../node_modules/@tanstack/query-core/build/lib/types.d.ts",
																				"qualifiedName": "QueryKey"
																			},
																			"name": "QueryKey",
																			"package": "@tanstack/query-core"
																		},
																		{
																			"type": "reference",
																			"target": 1072,
																			"name": "TQuery",
																			"package": "medusa-react",
																			"refersToTypeParameter": true
																		}
																	]
																}
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 1078,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1079,
																	"name": "data",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																					"qualifiedName": "Response"
																				},
																				"typeArguments": [
																					{
																						"type": "reference",
																						"target": 1073,
																						"name": "TResponse",
																						"package": "medusa-react",
																						"refersToTypeParameter": true
																					}
																				],
																				"name": "Response",
																				"package": "@medusajs/medusa-js"
																			}
																		]
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1079
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1080,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1081,
																	"name": "data",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																					"qualifiedName": "Response"
																				},
																				"typeArguments": [
																					{
																						"type": "reference",
																						"target": 1073,
																						"name": "TResponse",
																						"package": "medusa-react",
																						"refersToTypeParameter": true
																					}
																				],
																				"name": "Response",
																				"package": "@medusajs/medusa-js"
																			}
																		]
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1081
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1082,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1083,
																	"name": "data",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																					"qualifiedName": "Response"
																				},
																				"typeArguments": [
																					{
																						"type": "reference",
																						"target": 1073,
																						"name": "TResponse",
																						"package": "medusa-react",
																						"refersToTypeParameter": true
																					}
																				],
																				"name": "Response",
																				"package": "@medusajs/medusa-js"
																			}
																		]
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1083
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1084,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1085,
																	"name": "data",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																					"qualifiedName": "Response"
																				},
																				"typeArguments": [
																					{
																						"type": "reference",
																						"target": 1073,
																						"name": "TResponse",
																						"package": "medusa-react",
																						"refersToTypeParameter": true
																					}
																				],
																				"name": "Response",
																				"package": "@medusajs/medusa-js"
																			}
																		]
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1085
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										1062,
										1055,
										1070
									]
								}
							],
							"categories": [
								{
									"title": "Mutations",
									"children": [
										1055,
										1062,
										1070
									]
								}
							]
						},
						{
							"id": 14,
							"name": "Customer Groups",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Customer Group API Routes](https://docs.medusajs.com/api/admin#customer-groups).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 852
									},
									{
										"kind": "text",
										"text": ".\n\nCustomer Groups can be used to organize customers that share similar data or attributes into dedicated groups.\nThis can be useful for different purposes such as setting a different price for a specific customer group.\n\nRelated Guide: [How to manage customer groups](https://docs.medusajs.com/modules/customers/admin/manage-customer-groups)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 1199,
									"name": "useAdminCreateCustomerGroup",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1200,
											"name": "useAdminCreateCustomerGroup",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a customer group."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateCustomerGroup } from \"medusa-react\"\n\nconst CreateCustomerGroup = () => {\n  const createCustomerGroup = useAdminCreateCustomerGroup()\n  // ...\n\n  const handleCreate = (name: string) => {\n    createCustomerGroup.mutate({\n      name,\n    })\n  }\n\n  // ...\n}\n\nexport default CreateCustomerGroup\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1201,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/index.d.ts",
																			"qualifiedName": "AdminCustomerGroupsRes"
																		},
																		"name": "AdminCustomerGroupsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/create-customer-group.d.ts",
																	"qualifiedName": "AdminPostCustomerGroupsReq"
																},
																"name": "AdminPostCustomerGroupsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/index.d.ts",
																	"qualifiedName": "AdminCustomerGroupsRes"
																},
																"name": "AdminCustomerGroupsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/create-customer-group.d.ts",
															"qualifiedName": "AdminPostCustomerGroupsReq"
														},
														"name": "AdminPostCustomerGroupsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1202,
									"name": "useAdminUpdateCustomerGroup",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1203,
											"name": "useAdminUpdateCustomerGroup",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a customer group's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateCustomerGroup } from \"medusa-react\"\n\ntype Props = {\n  customerGroupId: string\n}\n\nconst CustomerGroup = ({ customerGroupId }: Props) => {\n  const updateCustomerGroup = useAdminUpdateCustomerGroup(\n    customerGroupId\n  )\n  // ..\n\n  const handleUpdate = (name: string) => {\n    updateCustomerGroup.mutate({\n      name,\n    })\n  }\n\n  // ...\n}\n\nexport default CustomerGroup\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1204,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The customer group's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1205,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/index.d.ts",
																			"qualifiedName": "AdminCustomerGroupsRes"
																		},
																		"name": "AdminCustomerGroupsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/update-customer-group.d.ts",
																	"qualifiedName": "AdminPostCustomerGroupsGroupReq"
																},
																"name": "AdminPostCustomerGroupsGroupReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/index.d.ts",
																	"qualifiedName": "AdminCustomerGroupsRes"
																},
																"name": "AdminCustomerGroupsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/update-customer-group.d.ts",
															"qualifiedName": "AdminPostCustomerGroupsGroupReq"
														},
														"name": "AdminPostCustomerGroupsGroupReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1206,
									"name": "useAdminDeleteCustomerGroup",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1207,
											"name": "useAdminDeleteCustomerGroup",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a customer group. This doesn't delete the customers associated with the customer group."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteCustomerGroup } from \"medusa-react\"\n\ntype Props = {\n  customerGroupId: string\n}\n\nconst CustomerGroup = ({ customerGroupId }: Props) => {\n  const deleteCustomerGroup = useAdminDeleteCustomerGroup(\n    customerGroupId\n  )\n  // ...\n\n  const handleDeleteCustomerGroup = () => {\n    deleteCustomerGroup.mutate()\n  }\n\n  // ...\n}\n\nexport default CustomerGroup\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1208,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The customer group's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1209,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																			"qualifiedName": "DeleteResponse"
																		},
																		"name": "DeleteResponse",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1210,
									"name": "useAdminAddCustomersToCustomerGroup",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1211,
											"name": "useAdminAddCustomersToCustomerGroup",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The hook adds a list of customers to a customer group."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminAddCustomersToCustomerGroup,\n} from \"medusa-react\"\n\ntype Props = {\n  customerGroupId: string\n}\n\nconst CustomerGroup = ({ customerGroupId }: Props) => {\n  const addCustomers = useAdminAddCustomersToCustomerGroup(\n    customerGroupId\n  )\n  // ...\n\n  const handleAddCustomers= (customerId: string) => {\n    addCustomers.mutate({\n      customer_ids: [\n        {\n          id: customerId,\n        },\n      ],\n    })\n  }\n\n  // ...\n}\n\nexport default CustomerGroup\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1212,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The customer group's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1213,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/index.d.ts",
																			"qualifiedName": "AdminCustomerGroupsRes"
																		},
																		"name": "AdminCustomerGroupsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/add-customers-batch.d.ts",
																	"qualifiedName": "AdminPostCustomerGroupsGroupCustomersBatchReq"
																},
																"name": "AdminPostCustomerGroupsGroupCustomersBatchReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/index.d.ts",
																	"qualifiedName": "AdminCustomerGroupsRes"
																},
																"name": "AdminCustomerGroupsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/add-customers-batch.d.ts",
															"qualifiedName": "AdminPostCustomerGroupsGroupCustomersBatchReq"
														},
														"name": "AdminPostCustomerGroupsGroupCustomersBatchReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1214,
									"name": "useAdminRemoveCustomersFromCustomerGroup",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1215,
											"name": "useAdminRemoveCustomersFromCustomerGroup",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook removes a list of customers from a customer group. This doesn't delete the customer, \nonly the association between the customer and the customer group."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminRemoveCustomersFromCustomerGroup,\n} from \"medusa-react\"\n\ntype Props = {\n  customerGroupId: string\n}\n\nconst CustomerGroup = ({ customerGroupId }: Props) => {\n  const removeCustomers = \n    useAdminRemoveCustomersFromCustomerGroup(\n      customerGroupId\n    )\n  // ...\n\n  const handleRemoveCustomer = (customerId: string) => {\n    removeCustomers.mutate({\n      customer_ids: [\n        {\n          id: customerId,\n        },\n      ],\n    })\n  }\n\n  // ...\n}\n\nexport default CustomerGroup\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1216,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The customer group's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1217,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/index.d.ts",
																			"qualifiedName": "AdminCustomerGroupsRes"
																		},
																		"name": "AdminCustomerGroupsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/delete-customers-batch.d.ts",
																	"qualifiedName": "AdminDeleteCustomerGroupsGroupCustomerBatchReq"
																},
																"name": "AdminDeleteCustomerGroupsGroupCustomerBatchReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/index.d.ts",
																	"qualifiedName": "AdminCustomerGroupsRes"
																},
																"name": "AdminCustomerGroupsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/delete-customers-batch.d.ts",
															"qualifiedName": "AdminDeleteCustomerGroupsGroupCustomerBatchReq"
														},
														"name": "AdminDeleteCustomerGroupsGroupCustomerBatchReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1116,
									"name": "useAdminCustomerGroup",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1117,
											"name": "useAdminCustomerGroup",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a customer group by its ID. You can expand the customer group's relations or \nselect the fields that should be returned."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCustomerGroup } from \"medusa-react\"\n\ntype Props = {\n  customerGroupId: string\n}\n\nconst CustomerGroup = ({ customerGroupId }: Props) => {\n  const { customer_group, isLoading } = useAdminCustomerGroup(\n    customerGroupId\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {customer_group && <span>{customer_group.name}</span>}\n    </div>\n  )\n}\n\nexport default CustomerGroup\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1118,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The customer group's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1119,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Configurations to apply on the retrieved customer group."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/get-customer-group.d.ts",
															"qualifiedName": "AdminGetCustomerGroupsGroupParams"
														},
														"name": "AdminGetCustomerGroupsGroupParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 1120,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/index.d.ts",
																			"qualifiedName": "AdminCustomerGroupsRes"
																		},
																		"name": "AdminCustomerGroupsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_customer_groups"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 1121,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1123,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1122,
																	"name": "customer_group",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/customer-group.d.ts",
																			"qualifiedName": "CustomerGroup"
																		},
																		"name": "CustomerGroup",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1123,
																		1122
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1124,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1126,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1125,
																	"name": "customer_group",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/customer-group.d.ts",
																			"qualifiedName": "CustomerGroup"
																		},
																		"name": "CustomerGroup",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1126,
																		1125
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1127,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1129,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1128,
																	"name": "customer_group",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/customer-group.d.ts",
																			"qualifiedName": "CustomerGroup"
																		},
																		"name": "CustomerGroup",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1129,
																		1128
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1130,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1132,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1131,
																	"name": "customer_group",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/customer-group.d.ts",
																			"qualifiedName": "CustomerGroup"
																		},
																		"name": "CustomerGroup",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1132,
																		1131
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 1133,
									"name": "useAdminCustomerGroups",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1134,
											"name": "useAdminCustomerGroups",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of customer groups. The customer groups can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`name`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`id`"
													},
													{
														"kind": "text",
														"text": ". \nThe customer groups can also be sorted or paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list customer groups:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminCustomerGroups } from \"medusa-react\"\n\nconst CustomerGroups = () => {\n  const { \n    customer_groups,\n    isLoading,\n  } = useAdminCustomerGroups()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {customer_groups && !customer_groups.length && (\n        <span>No Customer Groups</span>\n      )}\n      {customer_groups && customer_groups.length > 0 && (\n        <ul>\n          {customer_groups.map(\n            (customerGroup) => (\n              <li key={customerGroup.id}>\n                {customerGroup.name}\n              </li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default CustomerGroups\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved within the customer groups:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminCustomerGroups } from \"medusa-react\"\n\nconst CustomerGroups = () => {\n  const { \n    customer_groups,\n    isLoading,\n  } = useAdminCustomerGroups({\n    expand: \"customers\"\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {customer_groups && !customer_groups.length && (\n        <span>No Customer Groups</span>\n      )}\n      {customer_groups && customer_groups.length > 0 && (\n        <ul>\n          {customer_groups.map(\n            (customerGroup) => (\n              <li key={customerGroup.id}>\n                {customerGroup.name}\n              </li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default CustomerGroups\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`10`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminCustomerGroups } from \"medusa-react\"\n\nconst CustomerGroups = () => {\n  const { \n    customer_groups,\n    limit,\n    offset,\n    isLoading,\n  } = useAdminCustomerGroups({\n    expand: \"customers\",\n    limit: 15,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {customer_groups && !customer_groups.length && (\n        <span>No Customer Groups</span>\n      )}\n      {customer_groups && customer_groups.length > 0 && (\n        <ul>\n          {customer_groups.map(\n            (customerGroup) => (\n              <li key={customerGroup.id}>\n                {customerGroup.name}\n              </li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default CustomerGroups\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1135,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved customer groups."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/list-customer-groups.d.ts",
															"qualifiedName": "AdminGetCustomerGroupsParams"
														},
														"name": "AdminGetCustomerGroupsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 1136,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/index.d.ts",
																			"qualifiedName": "AdminCustomerGroupsListRes"
																		},
																		"name": "AdminCustomerGroupsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_customer_groups"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 1137,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 1138,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						1138
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 1139,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1144,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1143,
																	"name": "customer_groups",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/customer-group.d.ts",
																				"qualifiedName": "CustomerGroup"
																			},
																			"name": "CustomerGroup",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 1140,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1141,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1142,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1144,
																		1143,
																		1140,
																		1141,
																		1142
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1145,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1150,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1149,
																	"name": "customer_groups",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/customer-group.d.ts",
																				"qualifiedName": "CustomerGroup"
																			},
																			"name": "CustomerGroup",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 1146,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1147,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1148,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1150,
																		1149,
																		1146,
																		1147,
																		1148
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1151,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1156,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1155,
																	"name": "customer_groups",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/customer-group.d.ts",
																				"qualifiedName": "CustomerGroup"
																			},
																			"name": "CustomerGroup",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 1152,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1153,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1154,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1156,
																		1155,
																		1152,
																		1153,
																		1154
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1157,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1162,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1161,
																	"name": "customer_groups",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/customer-group.d.ts",
																				"qualifiedName": "CustomerGroup"
																			},
																			"name": "CustomerGroup",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 1158,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1159,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1160,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1162,
																		1161,
																		1158,
																		1159,
																		1160
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 1163,
									"name": "useAdminCustomerGroupCustomers",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1164,
											"name": "useAdminCustomerGroupCustomers",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of customers in a customer group. The customers can be filtered \nby the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " field. The customers can also be paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCustomerGroupCustomers } from \"medusa-react\"\n\ntype Props = {\n  customerGroupId: string\n}\n\nconst CustomerGroup = ({ customerGroupId }: Props) => {\n  const { \n    customers, \n    isLoading,\n  } = useAdminCustomerGroupCustomers(\n    customerGroupId\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {customers && !customers.length && (\n        <span>No customers</span>\n      )}\n      {customers && customers.length > 0 && (\n        <ul>\n          {customers.map((customer) => (\n            <li key={customer.id}>{customer.first_name}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default CustomerGroup\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1165,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The customer group's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1166,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved customers."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/list-customers.d.ts",
															"qualifiedName": "AdminGetCustomersParams"
														},
														"name": "AdminGetCustomersParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 1167,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/index.d.ts",
																			"qualifiedName": "AdminCustomersListRes"
																		},
																		"name": "AdminCustomersListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "reflection",
																			"declaration": {
																				"id": 1168,
																				"name": "__type",
																				"variant": "declaration",
																				"kind": 65536,
																				"flags": {},
																				"children": [
																					{
																						"id": 1169,
																						"name": "limit",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"comment": {
																							"summary": [
																								{
																									"kind": "inline-tag",
																									"tag": "@inheritDoc",
																									"text": "FindPaginationParams.limit"
																								}
																							],
																							"blockTags": [
																								{
																									"tag": "@defaultValue",
																									"content": [
																										{
																											"kind": "code",
																											"text": "```ts\n50\n```"
																										}
																									]
																								}
																							]
																						},
																						"type": {
																							"type": "intrinsic",
																							"name": "number"
																						}
																					},
																					{
																						"id": 1170,
																						"name": "offset",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"comment": {
																							"summary": [
																								{
																									"kind": "inline-tag",
																									"tag": "@inheritDoc",
																									"text": "FindPaginationParams.offset"
																								}
																							],
																							"blockTags": [
																								{
																									"tag": "@defaultValue",
																									"content": [
																										{
																											"kind": "code",
																											"text": "```ts\n0\n```"
																										}
																									]
																								}
																							]
																						},
																						"type": {
																							"type": "intrinsic",
																							"name": "number"
																						}
																					},
																					{
																						"id": 1171,
																						"name": "expand",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"comment": {
																							"summary": [
																								{
																									"kind": "inline-tag",
																									"tag": "@inheritDoc",
																									"text": "FindParams.expand"
																								}
																							]
																						},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					},
																					{
																						"id": 1172,
																						"name": "q",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"comment": {
																							"summary": [
																								{
																									"kind": "text",
																									"text": "Search term used to search customers' email, first name, last name."
																								}
																							]
																						},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					},
																					{
																						"id": 1173,
																						"name": "has_account",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"comment": {
																							"summary": [
																								{
																									"kind": "text",
																									"text": "Filter customers by whether they have an account."
																								}
																							]
																						},
																						"type": {
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					},
																					{
																						"id": 1174,
																						"name": "groups",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"comment": {
																							"summary": [
																								{
																									"kind": "text",
																									"text": "Filter customers by the customer's customer groups."
																								}
																							]
																						},
																						"type": {
																							"type": "array",
																							"elementType": {
																								"type": "intrinsic",
																								"name": "string"
																							}
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"children": [
																							1169,
																							1170,
																							1171,
																							1172,
																							1173,
																							1174
																						]
																					}
																				]
																			}
																		}
																	]
																}
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 1175,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1180,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1179,
																	"name": "customers",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/customer.d.ts",
																				"qualifiedName": "Customer"
																			},
																			"name": "Customer",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 1176,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1177,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1178,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1180,
																		1179,
																		1176,
																		1177,
																		1178
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1181,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1186,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1185,
																	"name": "customers",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/customer.d.ts",
																				"qualifiedName": "Customer"
																			},
																			"name": "Customer",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 1182,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1183,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1184,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1186,
																		1185,
																		1182,
																		1183,
																		1184
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1187,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1192,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1191,
																	"name": "customers",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/customer.d.ts",
																				"qualifiedName": "Customer"
																			},
																			"name": "Customer",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 1188,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1189,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1190,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1192,
																		1191,
																		1188,
																		1189,
																		1190
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1193,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1198,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1197,
																	"name": "customers",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/customer.d.ts",
																				"qualifiedName": "Customer"
																			},
																			"name": "Customer",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 1194,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1195,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1196,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1198,
																		1197,
																		1194,
																		1195,
																		1196
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										1199,
										1202,
										1206,
										1210,
										1214,
										1116,
										1133,
										1163
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										1116,
										1133,
										1163
									]
								},
								{
									"title": "Mutations",
									"children": [
										1199,
										1202,
										1206,
										1210,
										1214
									]
								}
							]
						},
						{
							"id": 15,
							"name": "Customers",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Customer API Routes](https://docs.medusajs.com/api/admin#customers).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 852
									},
									{
										"kind": "text",
										"text": ".\n\nRelated Guide: [How to manage customers](https://docs.medusajs.com/modules/customers/admin/manage-customers)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 1265,
									"name": "useAdminCreateCustomer",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1266,
											"name": "useAdminCreateCustomer",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a customer as an admin."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateCustomer } from \"medusa-react\"\n\ntype CustomerData = {\n  first_name: string\n  last_name: string\n  email: string\n  password: string\n}\n\nconst CreateCustomer = () => {\n  const createCustomer = useAdminCreateCustomer()\n  // ...\n\n  const handleCreate = (customerData: CustomerData) => {\n    createCustomer.mutate(customerData, {\n      onSuccess: ({ customer }) => {\n        console.log(customer.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateCustomer\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1267,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/index.d.ts",
																			"qualifiedName": "AdminCustomersRes"
																		},
																		"name": "AdminCustomersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/create-customer.d.ts",
																	"qualifiedName": "AdminPostCustomersReq"
																},
																"name": "AdminPostCustomersReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/index.d.ts",
																	"qualifiedName": "AdminCustomersRes"
																},
																"name": "AdminCustomersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/create-customer.d.ts",
															"qualifiedName": "AdminPostCustomersReq"
														},
														"name": "AdminPostCustomersReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1268,
									"name": "useAdminUpdateCustomer",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1269,
											"name": "useAdminUpdateCustomer",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a customer's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateCustomer } from \"medusa-react\"\n\ntype CustomerData = {\n  first_name: string\n  last_name: string\n  email: string\n  password: string\n}\n\ntype Props = {\n  customerId: string\n}\n\nconst Customer = ({ customerId }: Props) => {\n  const updateCustomer = useAdminUpdateCustomer(customerId)\n  // ...\n\n  const handleUpdate = (customerData: CustomerData) => {\n    updateCustomer.mutate(customerData)\n  }\n\n  // ...\n}\n\nexport default Customer\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1270,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The customer's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1271,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/index.d.ts",
																			"qualifiedName": "AdminCustomersRes"
																		},
																		"name": "AdminCustomersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/update-customer.d.ts",
																	"qualifiedName": "AdminPostCustomersCustomerReq"
																},
																"name": "AdminPostCustomersCustomerReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/index.d.ts",
																	"qualifiedName": "AdminCustomersRes"
																},
																"name": "AdminCustomersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/update-customer.d.ts",
															"qualifiedName": "AdminPostCustomersCustomerReq"
														},
														"name": "AdminPostCustomersCustomerReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1219,
									"name": "useAdminCustomers",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1220,
											"name": "useAdminCustomers",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of Customers. The customers can be filtered by fields such as \n"
													},
													{
														"kind": "code",
														"text": "`q`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`groups`"
													},
													{
														"kind": "text",
														"text": ". The customers can also be paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list customers:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminCustomers } from \"medusa-react\"\n\nconst Customers = () => {\n  const { customers, isLoading } = useAdminCustomers()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {customers && !customers.length && (\n        <span>No customers</span>\n      )}\n      {customers && customers.length > 0 && (\n        <ul>\n          {customers.map((customer) => (\n            <li key={customer.id}>{customer.first_name}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Customers\n```"
															},
															{
																"kind": "text",
																"text": "\n\nYou can specify relations to be retrieved within each customer. In addition, by default, only the first "
															},
															{
																"kind": "code",
																"text": "`50`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. \nYou can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminCustomers } from \"medusa-react\"\n\nconst Customers = () => {\n  const { \n    customers, \n    limit,\n    offset,\n    isLoading\n  } = useAdminCustomers({\n    expand: \"billing_address\",\n    limit: 20,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {customers && !customers.length && (\n        <span>No customers</span>\n      )}\n      {customers && customers.length > 0 && (\n        <ul>\n          {customers.map((customer) => (\n            <li key={customer.id}>{customer.first_name}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Customers\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1221,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved customers."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/list-customers.d.ts",
															"qualifiedName": "AdminGetCustomersParams"
														},
														"name": "AdminGetCustomersParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 1222,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/index.d.ts",
																			"qualifiedName": "AdminCustomersListRes"
																		},
																		"name": "AdminCustomersListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_customers"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 1223,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 1224,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						1224
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 1225,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1230,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1229,
																	"name": "customers",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/customer.d.ts",
																				"qualifiedName": "Customer"
																			},
																			"name": "Customer",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 1226,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1227,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1228,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1230,
																		1229,
																		1226,
																		1227,
																		1228
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1231,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1236,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1235,
																	"name": "customers",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/customer.d.ts",
																				"qualifiedName": "Customer"
																			},
																			"name": "Customer",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 1232,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1233,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1234,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1236,
																		1235,
																		1232,
																		1233,
																		1234
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1237,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1242,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1241,
																	"name": "customers",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/customer.d.ts",
																				"qualifiedName": "Customer"
																			},
																			"name": "Customer",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 1238,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1239,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1240,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1242,
																		1241,
																		1238,
																		1239,
																		1240
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1243,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1248,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1247,
																	"name": "customers",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/customer.d.ts",
																				"qualifiedName": "Customer"
																			},
																			"name": "Customer",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 1244,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1245,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1246,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1248,
																		1247,
																		1244,
																		1245,
																		1246
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 1249,
									"name": "useAdminCustomer",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1250,
											"name": "useAdminCustomer",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves the details of a customer."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCustomer } from \"medusa-react\"\n\ntype Props = {\n  customerId: string\n}\n\nconst Customer = ({ customerId }: Props) => {\n  const { customer, isLoading } = useAdminCustomer(\n    customerId\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {customer && <span>{customer.first_name}</span>}\n    </div>\n  )\n}\n\nexport default Customer\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1251,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The customer's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1252,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/index.d.ts",
																			"qualifiedName": "AdminCustomersRes"
																		},
																		"name": "AdminCustomersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_customers"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 1253,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1255,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1254,
																	"name": "customer",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/customer.d.ts",
																			"qualifiedName": "Customer"
																		},
																		"name": "Customer",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1255,
																		1254
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1256,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1258,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1257,
																	"name": "customer",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/customer.d.ts",
																			"qualifiedName": "Customer"
																		},
																		"name": "Customer",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1258,
																		1257
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1259,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1261,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1260,
																	"name": "customer",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/customer.d.ts",
																			"qualifiedName": "Customer"
																		},
																		"name": "Customer",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1261,
																		1260
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1262,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1264,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1263,
																	"name": "customer",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/customer.d.ts",
																			"qualifiedName": "Customer"
																		},
																		"name": "Customer",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1264,
																		1263
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										1265,
										1268,
										1219,
										1249
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										1219,
										1249
									]
								},
								{
									"title": "Mutations",
									"children": [
										1265,
										1268
									]
								}
							]
						},
						{
							"id": 16,
							"name": "Discounts",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Discount API Routes](https://docs.medusajs.com/api/admin#discounts).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 852
									},
									{
										"kind": "text",
										"text": ".\n\nAdmins can create discounts with conditions and rules, providing them with advanced settings for variety of cases.\nThe methods in this class can be used to manage discounts, their conditions, resources, and more.\n\nRelated Guide: [How to manage discounts](https://docs.medusajs.com/modules/discounts/admin/manage-discounts)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 1376,
									"name": "useAdminAddDiscountConditionResourceBatch",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1377,
											"name": "useAdminAddDiscountConditionResourceBatch",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook adds a batch of resources to a discount condition. The type of resource depends on the type of discount condition. \nFor example, if the discount condition's type is "
													},
													{
														"kind": "code",
														"text": "`products`"
													},
													{
														"kind": "text",
														"text": ", the resources being added should be products."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To add resources to a discount condition:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { \n  useAdminAddDiscountConditionResourceBatch\n} from \"medusa-react\"\n\ntype Props = {\n  discountId: string\n  conditionId: string\n}\n\nconst DiscountCondition = ({\n  discountId,\n  conditionId\n}: Props) => {\n  const addConditionResources = useAdminAddDiscountConditionResourceBatch(\n    discountId,\n    conditionId\n  )\n  // ...\n\n  const handleAdd = (itemId: string) => {\n    addConditionResources.mutate({\n      resources: [\n        {\n          id: itemId\n        }\n      ]\n    }, {\n      onSuccess: ({ discount }) => {\n        console.log(discount.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default DiscountCondition\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations to include in the returned discount:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { \n  useAdminAddDiscountConditionResourceBatch\n} from \"medusa-react\"\n\ntype Props = {\n  discountId: string\n  conditionId: string\n}\n\nconst DiscountCondition = ({\n  discountId,\n  conditionId\n}: Props) => {\n  const addConditionResources = useAdminAddDiscountConditionResourceBatch(\n    discountId,\n    conditionId,\n    {\n      expand: \"rule\"\n    }\n  )\n  // ...\n\n  const handleAdd = (itemId: string) => {\n    addConditionResources.mutate({\n      resources: [\n        {\n          id: itemId\n        }\n      ]\n    }, {\n      onSuccess: ({ discount }) => {\n        console.log(discount.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default DiscountCondition\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1378,
													"name": "discountId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The ID of the discount the condition belongs to."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1379,
													"name": "conditionId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The discount condition's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1380,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Configurations to apply on the retrieved discount."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/add-resources-to-condition-batch.d.ts",
															"qualifiedName": "AdminPostDiscountsDiscountConditionsConditionBatchParams"
														},
														"name": "AdminPostDiscountsDiscountConditionsConditionBatchParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 1381,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																			"qualifiedName": "AdminDiscountsRes"
																		},
																		"name": "AdminDiscountsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/add-resources-to-condition-batch.d.ts",
																	"qualifiedName": "AdminPostDiscountsDiscountConditionsConditionBatchReq"
																},
																"name": "AdminPostDiscountsDiscountConditionsConditionBatchReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																	"qualifiedName": "AdminDiscountsRes"
																},
																"name": "AdminDiscountsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/add-resources-to-condition-batch.d.ts",
															"qualifiedName": "AdminPostDiscountsDiscountConditionsConditionBatchReq"
														},
														"name": "AdminPostDiscountsDiscountConditionsConditionBatchReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1382,
									"name": "useAdminDeleteDiscountConditionResourceBatch",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1383,
											"name": "useAdminDeleteDiscountConditionResourceBatch",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook remove a batch of resources from a discount condition. This will only remove the association between the resource and \nthe discount condition, not the resource itself."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminDeleteDiscountConditionResourceBatch\n} from \"medusa-react\"\n\ntype Props = {\n  discountId: string\n  conditionId: string\n}\n\nconst DiscountCondition = ({\n  discountId,\n  conditionId\n}: Props) => {\n  const deleteConditionResource = useAdminDeleteDiscountConditionResourceBatch(\n    discountId,\n    conditionId,\n  )\n  // ...\n\n  const handleDelete = (itemId: string) => {\n    deleteConditionResource.mutate({\n      resources: [\n        {\n          id: itemId\n        }\n      ]\n    }, {\n      onSuccess: ({ discount }) => {\n        console.log(discount.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default DiscountCondition\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1384,
													"name": "discountId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The ID of the discount the condition belongs to."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1385,
													"name": "conditionId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The discount condition's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1386,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																			"qualifiedName": "AdminDiscountsRes"
																		},
																		"name": "AdminDiscountsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/delete-resources-from-condition-batch.d.ts",
																	"qualifiedName": "AdminDeleteDiscountsDiscountConditionsConditionBatchReq"
																},
																"name": "AdminDeleteDiscountsDiscountConditionsConditionBatchReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																	"qualifiedName": "AdminDiscountsRes"
																},
																"name": "AdminDiscountsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/delete-resources-from-condition-batch.d.ts",
															"qualifiedName": "AdminDeleteDiscountsDiscountConditionsConditionBatchReq"
														},
														"name": "AdminDeleteDiscountsDiscountConditionsConditionBatchReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1387,
									"name": "useAdminCreateDiscount",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1388,
											"name": "useAdminCreateDiscount",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a discount with a given set of rules that defines how the discount is applied."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminCreateDiscount,\n} from \"medusa-react\"\nimport { \n  AllocationType, \n  DiscountRuleType,\n} from \"@medusajs/medusa\"\n\nconst CreateDiscount = () => {\n  const createDiscount = useAdminCreateDiscount()\n  // ...\n\n  const handleCreate = (\n    currencyCode: string,\n    regionId: string\n  ) => {\n    // ...\n    createDiscount.mutate({\n      code: currencyCode,\n      rule: {\n        type: DiscountRuleType.FIXED,\n        value: 10,\n        allocation: AllocationType.ITEM,\n      },\n      regions: [\n          regionId,\n      ],\n      is_dynamic: false,\n      is_disabled: false,\n    })\n  }\n\n  // ...\n}\n\nexport default CreateDiscount\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1389,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																			"qualifiedName": "AdminDiscountsRes"
																		},
																		"name": "AdminDiscountsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/create-discount.d.ts",
																	"qualifiedName": "AdminPostDiscountsReq"
																},
																"name": "AdminPostDiscountsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																	"qualifiedName": "AdminDiscountsRes"
																},
																"name": "AdminDiscountsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/create-discount.d.ts",
															"qualifiedName": "AdminPostDiscountsReq"
														},
														"name": "AdminPostDiscountsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1390,
									"name": "useAdminUpdateDiscount",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1391,
											"name": "useAdminUpdateDiscount",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a discount with a given set of rules that define how the discount is applied."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateDiscount } from \"medusa-react\"\n\ntype Props = {\n  discountId: string\n}\n\nconst Discount = ({ discountId }: Props) => {\n  const updateDiscount = useAdminUpdateDiscount(discountId)\n  // ...\n\n  const handleUpdate = (isDisabled: boolean) => {\n    updateDiscount.mutate({\n      is_disabled: isDisabled,\n    })\n  }\n\n  // ...\n}\n\nexport default Discount\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1392,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The discount's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1393,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																			"qualifiedName": "AdminDiscountsRes"
																		},
																		"name": "AdminDiscountsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/update-discount.d.ts",
																	"qualifiedName": "AdminPostDiscountsDiscountReq"
																},
																"name": "AdminPostDiscountsDiscountReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																	"qualifiedName": "AdminDiscountsRes"
																},
																"name": "AdminDiscountsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/update-discount.d.ts",
															"qualifiedName": "AdminPostDiscountsDiscountReq"
														},
														"name": "AdminPostDiscountsDiscountReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1394,
									"name": "useAdminDeleteDiscount",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1395,
											"name": "useAdminDeleteDiscount",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a discount. Deleting the discount will make it unavailable for customers to use."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteDiscount } from \"medusa-react\"\n\nconst Discount = () => {\n  const deleteDiscount = useAdminDeleteDiscount(discount_id)\n  // ...\n\n  const handleDelete = () => {\n    deleteDiscount.mutate()\n  }\n\n  // ...\n}\n\nexport default Discount\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1396,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The discount's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1397,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																			"qualifiedName": "DeleteResponse"
																		},
																		"name": "DeleteResponse",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1398,
									"name": "useAdminDiscountAddRegion",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1399,
											"name": "useAdminDiscountAddRegion",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook adds a Region to the list of Regions a Discount can be used in."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "string - The ID of the region to add."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDiscountAddRegion } from \"medusa-react\"\n\ntype Props = {\n  discountId: string\n}\n\nconst Discount = ({ discountId }: Props) => {\n  const addRegion = useAdminDiscountAddRegion(discountId)\n  // ...\n\n  const handleAdd = (regionId: string) => {\n    addRegion.mutate(regionId, {\n      onSuccess: ({ discount }) => {\n        console.log(discount.regions)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Discount\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1400,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The discount's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1401,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																			"qualifiedName": "AdminDiscountsRes"
																		},
																		"name": "AdminDiscountsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																	"qualifiedName": "AdminDiscountsRes"
																},
																"name": "AdminDiscountsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1402,
									"name": "useAdminDiscountRemoveRegion",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1403,
											"name": "useAdminDiscountRemoveRegion",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook removes a Region from the list of Regions that a Discount can be used in. \nThis does not delete a region, only the association between it and the discount."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "string - The ID of the region to remove."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDiscountRemoveRegion } from \"medusa-react\"\n\ntype Props = {\n  discountId: string\n}\n\nconst Discount = ({ discountId }: Props) => {\n  const deleteRegion = useAdminDiscountRemoveRegion(discountId)\n  // ...\n\n  const handleDelete = (regionId: string) => {\n    deleteRegion.mutate(regionId, {\n      onSuccess: ({ discount }) => {\n        console.log(discount.regions)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Discount\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1404,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The discount's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1405,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																			"qualifiedName": "AdminDiscountsRes"
																		},
																		"name": "AdminDiscountsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																	"qualifiedName": "AdminDiscountsRes"
																},
																"name": "AdminDiscountsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1406,
									"name": "useAdminCreateDynamicDiscountCode",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1407,
											"name": "useAdminCreateDynamicDiscountCode",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a dynamic unique code that can map to a parent discount. This is useful if you want to \nautomatically generate codes with the same rules and conditions."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateDynamicDiscountCode } from \"medusa-react\"\n\ntype Props = {\n  discountId: string\n}\n\nconst Discount = ({ discountId }: Props) => {\n  const createDynamicDiscount = useAdminCreateDynamicDiscountCode(discountId)\n  // ...\n\n  const handleCreate = (\n    code: string,\n    usageLimit: number\n  ) => {\n    createDynamicDiscount.mutate({\n      code,\n      usage_limit: usageLimit\n    }, {\n      onSuccess: ({ discount }) => {\n        console.log(discount.is_dynamic)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Discount\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1408,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The discount's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1409,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																			"qualifiedName": "AdminDiscountsRes"
																		},
																		"name": "AdminDiscountsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/create-dynamic-code.d.ts",
																	"qualifiedName": "AdminPostDiscountsDiscountDynamicCodesReq"
																},
																"name": "AdminPostDiscountsDiscountDynamicCodesReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																	"qualifiedName": "AdminDiscountsRes"
																},
																"name": "AdminDiscountsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/create-dynamic-code.d.ts",
															"qualifiedName": "AdminPostDiscountsDiscountDynamicCodesReq"
														},
														"name": "AdminPostDiscountsDiscountDynamicCodesReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1410,
									"name": "useAdminDeleteDynamicDiscountCode",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1411,
											"name": "useAdminDeleteDynamicDiscountCode",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a dynamic code from a discount."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "string - The code of the dynamic discount to delete."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteDynamicDiscountCode } from \"medusa-react\"\n\ntype Props = {\n  discountId: string\n}\n\nconst Discount = ({ discountId }: Props) => {\n  const deleteDynamicDiscount = useAdminDeleteDynamicDiscountCode(discountId)\n  // ...\n\n  const handleDelete = (code: string) => {\n    deleteDynamicDiscount.mutate(code, {\n      onSuccess: ({ discount }) => {\n        console.log(discount.is_dynamic)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Discount\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1412,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The discount's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1413,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																			"qualifiedName": "AdminDiscountsRes"
																		},
																		"name": "AdminDiscountsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																	"qualifiedName": "AdminDiscountsRes"
																},
																"name": "AdminDiscountsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1414,
									"name": "useAdminDiscountCreateCondition",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1415,
											"name": "useAdminDiscountCreateCondition",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a discount condition. Only one of "
													},
													{
														"kind": "code",
														"text": "`products`"
													},
													{
														"kind": "text",
														"text": ", "
													},
													{
														"kind": "code",
														"text": "`product_types`"
													},
													{
														"kind": "text",
														"text": ", "
													},
													{
														"kind": "code",
														"text": "`product_collections`"
													},
													{
														"kind": "text",
														"text": ", "
													},
													{
														"kind": "code",
														"text": "`product_tags`"
													},
													{
														"kind": "text",
														"text": ", and "
													},
													{
														"kind": "code",
														"text": "`customer_groups`"
													},
													{
														"kind": "text",
														"text": " \nshould be provided in the "
													},
													{
														"kind": "code",
														"text": "`payload`"
													},
													{
														"kind": "text",
														"text": " parameter, based on the type of discount condition. For example, if the discount condition's type is "
													},
													{
														"kind": "code",
														"text": "`products`"
													},
													{
														"kind": "text",
														"text": ", \nthe "
													},
													{
														"kind": "code",
														"text": "`products`"
													},
													{
														"kind": "text",
														"text": " field should be provided in the "
													},
													{
														"kind": "code",
														"text": "`payload`"
													},
													{
														"kind": "text",
														"text": " parameter."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { DiscountConditionOperator } from \"@medusajs/medusa\"\nimport { useAdminDiscountCreateCondition } from \"medusa-react\"\n\ntype Props = {\n  discountId: string\n}\n\nconst Discount = ({ discountId }: Props) => {\n  const createCondition = useAdminDiscountCreateCondition(discountId)\n  // ...\n\n  const handleCreateCondition = (\n    operator: DiscountConditionOperator,\n    products: string[]\n  ) => {\n    createCondition.mutate({\n      operator,\n      products\n    }, {\n      onSuccess: ({ discount }) => {\n        console.log(discount.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Discount\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1416,
													"name": "discountId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The discount's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1417,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																			"qualifiedName": "AdminDiscountsRes"
																		},
																		"name": "AdminDiscountsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/create-condition.d.ts",
																	"qualifiedName": "AdminPostDiscountsDiscountConditions"
																},
																"name": "AdminPostDiscountsDiscountConditions",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																	"qualifiedName": "AdminDiscountsRes"
																},
																"name": "AdminDiscountsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/create-condition.d.ts",
															"qualifiedName": "AdminPostDiscountsDiscountConditions"
														},
														"name": "AdminPostDiscountsDiscountConditions",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1418,
									"name": "useAdminDiscountUpdateCondition",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1419,
											"name": "useAdminDiscountUpdateCondition",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Update a discount condition. Only one of "
													},
													{
														"kind": "code",
														"text": "`products`"
													},
													{
														"kind": "text",
														"text": ", "
													},
													{
														"kind": "code",
														"text": "`product_types`"
													},
													{
														"kind": "text",
														"text": ", "
													},
													{
														"kind": "code",
														"text": "`product_collections`"
													},
													{
														"kind": "text",
														"text": ", "
													},
													{
														"kind": "code",
														"text": "`product_tags`"
													},
													{
														"kind": "text",
														"text": ", and "
													},
													{
														"kind": "code",
														"text": "`customer_groups`"
													},
													{
														"kind": "text",
														"text": " \nshould be provided in the "
													},
													{
														"kind": "code",
														"text": "`payload`"
													},
													{
														"kind": "text",
														"text": " parameter, based on the type of discount condition. For example, if the discount condition's \ntype is "
													},
													{
														"kind": "code",
														"text": "`products`"
													},
													{
														"kind": "text",
														"text": ", the "
													},
													{
														"kind": "code",
														"text": "`products`"
													},
													{
														"kind": "text",
														"text": " field should be provided in the "
													},
													{
														"kind": "code",
														"text": "`payload`"
													},
													{
														"kind": "text",
														"text": " parameter."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDiscountUpdateCondition } from \"medusa-react\"\n\ntype Props = {\n  discountId: string\n  conditionId: string\n}\n\nconst DiscountCondition = ({\n  discountId,\n  conditionId\n}: Props) => {\n  const update = useAdminDiscountUpdateCondition(\n    discountId,\n    conditionId\n  )\n  // ...\n\n  const handleUpdate = (\n    products: string[]\n  ) => {\n    update.mutate({\n      products\n    }, {\n      onSuccess: ({ discount }) => {\n        console.log(discount.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default DiscountCondition\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1420,
													"name": "discountId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The discount's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1421,
													"name": "conditionId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The discount condition's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1422,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																			"qualifiedName": "AdminDiscountsRes"
																		},
																		"name": "AdminDiscountsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/update-condition.d.ts",
																	"qualifiedName": "AdminPostDiscountsDiscountConditionsCondition"
																},
																"name": "AdminPostDiscountsDiscountConditionsCondition",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																	"qualifiedName": "AdminDiscountsRes"
																},
																"name": "AdminDiscountsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/update-condition.d.ts",
															"qualifiedName": "AdminPostDiscountsDiscountConditionsCondition"
														},
														"name": "AdminPostDiscountsDiscountConditionsCondition",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1423,
									"name": "useAdminDiscountRemoveCondition",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1424,
											"name": "useAdminDiscountRemoveCondition",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a discount condition. This doesn't delete resources associated to the discount condition."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "string - The ID of the condition to delete."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDiscountRemoveCondition } from \"medusa-react\"\n\ntype Props = {\n  discountId: string\n}\n\nconst Discount = ({ discountId }: Props) => {\n  const deleteCondition = useAdminDiscountRemoveCondition(\n    discountId\n  )\n  // ...\n\n  const handleDelete = (\n    conditionId: string\n  ) => {\n    deleteCondition.mutate(conditionId, {\n      onSuccess: ({ id, object, deleted }) => {\n        console.log(deleted)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Discount\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1425,
													"name": "discountId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The discount's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1426,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																			"qualifiedName": "DeleteResponse"
																		},
																		"name": "DeleteResponse",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1295,
									"name": "useAdminDiscounts",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1296,
											"name": "useAdminDiscounts",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of Discounts. The discounts can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`rule`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`is_dynamic`"
													},
													{
														"kind": "text",
														"text": ". \nThe discounts can also be paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list discounts:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminDiscounts } from \"medusa-react\"\n\nconst Discounts = () => {\n  const { discounts, isLoading } = useAdminDiscounts()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {discounts && !discounts.length && (\n        <span>No customers</span>\n      )}\n      {discounts && discounts.length > 0 && (\n        <ul>\n          {discounts.map((discount) => (\n            <li key={discount.id}>{discount.code}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Discounts\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved within the discounts:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminDiscounts } from \"medusa-react\"\n\nconst Discounts = () => {\n  const { discounts, isLoading } = useAdminDiscounts({\n    expand: \"rule\"\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {discounts && !discounts.length && (\n        <span>No customers</span>\n      )}\n      {discounts && discounts.length > 0 && (\n        <ul>\n          {discounts.map((discount) => (\n            <li key={discount.id}>{discount.code}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Discounts\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`20`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminDiscounts } from \"medusa-react\"\n\nconst Discounts = () => {\n  const { \n    discounts, \n    limit,\n    offset,\n    isLoading\n  } = useAdminDiscounts({\n    expand: \"rule\",\n    limit: 10,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {discounts && !discounts.length && (\n        <span>No customers</span>\n      )}\n      {discounts && discounts.length > 0 && (\n        <ul>\n          {discounts.map((discount) => (\n            <li key={discount.id}>{discount.code}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Discounts\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1297,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved discounts."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/list-discounts.d.ts",
															"qualifiedName": "AdminGetDiscountsParams"
														},
														"name": "AdminGetDiscountsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 1298,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																			"qualifiedName": "AdminDiscountsListRes"
																		},
																		"name": "AdminDiscountsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_discounts"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 1299,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 1300,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						1300
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 1301,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1306,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1305,
																	"name": "discounts",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/discount.d.ts",
																				"qualifiedName": "Discount"
																			},
																			"name": "Discount",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 1302,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1303,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1304,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1306,
																		1305,
																		1302,
																		1303,
																		1304
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1307,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1312,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1311,
																	"name": "discounts",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/discount.d.ts",
																				"qualifiedName": "Discount"
																			},
																			"name": "Discount",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 1308,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1309,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1310,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1312,
																		1311,
																		1308,
																		1309,
																		1310
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1313,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1318,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1317,
																	"name": "discounts",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/discount.d.ts",
																				"qualifiedName": "Discount"
																			},
																			"name": "Discount",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 1314,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1315,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1316,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1318,
																		1317,
																		1314,
																		1315,
																		1316
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1319,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1324,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1323,
																	"name": "discounts",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/discount.d.ts",
																				"qualifiedName": "Discount"
																			},
																			"name": "Discount",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 1320,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1321,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1322,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1324,
																		1323,
																		1320,
																		1321,
																		1322
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 1325,
									"name": "useAdminDiscount",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1326,
											"name": "useAdminDiscount",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a discount."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDiscount } from \"medusa-react\"\n\ntype Props = {\n  discountId: string\n}\n\nconst Discount = ({ discountId }: Props) => {\n  const { discount, isLoading } = useAdminDiscount(\n    discountId\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {discount && <span>{discount.code}</span>}\n    </div>\n  )\n}\n\nexport default Discount\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1327,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The discount's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1328,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Configurations to apply on the retrieved discount."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/get-discount.d.ts",
															"qualifiedName": "AdminGetDiscountParams"
														},
														"name": "AdminGetDiscountParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 1329,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																			"qualifiedName": "AdminDiscountsRes"
																		},
																		"name": "AdminDiscountsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_discounts"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 1330,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1332,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1331,
																	"name": "discount",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/discount.d.ts",
																			"qualifiedName": "Discount"
																		},
																		"name": "Discount",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1332,
																		1331
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1333,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1335,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1334,
																	"name": "discount",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/discount.d.ts",
																			"qualifiedName": "Discount"
																		},
																		"name": "Discount",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1335,
																		1334
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1336,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1338,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1337,
																	"name": "discount",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/discount.d.ts",
																			"qualifiedName": "Discount"
																		},
																		"name": "Discount",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1338,
																		1337
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1339,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1341,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1340,
																	"name": "discount",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/discount.d.ts",
																			"qualifiedName": "Discount"
																		},
																		"name": "Discount",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1341,
																		1340
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 1342,
									"name": "useAdminGetDiscountByCode",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1343,
											"name": "useAdminGetDiscountByCode",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook adds a batch of resources to a discount condition. The type of resource depends on the type of discount condition. For example, if the discount condition's type is "
													},
													{
														"kind": "code",
														"text": "`products`"
													},
													{
														"kind": "text",
														"text": ",\nthe resources being added should be products."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminGetDiscountByCode } from \"medusa-react\"\n\ntype Props = {\n  discountCode: string\n}\n\nconst Discount = ({ discountCode }: Props) => {\n  const { discount, isLoading } = useAdminGetDiscountByCode(\n    discountCode\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {discount && <span>{discount.code}</span>}\n    </div>\n  )\n}\n\nexport default Discount\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1344,
													"name": "code",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The code of the discount."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1345,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																			"qualifiedName": "AdminDiscountsRes"
																		},
																		"name": "AdminDiscountsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_discounts"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 1346,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1348,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1347,
																	"name": "discount",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/discount.d.ts",
																			"qualifiedName": "Discount"
																		},
																		"name": "Discount",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1348,
																		1347
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1349,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1351,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1350,
																	"name": "discount",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/discount.d.ts",
																			"qualifiedName": "Discount"
																		},
																		"name": "Discount",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1351,
																		1350
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1352,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1354,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1353,
																	"name": "discount",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/discount.d.ts",
																			"qualifiedName": "Discount"
																		},
																		"name": "Discount",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1354,
																		1353
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1355,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1357,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1356,
																	"name": "discount",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/discount.d.ts",
																			"qualifiedName": "Discount"
																		},
																		"name": "Discount",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1357,
																		1356
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 1358,
									"name": "useAdminGetDiscountCondition",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1359,
											"name": "useAdminGetDiscountCondition",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retries a Discount Condition's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminGetDiscountCondition } from \"medusa-react\"\n\ntype Props = {\n  discountId: string\n  discountConditionId: string\n}\n\nconst DiscountCondition = ({\n  discountId,\n  discountConditionId\n}: Props) => {\n  const { \n    discount_condition, \n    isLoading\n  } = useAdminGetDiscountCondition(\n    discountId,\n    discountConditionId\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {discount_condition && (\n        <span>{discount_condition.type}</span>\n      )}\n    </div>\n  )\n}\n\nexport default DiscountCondition\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1360,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The ID of the discount the condition belongs to."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1361,
													"name": "conditionId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The discount condition's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1362,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Configurations to apply on the retrieved discount condition."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/get-condition.d.ts",
															"qualifiedName": "AdminGetDiscountsDiscountConditionsConditionParams"
														},
														"name": "AdminGetDiscountsDiscountConditionsConditionParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 1363,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
																			"qualifiedName": "AdminDiscountConditionsRes"
																		},
																		"name": "AdminDiscountConditionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "typeOperator",
																"operator": "readonly",
																"target": {
																	"type": "tuple",
																	"elements": [
																		{
																			"type": "literal",
																			"value": "admin_discounts"
																		},
																		{
																			"type": "literal",
																			"value": "detail"
																		},
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "literal",
																			"value": "condition"
																		},
																		{
																			"type": "intrinsic",
																			"name": "any"
																		}
																	]
																}
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 1364,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1366,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1365,
																	"name": "discount_condition",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/discount-condition.d.ts",
																			"qualifiedName": "DiscountCondition"
																		},
																		"name": "DiscountCondition",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1366,
																		1365
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1367,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1369,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1368,
																	"name": "discount_condition",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/discount-condition.d.ts",
																			"qualifiedName": "DiscountCondition"
																		},
																		"name": "DiscountCondition",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1369,
																		1368
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1370,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1372,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1371,
																	"name": "discount_condition",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/discount-condition.d.ts",
																			"qualifiedName": "DiscountCondition"
																		},
																		"name": "DiscountCondition",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1372,
																		1371
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1373,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1375,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1374,
																	"name": "discount_condition",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/discount-condition.d.ts",
																			"qualifiedName": "DiscountCondition"
																		},
																		"name": "DiscountCondition",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1375,
																		1374
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										1376,
										1382,
										1387,
										1390,
										1394,
										1398,
										1402,
										1406,
										1410,
										1414,
										1418,
										1423,
										1295,
										1325,
										1342,
										1358
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										1295,
										1325,
										1342,
										1358
									]
								},
								{
									"title": "Mutations",
									"children": [
										1376,
										1382,
										1387,
										1390,
										1394,
										1398,
										1402,
										1406,
										1410,
										1414,
										1418,
										1423
									]
								}
							]
						},
						{
							"id": 17,
							"name": "Draft Orders",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Draft Order API Routes](https://docs.medusajs.com/api/admin#draft-orders).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 852
									},
									{
										"kind": "text",
										"text": ".\n\nA draft order is an order created manually by the admin. It allows admins to create orders without direct involvement from the customer.\n\nRelated Guide: [How to manage draft orders](https://docs.medusajs.com/modules/orders/admin/manage-draft-orders)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 1474,
									"name": "useAdminCreateDraftOrder",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1475,
											"name": "useAdminCreateDraftOrder",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a Draft Order. A draft order is not transformed into an order until payment is captured."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateDraftOrder } from \"medusa-react\"\n\ntype DraftOrderData = {\n  email: string\n  region_id: string\n  items: {\n    quantity: number,\n    variant_id: string\n  }[]\n  shipping_methods: {\n    option_id: string\n    price: number\n  }[]\n}\n\nconst CreateDraftOrder = () => {\n  const createDraftOrder = useAdminCreateDraftOrder()\n  // ...\n\n  const handleCreate = (data: DraftOrderData) => {\n    createDraftOrder.mutate(data, {\n      onSuccess: ({ draft_order }) => {\n        console.log(draft_order.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateDraftOrder\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1476,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
																			"qualifiedName": "AdminDraftOrdersRes"
																		},
																		"name": "AdminDraftOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/create-draft-order.d.ts",
																	"qualifiedName": "AdminPostDraftOrdersReq"
																},
																"name": "AdminPostDraftOrdersReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
																	"qualifiedName": "AdminDraftOrdersRes"
																},
																"name": "AdminDraftOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/create-draft-order.d.ts",
															"qualifiedName": "AdminPostDraftOrdersReq"
														},
														"name": "AdminPostDraftOrdersReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1477,
									"name": "useAdminUpdateDraftOrder",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1478,
											"name": "useAdminUpdateDraftOrder",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a Draft Order's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateDraftOrder } from \"medusa-react\"\n\ntype Props = {\n  draftOrderId: string\n}\n\nconst DraftOrder = ({ draftOrderId }: Props) => {\n  const updateDraftOrder = useAdminUpdateDraftOrder(\n    draftOrderId\n  )\n  // ...\n\n  const handleUpdate = (email: string) => {\n    updateDraftOrder.mutate({\n      email,\n    }, {\n      onSuccess: ({ draft_order }) => {\n        console.log(draft_order.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default DraftOrder\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1479,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The draft order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1480,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
																			"qualifiedName": "AdminDraftOrdersRes"
																		},
																		"name": "AdminDraftOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/update-draft-order.d.ts",
																	"qualifiedName": "AdminPostDraftOrdersDraftOrderReq"
																},
																"name": "AdminPostDraftOrdersDraftOrderReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
																	"qualifiedName": "AdminDraftOrdersRes"
																},
																"name": "AdminDraftOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/update-draft-order.d.ts",
															"qualifiedName": "AdminPostDraftOrdersDraftOrderReq"
														},
														"name": "AdminPostDraftOrdersDraftOrderReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1481,
									"name": "useAdminDeleteDraftOrder",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1482,
											"name": "useAdminDeleteDraftOrder",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a Draft Order."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteDraftOrder } from \"medusa-react\"\n\ntype Props = {\n  draftOrderId: string\n}\n\nconst DraftOrder = ({ draftOrderId }: Props) => {\n  const deleteDraftOrder = useAdminDeleteDraftOrder(\n    draftOrderId\n  )\n  // ...\n\n  const handleDelete = () => {\n    deleteDraftOrder.mutate(void 0, {\n      onSuccess: ({ id, object, deleted }) => {\n        console.log(id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default DraftOrder\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1483,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The draft order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1484,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																			"qualifiedName": "DeleteResponse"
																		},
																		"name": "DeleteResponse",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1485,
									"name": "useAdminDraftOrderRegisterPayment",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1486,
											"name": "useAdminDraftOrderRegisterPayment",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook capture the draft order's payment. This will also set the draft order's status to "
													},
													{
														"kind": "code",
														"text": "`completed`"
													},
													{
														"kind": "text",
														"text": " and create an order from the draft order. The payment is captured through Medusa's system payment,\nwhich is manual payment that isn't integrated with any third-party payment provider. It is assumed that the payment capturing is handled manually by the admin."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDraftOrderRegisterPayment } from \"medusa-react\"\n\ntype Props = {\n  draftOrderId: string\n}\n\nconst DraftOrder = ({ draftOrderId }: Props) => {\n  const registerPayment = useAdminDraftOrderRegisterPayment(\n    draftOrderId\n  )\n  // ...\n\n  const handlePayment = () => {\n    registerPayment.mutate(void 0, {\n      onSuccess: ({ order }) => {\n        console.log(order.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default DraftOrder\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1487,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The draft order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1488,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
																			"qualifiedName": "AdminPostDraftOrdersDraftOrderRegisterPaymentRes"
																		},
																		"name": "AdminPostDraftOrdersDraftOrderRegisterPaymentRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
																	"qualifiedName": "AdminPostDraftOrdersDraftOrderRegisterPaymentRes"
																},
																"name": "AdminPostDraftOrdersDraftOrderRegisterPaymentRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1489,
									"name": "useAdminDraftOrderAddLineItem",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1490,
											"name": "useAdminDraftOrderAddLineItem",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a Line Item in the Draft Order."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDraftOrderAddLineItem } from \"medusa-react\"\n\ntype Props = {\n  draftOrderId: string\n}\n\nconst DraftOrder = ({ draftOrderId }: Props) => {\n  const addLineItem = useAdminDraftOrderAddLineItem(\n    draftOrderId\n  )\n  // ...\n\n  const handleAdd = (quantity: number) => {\n    addLineItem.mutate({\n      quantity,\n    }, {\n      onSuccess: ({ draft_order }) => {\n        console.log(draft_order.cart)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default DraftOrder\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1491,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The draft order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1492,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
																			"qualifiedName": "AdminDraftOrdersRes"
																		},
																		"name": "AdminDraftOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/create-line-item.d.ts",
																	"qualifiedName": "AdminPostDraftOrdersDraftOrderLineItemsReq"
																},
																"name": "AdminPostDraftOrdersDraftOrderLineItemsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
																	"qualifiedName": "AdminDraftOrdersRes"
																},
																"name": "AdminDraftOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/create-line-item.d.ts",
															"qualifiedName": "AdminPostDraftOrdersDraftOrderLineItemsReq"
														},
														"name": "AdminPostDraftOrdersDraftOrderLineItemsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1493,
									"name": "useAdminDraftOrderRemoveLineItem",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1494,
											"name": "useAdminDraftOrderRemoveLineItem",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a Line Item from a Draft Order."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "string - The ID of the line item to remove."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDraftOrderRemoveLineItem } from \"medusa-react\"\n\ntype Props = {\n  draftOrderId: string\n}\n\nconst DraftOrder = ({ draftOrderId }: Props) => {\n  const deleteLineItem = useAdminDraftOrderRemoveLineItem(\n    draftOrderId\n  )\n  // ...\n\n  const handleDelete = (itemId: string) => {\n    deleteLineItem.mutate(itemId, {\n      onSuccess: ({ draft_order }) => {\n        console.log(draft_order.cart)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default DraftOrder\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1495,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The draft order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1496,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
																			"qualifiedName": "AdminDraftOrdersRes"
																		},
																		"name": "AdminDraftOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
																	"qualifiedName": "AdminDraftOrdersRes"
																},
																"name": "AdminDraftOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1500,
									"name": "useAdminDraftOrderUpdateLineItem",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1501,
											"name": "useAdminDraftOrderUpdateLineItem",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a Line Item in a Draft Order."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDraftOrderUpdateLineItem } from \"medusa-react\"\n\ntype Props = {\n  draftOrderId: string\n}\n\nconst DraftOrder = ({ draftOrderId }: Props) => {\n  const updateLineItem = useAdminDraftOrderUpdateLineItem(\n    draftOrderId\n  )\n  // ...\n\n  const handleUpdate = (\n    itemId: string,\n    quantity: number\n  ) => {\n    updateLineItem.mutate({\n      item_id: itemId,\n      quantity,\n    })\n  }\n\n  // ...\n}\n\nexport default DraftOrder\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1502,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The draft order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1503,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
																			"qualifiedName": "AdminDraftOrdersRes"
																		},
																		"name": "AdminDraftOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": 1497,
																"name": "AdminDraftOrderUpdateLineItemReq",
																"package": "medusa-react"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
																	"qualifiedName": "AdminDraftOrdersRes"
																},
																"name": "AdminDraftOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": 1497,
														"name": "AdminDraftOrderUpdateLineItemReq",
														"package": "medusa-react"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1428,
									"name": "useAdminDraftOrders",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1429,
											"name": "useAdminDraftOrders",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves an list of Draft Orders. The draft orders can be filtered by parameters such as "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": ". The draft orders can also paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list draft orders:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminDraftOrders } from \"medusa-react\"\n\nconst DraftOrders = () => {\n  const { draft_orders, isLoading } = useAdminDraftOrders()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {draft_orders && !draft_orders.length && (\n        <span>No Draft Orders</span>\n      )}\n      {draft_orders && draft_orders.length > 0 && (\n        <ul>\n          {draft_orders.map((order) => (\n            <li key={order.id}>{order.display_id}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default DraftOrders\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`50`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminDraftOrders } from \"medusa-react\"\n\nconst DraftOrders = () => {\n  const { \n    draft_orders, \n    limit,\n    offset,\n    isLoading\n  } = useAdminDraftOrders({\n    limit: 20,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {draft_orders && !draft_orders.length && (\n        <span>No Draft Orders</span>\n      )}\n      {draft_orders && draft_orders.length > 0 && (\n        <ul>\n          {draft_orders.map((order) => (\n            <li key={order.id}>{order.display_id}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default DraftOrders\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1430,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved draft orders."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/list-draft-orders.d.ts",
															"qualifiedName": "AdminGetDraftOrdersParams"
														},
														"name": "AdminGetDraftOrdersParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 1431,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
																			"qualifiedName": "AdminDraftOrdersListRes"
																		},
																		"name": "AdminDraftOrdersListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_draft_orders"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 1432,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 1433,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						1433
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 1434,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1439,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1438,
																	"name": "draft_orders",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/draft-order.d.ts",
																				"qualifiedName": "DraftOrder"
																			},
																			"name": "DraftOrder",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 1435,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1436,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1437,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1439,
																		1438,
																		1435,
																		1436,
																		1437
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1440,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1445,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1444,
																	"name": "draft_orders",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/draft-order.d.ts",
																				"qualifiedName": "DraftOrder"
																			},
																			"name": "DraftOrder",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 1441,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1442,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1443,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1445,
																		1444,
																		1441,
																		1442,
																		1443
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1446,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1451,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1450,
																	"name": "draft_orders",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/draft-order.d.ts",
																				"qualifiedName": "DraftOrder"
																			},
																			"name": "DraftOrder",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 1447,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1448,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1449,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1451,
																		1450,
																		1447,
																		1448,
																		1449
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1452,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1457,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1456,
																	"name": "draft_orders",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/draft-order.d.ts",
																				"qualifiedName": "DraftOrder"
																			},
																			"name": "DraftOrder",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 1453,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1454,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1455,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1457,
																		1456,
																		1453,
																		1454,
																		1455
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 1458,
									"name": "useAdminDraftOrder",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1459,
											"name": "useAdminDraftOrder",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a Draft Order's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDraftOrder } from \"medusa-react\"\n\ntype Props = {\n  draftOrderId: string\n}\n\nconst DraftOrder = ({ draftOrderId }: Props) => {\n  const { \n    draft_order, \n    isLoading, \n  } = useAdminDraftOrder(draftOrderId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {draft_order && <span>{draft_order.display_id}</span>}\n      \n    </div>\n  )\n}\n\nexport default DraftOrder\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1460,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The draft order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1461,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
																			"qualifiedName": "AdminDraftOrdersRes"
																		},
																		"name": "AdminDraftOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_draft_orders"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 1462,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1464,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1463,
																	"name": "draft_order",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/draft-order.d.ts",
																			"qualifiedName": "DraftOrder"
																		},
																		"name": "DraftOrder",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1464,
																		1463
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1465,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1467,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1466,
																	"name": "draft_order",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/draft-order.d.ts",
																			"qualifiedName": "DraftOrder"
																		},
																		"name": "DraftOrder",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1467,
																		1466
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1468,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1470,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1469,
																	"name": "draft_order",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/draft-order.d.ts",
																			"qualifiedName": "DraftOrder"
																		},
																		"name": "DraftOrder",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1470,
																		1469
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1471,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1473,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1472,
																	"name": "draft_order",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/draft-order.d.ts",
																			"qualifiedName": "DraftOrder"
																		},
																		"name": "DraftOrder",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1473,
																		1472
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										1474,
										1477,
										1481,
										1485,
										1489,
										1493,
										1500,
										1428,
										1458
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										1428,
										1458
									]
								},
								{
									"title": "Mutations",
									"children": [
										1474,
										1477,
										1481,
										1485,
										1489,
										1493,
										1500
									]
								}
							]
						},
						{
							"id": 18,
							"name": "Gift Cards",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Gift Card API Routes](https://docs.medusajs.com/api/admin#gift-cards).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 852
									},
									{
										"kind": "text",
										"text": ".\n\nAdmins can create gift cards and send them directly to customers, specifying options like their balance, region, and more.\nThese gift cards are different than the saleable gift cards in a store, which are created and managed through "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "useAdminCreateProduct",
										"target": 2383
									},
									{
										"kind": "text",
										"text": ".\n\nRelated Guide: [How to manage gift cards](https://docs.medusajs.com/modules/gift-cards/admin/manage-gift-cards#manage-custom-gift-cards)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 1551,
									"name": "useAdminCreateGiftCard",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1552,
											"name": "useAdminCreateGiftCard",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a gift card that can redeemed by its unique code. The Gift Card is only valid within one region."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateGiftCard } from \"medusa-react\"\n\nconst CreateCustomGiftCards = () => {\n  const createGiftCard = useAdminCreateGiftCard()\n  // ...\n  \n  const handleCreate = (\n    regionId: string, \n    value: number\n  ) => {\n    createGiftCard.mutate({\n      region_id: regionId,\n      value,\n    }, {\n      onSuccess: ({ gift_card }) => {\n        console.log(gift_card.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateCustomGiftCards\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1553,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/gift-cards/index.d.ts",
																			"qualifiedName": "AdminGiftCardsRes"
																		},
																		"name": "AdminGiftCardsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/gift-cards/create-gift-card.d.ts",
																	"qualifiedName": "AdminPostGiftCardsReq"
																},
																"name": "AdminPostGiftCardsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/gift-cards/index.d.ts",
																	"qualifiedName": "AdminGiftCardsRes"
																},
																"name": "AdminGiftCardsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/gift-cards/create-gift-card.d.ts",
															"qualifiedName": "AdminPostGiftCardsReq"
														},
														"name": "AdminPostGiftCardsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1554,
									"name": "useAdminUpdateGiftCard",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1555,
											"name": "useAdminUpdateGiftCard",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a gift card's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateGiftCard } from \"medusa-react\"\n\ntype Props = {\n  customGiftCardId: string\n}\n\nconst CustomGiftCard = ({ customGiftCardId }: Props) => {\n  const updateGiftCard = useAdminUpdateGiftCard(\n    customGiftCardId\n  )\n  // ...\n  \n  const handleUpdate = (regionId: string) => {\n    updateGiftCard.mutate({\n      region_id: regionId,\n    }, {\n      onSuccess: ({ gift_card }) => {\n        console.log(gift_card.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CustomGiftCard\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1556,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The gift card's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1557,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/gift-cards/index.d.ts",
																			"qualifiedName": "AdminGiftCardsRes"
																		},
																		"name": "AdminGiftCardsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/gift-cards/update-gift-card.d.ts",
																	"qualifiedName": "AdminPostGiftCardsGiftCardReq"
																},
																"name": "AdminPostGiftCardsGiftCardReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/gift-cards/index.d.ts",
																	"qualifiedName": "AdminGiftCardsRes"
																},
																"name": "AdminGiftCardsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/gift-cards/update-gift-card.d.ts",
															"qualifiedName": "AdminPostGiftCardsGiftCardReq"
														},
														"name": "AdminPostGiftCardsGiftCardReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1558,
									"name": "useAdminDeleteGiftCard",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1559,
											"name": "useAdminDeleteGiftCard",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a gift card. Once deleted, it can't be used by customers."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteGiftCard } from \"medusa-react\"\n\ntype Props = {\n  customGiftCardId: string\n}\n\nconst CustomGiftCard = ({ customGiftCardId }: Props) => {\n  const deleteGiftCard = useAdminDeleteGiftCard(\n    customGiftCardId\n  )\n  // ...\n  \n  const handleDelete = () => {\n    deleteGiftCard.mutate(void 0, {\n      onSuccess: ({ id, object, deleted}) => {\n        console.log(id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CustomGiftCard\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1560,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The gift card's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1561,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																			"qualifiedName": "DeleteResponse"
																		},
																		"name": "DeleteResponse",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1505,
									"name": "useAdminGiftCards",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1506,
											"name": "useAdminGiftCards",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of gift cards. The gift cards can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`q`"
													},
													{
														"kind": "text",
														"text": " passed in the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " \nparameter. The gift cards can also paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list gift cards:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminGiftCards } from \"medusa-react\"\n\nconst CustomGiftCards = () => {\n  const { gift_cards, isLoading } = useAdminGiftCards()\n  \n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {gift_cards && !gift_cards.length && (\n        <span>No custom gift cards...</span>\n      )}\n      {gift_cards && gift_cards.length > 0 && (\n        <ul>\n          {gift_cards.map((giftCard) => (\n            <li key={giftCard.id}>{giftCard.code}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default CustomGiftCards\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`50`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminGiftCards } from \"medusa-react\"\n\nconst CustomGiftCards = () => {\n  const { \n    gift_cards, \n    limit,\n    offset,\n    isLoading\n  } = useAdminGiftCards({\n    limit: 20,\n    offset: 0\n  })\n  \n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {gift_cards && !gift_cards.length && (\n        <span>No custom gift cards...</span>\n      )}\n      {gift_cards && gift_cards.length > 0 && (\n        <ul>\n          {gift_cards.map((giftCard) => (\n            <li key={giftCard.id}>{giftCard.code}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default CustomGiftCards\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1507,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved gift cards."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/gift-cards/list-gift-cards.d.ts",
															"qualifiedName": "AdminGetGiftCardsParams"
														},
														"name": "AdminGetGiftCardsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 1508,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/gift-cards/index.d.ts",
																			"qualifiedName": "AdminGiftCardsListRes"
																		},
																		"name": "AdminGiftCardsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_gift_cards"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 1509,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 1510,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						1510
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 1511,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1516,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1515,
																	"name": "gift_cards",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/gift-card.d.ts",
																				"qualifiedName": "GiftCard"
																			},
																			"name": "GiftCard",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 1512,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1513,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1514,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1516,
																		1515,
																		1512,
																		1513,
																		1514
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1517,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1522,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1521,
																	"name": "gift_cards",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/gift-card.d.ts",
																				"qualifiedName": "GiftCard"
																			},
																			"name": "GiftCard",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 1518,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1519,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1520,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1522,
																		1521,
																		1518,
																		1519,
																		1520
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1523,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1528,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1527,
																	"name": "gift_cards",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/gift-card.d.ts",
																				"qualifiedName": "GiftCard"
																			},
																			"name": "GiftCard",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 1524,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1525,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1526,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1528,
																		1527,
																		1524,
																		1525,
																		1526
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1529,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1534,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1533,
																	"name": "gift_cards",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/gift-card.d.ts",
																				"qualifiedName": "GiftCard"
																			},
																			"name": "GiftCard",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 1530,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1531,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1532,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1534,
																		1533,
																		1530,
																		1531,
																		1532
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 1535,
									"name": "useAdminGiftCard",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1536,
											"name": "useAdminGiftCard",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a gift card's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminGiftCard } from \"medusa-react\"\n\ntype Props = {\n  giftCardId: string\n}\n\nconst CustomGiftCard = ({ giftCardId }: Props) => {\n  const { gift_card, isLoading } = useAdminGiftCard(giftCardId)\n  \n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {gift_card && <span>{gift_card.code}</span>}\n    </div>\n  )\n}\n\nexport default CustomGiftCard\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1537,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The gift card's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1538,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/gift-cards/index.d.ts",
																			"qualifiedName": "AdminGiftCardsRes"
																		},
																		"name": "AdminGiftCardsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_gift_cards"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 1539,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1541,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1540,
																	"name": "gift_card",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/gift-card.d.ts",
																			"qualifiedName": "GiftCard"
																		},
																		"name": "GiftCard",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1541,
																		1540
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1542,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1544,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1543,
																	"name": "gift_card",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/gift-card.d.ts",
																			"qualifiedName": "GiftCard"
																		},
																		"name": "GiftCard",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1544,
																		1543
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1545,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1547,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1546,
																	"name": "gift_card",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/gift-card.d.ts",
																			"qualifiedName": "GiftCard"
																		},
																		"name": "GiftCard",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1547,
																		1546
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1548,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1550,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1549,
																	"name": "gift_card",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/gift-card.d.ts",
																			"qualifiedName": "GiftCard"
																		},
																		"name": "GiftCard",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1550,
																		1549
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										1551,
										1554,
										1558,
										1505,
										1535
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										1505,
										1535
									]
								},
								{
									"title": "Mutations",
									"children": [
										1551,
										1554,
										1558
									]
								}
							]
						},
						{
							"id": 19,
							"name": "Inventory Items",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Inventory Item API Routes](https://docs.medusajs.com/api/admin#inventory-items). \nTo use these hooks, make sure to install the\n[@medusajs/inventory](https://docs.medusajs.com/modules/multiwarehouse/install-modules#inventory-module) module in your Medusa backend.\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 852
									},
									{
										"kind": "text",
										"text": ".\n\nInventory items, provided by the [Inventory Module](https://docs.medusajs.com/modules/multiwarehouse/inventory-module), can be \nused to manage the inventory of saleable items in your store.\n\nRelated Guide: [How to manage inventory items](https://docs.medusajs.com/modules/multiwarehouse/admin/manage-inventory-items)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 1639,
									"name": "useAdminCreateInventoryItem",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1640,
											"name": "useAdminCreateInventoryItem",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates an Inventory Item for a product variant."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateInventoryItem } from \"medusa-react\"\n\nconst CreateInventoryItem = () => {\n  const createInventoryItem = useAdminCreateInventoryItem()\n  // ...\n\n  const handleCreate = (variantId: string) => {\n    createInventoryItem.mutate({\n      variant_id: variantId,\n    }, {\n      onSuccess: ({ inventory_item }) => {\n        console.log(inventory_item.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateInventoryItem\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1641,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
																			"qualifiedName": "AdminInventoryItemsRes"
																		},
																		"name": "AdminInventoryItemsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/create-inventory-item.d.ts",
																	"qualifiedName": "AdminPostInventoryItemsReq"
																},
																"name": "AdminPostInventoryItemsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
																	"qualifiedName": "AdminInventoryItemsRes"
																},
																"name": "AdminInventoryItemsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/create-inventory-item.d.ts",
															"qualifiedName": "AdminPostInventoryItemsReq"
														},
														"name": "AdminPostInventoryItemsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1642,
									"name": "useAdminUpdateInventoryItem",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1643,
											"name": "useAdminUpdateInventoryItem",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates an Inventory Item's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateInventoryItem } from \"medusa-react\"\n\ntype Props = {\n  inventoryItemId: string\n}\n\nconst InventoryItem = ({ inventoryItemId }: Props) => {\n  const updateInventoryItem = useAdminUpdateInventoryItem(\n    inventoryItemId\n  )\n  // ...\n\n  const handleUpdate = (origin_country: string) => {\n    updateInventoryItem.mutate({\n      origin_country,\n    }, {\n      onSuccess: ({ inventory_item }) => {\n        console.log(inventory_item.origin_country)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default InventoryItem\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1644,
													"name": "inventoryItemId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The inventory item's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1645,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
																			"qualifiedName": "AdminInventoryItemsRes"
																		},
																		"name": "AdminInventoryItemsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/update-inventory-item.d.ts",
																	"qualifiedName": "AdminPostInventoryItemsInventoryItemReq"
																},
																"name": "AdminPostInventoryItemsInventoryItemReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
																	"qualifiedName": "AdminInventoryItemsRes"
																},
																"name": "AdminInventoryItemsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/update-inventory-item.d.ts",
															"qualifiedName": "AdminPostInventoryItemsInventoryItemReq"
														},
														"name": "AdminPostInventoryItemsInventoryItemReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1646,
									"name": "useAdminDeleteInventoryItem",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1647,
											"name": "useAdminDeleteInventoryItem",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes an Inventory Item. This does not delete the associated product variant."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteInventoryItem } from \"medusa-react\"\n\ntype Props = {\n  inventoryItemId: string\n}\n\nconst InventoryItem = ({ inventoryItemId }: Props) => {\n  const deleteInventoryItem = useAdminDeleteInventoryItem(\n    inventoryItemId\n  )\n  // ...\n\n  const handleDelete = () => {\n    deleteInventoryItem.mutate()\n  }\n\n  // ...\n}\n\nexport default InventoryItem\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1648,
													"name": "inventoryItemId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The inventory item's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1649,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																			"qualifiedName": "DeleteResponse"
																		},
																		"name": "DeleteResponse",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1653,
									"name": "useAdminUpdateLocationLevel",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1654,
											"name": "useAdminUpdateLocationLevel",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a location level's details for a given inventory item."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateLocationLevel } from \"medusa-react\"\n\ntype Props = {\n  inventoryItemId: string\n}\n\nconst InventoryItem = ({ inventoryItemId }: Props) => {\n  const updateLocationLevel = useAdminUpdateLocationLevel(\n    inventoryItemId\n  )\n  // ...\n\n  const handleUpdate = (\n    stockLocationId: string,\n    stockedQuantity: number\n  ) => {\n    updateLocationLevel.mutate({\n      stockLocationId,\n      stocked_quantity: stockedQuantity,\n    }, {\n      onSuccess: ({ inventory_item }) => {\n        console.log(inventory_item.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default InventoryItem\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1655,
													"name": "inventoryItemId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The inventory item's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1656,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
																			"qualifiedName": "AdminInventoryItemsRes"
																		},
																		"name": "AdminInventoryItemsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": 1650,
																"name": "AdminUpdateLocationLevelReq",
																"package": "medusa-react"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
																	"qualifiedName": "AdminInventoryItemsRes"
																},
																"name": "AdminInventoryItemsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": 1650,
														"name": "AdminUpdateLocationLevelReq",
														"package": "medusa-react"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1657,
									"name": "useAdminDeleteLocationLevel",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1658,
											"name": "useAdminDeleteLocationLevel",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a location level of an Inventory Item."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "string - The ID of the location level to delete."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteLocationLevel } from \"medusa-react\"\n\ntype Props = {\n  inventoryItemId: string\n}\n\nconst InventoryItem = ({ inventoryItemId }: Props) => {\n  const deleteLocationLevel = useAdminDeleteLocationLevel(\n    inventoryItemId\n  )\n  // ...\n\n  const handleDelete = (\n    locationId: string\n  ) => {\n    deleteLocationLevel.mutate(locationId)\n  }\n\n  // ...\n}\n\nexport default InventoryItem\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1659,
													"name": "inventoryItemId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The inventory item's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1660,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
																			"qualifiedName": "AdminInventoryItemsRes"
																		},
																		"name": "AdminInventoryItemsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
																	"qualifiedName": "AdminInventoryItemsRes"
																},
																"name": "AdminInventoryItemsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1661,
									"name": "useAdminCreateLocationLevel",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1662,
											"name": "useAdminCreateLocationLevel",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a Location Level for a given Inventory Item."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateLocationLevel } from \"medusa-react\"\n\ntype Props = {\n  inventoryItemId: string\n}\n\nconst InventoryItem = ({ inventoryItemId }: Props) => {\n  const createLocationLevel = useAdminCreateLocationLevel(\n    inventoryItemId\n  )\n  // ...\n\n  const handleCreateLocationLevel = (\n    locationId: string,\n    stockedQuantity: number\n  ) => {\n    createLocationLevel.mutate({\n      location_id: locationId,\n      stocked_quantity: stockedQuantity,\n    }, {\n      onSuccess: ({ inventory_item }) => {\n        console.log(inventory_item.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default InventoryItem\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1663,
													"name": "inventoryItemId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The inventory item's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1664,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
																			"qualifiedName": "AdminInventoryItemsRes"
																		},
																		"name": "AdminInventoryItemsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/create-location-level.d.ts",
																	"qualifiedName": "AdminPostInventoryItemsItemLocationLevelsReq"
																},
																"name": "AdminPostInventoryItemsItemLocationLevelsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
																	"qualifiedName": "AdminInventoryItemsRes"
																},
																"name": "AdminInventoryItemsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/create-location-level.d.ts",
															"qualifiedName": "AdminPostInventoryItemsItemLocationLevelsReq"
														},
														"name": "AdminPostInventoryItemsItemLocationLevelsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1563,
									"name": "useAdminInventoryItems",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1564,
											"name": "useAdminInventoryItems",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of inventory items. The inventory items can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`q`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`location_id`"
													},
													{
														"kind": "text",
														"text": " passed in the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter.\nThe inventory items can also be paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list inventory items:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminInventoryItems } from \"medusa-react\"\n\nfunction InventoryItems() {\n  const { \n    inventory_items,\n    isLoading \n  } = useAdminInventoryItems()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {inventory_items && !inventory_items.length && (\n        <span>No Items</span>\n      )}\n      {inventory_items && inventory_items.length > 0 && (\n        <ul>\n          {inventory_items.map(\n            (item) => (\n              <li key={item.id}>{item.id}</li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default InventoryItems\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`20`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminInventoryItems } from \"medusa-react\"\n\nfunction InventoryItems() {\n  const { \n    inventory_items,\n    limit,\n    offset,\n    isLoading\n  } = useAdminInventoryItems({\n    limit: 10,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {inventory_items && !inventory_items.length && (\n        <span>No Items</span>\n      )}\n      {inventory_items && inventory_items.length > 0 && (\n        <ul>\n          {inventory_items.map(\n            (item) => (\n              <li key={item.id}>{item.id}</li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default InventoryItems\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1565,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations applied on the retrieved inventory items."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/list-inventory-items.d.ts",
															"qualifiedName": "AdminGetInventoryItemsParams"
														},
														"name": "AdminGetInventoryItemsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 1566,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
																			"qualifiedName": "AdminInventoryItemsListWithVariantsAndLocationLevelsRes"
																		},
																		"name": "AdminInventoryItemsListWithVariantsAndLocationLevelsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_inventory_items"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 1567,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 1568,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						1568
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 1569,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1574,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1573,
																	"name": "inventory_items",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
																				"qualifiedName": "DecoratedInventoryItemDTO"
																			},
																			"name": "DecoratedInventoryItemDTO",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 1570,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1571,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1572,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1574,
																		1573,
																		1570,
																		1571,
																		1572
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1575,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1580,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1579,
																	"name": "inventory_items",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
																				"qualifiedName": "DecoratedInventoryItemDTO"
																			},
																			"name": "DecoratedInventoryItemDTO",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 1576,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1577,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1578,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1580,
																		1579,
																		1576,
																		1577,
																		1578
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1581,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1586,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1585,
																	"name": "inventory_items",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
																				"qualifiedName": "DecoratedInventoryItemDTO"
																			},
																			"name": "DecoratedInventoryItemDTO",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 1582,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1583,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1584,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1586,
																		1585,
																		1582,
																		1583,
																		1584
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1587,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1592,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1591,
																	"name": "inventory_items",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
																				"qualifiedName": "DecoratedInventoryItemDTO"
																			},
																			"name": "DecoratedInventoryItemDTO",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 1588,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1589,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1590,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1592,
																		1591,
																		1588,
																		1589,
																		1590
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 1593,
									"name": "useAdminInventoryItem",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1594,
											"name": "useAdminInventoryItem",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves an Inventory Item's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminInventoryItem } from \"medusa-react\"\n\ntype Props = {\n  inventoryItemId: string\n}\n\nconst InventoryItem = ({ inventoryItemId }: Props) => {\n  const { \n    inventory_item,\n    isLoading\n  } = useAdminInventoryItem(inventoryItemId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {inventory_item && (\n        <span>{inventory_item.sku}</span>\n      )}\n    </div>\n  )\n}\n\nexport default InventoryItem\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1595,
													"name": "inventoryItemId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The inventory item's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1596,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Configurations applied on the retrieved inventory item."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/stock-locations/list-stock-locations.d.ts",
															"qualifiedName": "AdminGetStockLocationsParams"
														},
														"name": "AdminGetStockLocationsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 1597,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
																			"qualifiedName": "AdminInventoryItemsRes"
																		},
																		"name": "AdminInventoryItemsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_inventory_items"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 1598,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1600,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1599,
																	"name": "inventory_item",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
																			"qualifiedName": "InventoryItemDTO"
																		},
																		"name": "InventoryItemDTO",
																		"package": "@medusajs/types"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1600,
																		1599
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1601,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1603,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1602,
																	"name": "inventory_item",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
																			"qualifiedName": "InventoryItemDTO"
																		},
																		"name": "InventoryItemDTO",
																		"package": "@medusajs/types"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1603,
																		1602
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1604,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1606,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1605,
																	"name": "inventory_item",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
																			"qualifiedName": "InventoryItemDTO"
																		},
																		"name": "InventoryItemDTO",
																		"package": "@medusajs/types"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1606,
																		1605
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1607,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1609,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1608,
																	"name": "inventory_item",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
																			"qualifiedName": "InventoryItemDTO"
																		},
																		"name": "InventoryItemDTO",
																		"package": "@medusajs/types"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1609,
																		1608
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 1610,
									"name": "useAdminInventoryItemLocationLevels",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1611,
											"name": "useAdminInventoryItemLocationLevels",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of inventory levels of an inventory item. The inventory levels can be filtered by fields \nsuch as "
													},
													{
														"kind": "code",
														"text": "`location_id`"
													},
													{
														"kind": "text",
														"text": " passed in the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminInventoryItemLocationLevels,\n} from \"medusa-react\"\n\ntype Props = {\n  inventoryItemId: string\n}\n\nconst InventoryItem = ({ inventoryItemId }: Props) => {\n  const { \n    inventory_item,\n    isLoading, \n  } = useAdminInventoryItemLocationLevels(inventoryItemId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {inventory_item && (\n        <ul>\n          {inventory_item.location_levels.map((level) => (\n            <span key={level.id}>{level.stocked_quantity}</span>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default InventoryItem\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1612,
													"name": "inventoryItemId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The ID of the inventory item that the location levels belong to."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1613,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters to apply on the retrieved location levels."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/list-location-levels.d.ts",
															"qualifiedName": "AdminGetInventoryItemsItemLocationLevelsParams"
														},
														"name": "AdminGetInventoryItemsItemLocationLevelsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 1614,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
																			"qualifiedName": "AdminInventoryItemsLocationLevelsRes"
																		},
																		"name": "AdminInventoryItemsLocationLevelsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_inventory_items"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 1615,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1620,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1616,
																	"name": "inventory_item",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 1617,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 1618,
																					"name": "id",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				},
																				{
																					"id": 1619,
																					"name": "location_levels",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "array",
																						"elementType": {
																							"type": "reference",
																							"target": {
																								"sourceFileName": "../../../packages/types/src/inventory/common.ts",
																								"qualifiedName": "InventoryLevelDTO"
																							},
																							"name": "InventoryLevelDTO",
																							"package": "@medusajs/types"
																						}
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						1618,
																						1619
																					]
																				}
																			]
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1620,
																		1616
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1621,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1626,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1622,
																	"name": "inventory_item",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 1623,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 1624,
																					"name": "id",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				},
																				{
																					"id": 1625,
																					"name": "location_levels",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "array",
																						"elementType": {
																							"type": "reference",
																							"target": {
																								"sourceFileName": "../../../packages/types/src/inventory/common.ts",
																								"qualifiedName": "InventoryLevelDTO"
																							},
																							"name": "InventoryLevelDTO",
																							"package": "@medusajs/types"
																						}
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						1624,
																						1625
																					]
																				}
																			]
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1626,
																		1622
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1627,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1632,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1628,
																	"name": "inventory_item",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 1629,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 1630,
																					"name": "id",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				},
																				{
																					"id": 1631,
																					"name": "location_levels",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "array",
																						"elementType": {
																							"type": "reference",
																							"target": {
																								"sourceFileName": "../../../packages/types/src/inventory/common.ts",
																								"qualifiedName": "InventoryLevelDTO"
																							},
																							"name": "InventoryLevelDTO",
																							"package": "@medusajs/types"
																						}
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						1630,
																						1631
																					]
																				}
																			]
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1632,
																		1628
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1633,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1638,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1634,
																	"name": "inventory_item",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 1635,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 1636,
																					"name": "id",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				},
																				{
																					"id": 1637,
																					"name": "location_levels",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "array",
																						"elementType": {
																							"type": "reference",
																							"target": {
																								"sourceFileName": "../../../packages/types/src/inventory/common.ts",
																								"qualifiedName": "InventoryLevelDTO"
																							},
																							"name": "InventoryLevelDTO",
																							"package": "@medusajs/types"
																						}
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						1636,
																						1637
																					]
																				}
																			]
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1638,
																		1634
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										1639,
										1642,
										1646,
										1653,
										1657,
										1661,
										1563,
										1593,
										1610
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										1563,
										1593,
										1610
									]
								},
								{
									"title": "Mutations",
									"children": [
										1639,
										1642,
										1646,
										1653,
										1657,
										1661
									]
								}
							]
						},
						{
							"id": 20,
							"name": "Invites",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Invite API Routes](https://docs.medusajs.com/api/admin#invites).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 852
									},
									{
										"kind": "text",
										"text": ".\n\nAn admin can invite new users to manage their team. This would allow new users to authenticate as admins and perform admin functionalities.\n\nRelated Guide: [How to manage invites](https://docs.medusajs.com/modules/users/admin/manage-invites)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 1681,
									"name": "useAdminAcceptInvite",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1682,
											"name": "useAdminAcceptInvite",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook accepts an Invite. This will also delete the invite and create a new user that can log in and perform admin functionalities. \nThe user will have the email associated with the invite, and the password provided in the mutation function's parameter."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminAcceptInvite } from \"medusa-react\"\n\nconst AcceptInvite = () => {\n  const acceptInvite = useAdminAcceptInvite()\n  // ...\n\n  const handleAccept = (\n    token: string,\n    firstName: string,\n    lastName: string,\n    password: string\n  ) => {\n    acceptInvite.mutate({\n      token,\n      user: {\n        first_name: firstName,\n        last_name: lastName,\n        password,\n      },\n    }, {\n      onSuccess: () => {\n        // invite accepted successfully.\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default AcceptInvite\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1683,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/invites/accept-invite.d.ts",
																	"qualifiedName": "AdminPostInvitesInviteAcceptReq"
																},
																"name": "AdminPostInvitesInviteAcceptReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/invites/accept-invite.d.ts",
															"qualifiedName": "AdminPostInvitesInviteAcceptReq"
														},
														"name": "AdminPostInvitesInviteAcceptReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1684,
									"name": "useAdminResendInvite",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1685,
											"name": "useAdminResendInvite",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook resends an invite. This renews the expiry date by seven days and generates a new token for the invite. It also triggers the "
													},
													{
														"kind": "code",
														"text": "`invite.created`"
													},
													{
														"kind": "text",
														"text": " event, \nso if you have a Notification Provider installed that handles this event, a notification should be sent to the email associated with the \ninvite to allow them to accept the invite."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminResendInvite } from \"medusa-react\"\n\ntype Props = {\n  inviteId: string\n}\n\nconst ResendInvite = ({ inviteId }: Props) => {\n  const resendInvite = useAdminResendInvite(inviteId)\n  // ...\n\n  const handleResend = () => {\n    resendInvite.mutate(void 0, {\n      onSuccess: () => {\n        // invite resent successfully\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default ResendInvite\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1686,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The invite's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1687,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "unknown"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1691,
									"name": "useAdminDeleteInvite",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1692,
											"name": "useAdminDeleteInvite",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes an invite. Only invites that weren't accepted can be deleted."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteInvite } from \"medusa-react\"\n\ntype Props = {\n  inviteId: string\n}\n\nconst DeleteInvite = ({ inviteId }: Props) => {\n  const deleteInvite = useAdminDeleteInvite(inviteId)\n  // ...\n\n  const handleDelete = () => {\n    deleteInvite.mutate(void 0, {\n      onSuccess: ({ id, object, deleted }) => {\n        console.log(id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Invite\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1693,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The invite's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1694,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																			"qualifiedName": "DeleteResponse"
																		},
																		"name": "DeleteResponse",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1666,
									"name": "useAdminInvites",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1667,
											"name": "useAdminInvites",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of invites."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminInvites } from \"medusa-react\"\n\nconst Invites = () => {\n  const { invites, isLoading } = useAdminInvites()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {invites && !invites.length && (\n        <span>No Invites</span>)\n      }\n      {invites && invites.length > 0 && (\n        <ul>\n          {invites.map((invite) => (\n            <li key={invite.id}>{invite.user_email}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Invites\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1668,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/invites/index.d.ts",
																			"qualifiedName": "AdminListInvitesRes"
																		},
																		"name": "AdminListInvitesRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_invites"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 1669,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1671,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1670,
																	"name": "invites",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/invite.d.ts",
																				"qualifiedName": "Invite"
																			},
																			"name": "Invite",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1671,
																		1670
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1672,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1674,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1673,
																	"name": "invites",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/invite.d.ts",
																				"qualifiedName": "Invite"
																			},
																			"name": "Invite",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1674,
																		1673
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1675,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1677,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1676,
																	"name": "invites",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/invite.d.ts",
																				"qualifiedName": "Invite"
																			},
																			"name": "Invite",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1677,
																		1676
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1678,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1680,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1679,
																	"name": "invites",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/invite.d.ts",
																				"qualifiedName": "Invite"
																			},
																			"name": "Invite",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1680,
																		1679
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										1681,
										1684,
										1691,
										1666
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										1666
									]
								},
								{
									"title": "Mutations",
									"children": [
										1681,
										1684,
										1691
									]
								}
							]
						},
						{
							"id": 21,
							"name": "Notes",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Note API Routes](https://docs.medusajs.com/api/admin#notes).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 852
									},
									{
										"kind": "text",
										"text": ".\n\nNotes are created by admins and can be associated with any resource. For example, an admin can add a note to an order for additional details or remarks."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 1742,
									"name": "useAdminCreateNote",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1743,
											"name": "useAdminCreateNote",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a Note which can be associated with any resource."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateNote } from \"medusa-react\"\n\nconst CreateNote = () => {\n  const createNote = useAdminCreateNote()\n  // ...\n\n  const handleCreate = () => {\n    createNote.mutate({\n      resource_id: \"order_123\",\n      resource_type: \"order\",\n      value: \"We delivered this order\"\n    }, {\n      onSuccess: ({ note }) => {\n        console.log(note.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateNote\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1744,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notes/index.d.ts",
																			"qualifiedName": "AdminNotesRes"
																		},
																		"name": "AdminNotesRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notes/create-note.d.ts",
																	"qualifiedName": "AdminPostNotesReq"
																},
																"name": "AdminPostNotesReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notes/index.d.ts",
																	"qualifiedName": "AdminNotesRes"
																},
																"name": "AdminNotesRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notes/create-note.d.ts",
															"qualifiedName": "AdminPostNotesReq"
														},
														"name": "AdminPostNotesReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1745,
									"name": "useAdminUpdateNote",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1746,
											"name": "useAdminUpdateNote",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a Note's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateNote } from \"medusa-react\"\n\ntype Props = {\n  noteId: string\n}\n\nconst Note = ({ noteId }: Props) => {\n  const updateNote = useAdminUpdateNote(noteId)\n  // ...\n\n  const handleUpdate = (\n    value: string\n  ) => {\n    updateNote.mutate({\n      value\n    }, {\n      onSuccess: ({ note }) => {\n        console.log(note.value)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Note\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1747,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The note's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1748,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notes/index.d.ts",
																			"qualifiedName": "AdminNotesRes"
																		},
																		"name": "AdminNotesRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notes/update-note.d.ts",
																	"qualifiedName": "AdminPostNotesNoteReq"
																},
																"name": "AdminPostNotesNoteReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notes/index.d.ts",
																	"qualifiedName": "AdminNotesRes"
																},
																"name": "AdminNotesRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notes/update-note.d.ts",
															"qualifiedName": "AdminPostNotesNoteReq"
														},
														"name": "AdminPostNotesNoteReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1749,
									"name": "useAdminDeleteNote",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1750,
											"name": "useAdminDeleteNote",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a Note."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteNote } from \"medusa-react\"\n\ntype Props = {\n  noteId: string\n}\n\nconst Note = ({ noteId }: Props) => {\n  const deleteNote = useAdminDeleteNote(noteId)\n  // ...\n\n  const handleDelete = () => {\n    deleteNote.mutate()\n  }\n\n  // ...\n}\n\nexport default Note\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1751,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The note's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1752,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																			"qualifiedName": "DeleteResponse"
																		},
																		"name": "DeleteResponse",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1696,
									"name": "useAdminNotes",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1697,
											"name": "useAdminNotes",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of notes. The notes can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`resource_id`"
													},
													{
														"kind": "text",
														"text": " passed in \nthe "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter. The notes can also be paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list notes:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminNotes } from \"medusa-react\"\n\nconst Notes = () => {\n  const { notes, isLoading } = useAdminNotes()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {notes && !notes.length && <span>No Notes</span>}\n      {notes && notes.length > 0 && (\n        <ul>\n          {notes.map((note) => (\n            <li key={note.id}>{note.resource_type}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Notes\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`50`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminNotes } from \"medusa-react\"\n\nconst Notes = () => {\n  const { \n    notes, \n    limit,\n    offset,\n    isLoading\n  } = useAdminNotes({\n    limit: 40,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {notes && !notes.length && <span>No Notes</span>}\n      {notes && notes.length > 0 && (\n        <ul>\n          {notes.map((note) => (\n            <li key={note.id}>{note.resource_type}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Notes\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1698,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations applied on retrieved notes."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notes/list-notes.d.ts",
															"qualifiedName": "AdminGetNotesParams"
														},
														"name": "AdminGetNotesParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 1699,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notes/index.d.ts",
																			"qualifiedName": "AdminNotesListRes"
																		},
																		"name": "AdminNotesListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_notes"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 1700,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 1701,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						1701
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 1702,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1707,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1706,
																	"name": "notes",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/note.d.ts",
																				"qualifiedName": "Note"
																			},
																			"name": "Note",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 1703,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1704,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1705,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1707,
																		1706,
																		1703,
																		1704,
																		1705
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1708,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1713,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1712,
																	"name": "notes",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/note.d.ts",
																				"qualifiedName": "Note"
																			},
																			"name": "Note",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 1709,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1710,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1711,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1713,
																		1712,
																		1709,
																		1710,
																		1711
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1714,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1719,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1718,
																	"name": "notes",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/note.d.ts",
																				"qualifiedName": "Note"
																			},
																			"name": "Note",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 1715,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1716,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1717,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1719,
																		1718,
																		1715,
																		1716,
																		1717
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1720,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1725,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1724,
																	"name": "notes",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/note.d.ts",
																				"qualifiedName": "Note"
																			},
																			"name": "Note",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 1721,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1722,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1723,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1725,
																		1724,
																		1721,
																		1722,
																		1723
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 1726,
									"name": "useAdminNote",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1727,
											"name": "useAdminNote",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a note's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminNote } from \"medusa-react\"\n\ntype Props = {\n  noteId: string\n}\n\nconst Note = ({ noteId }: Props) => {\n  const { note, isLoading } = useAdminNote(noteId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {note && <span>{note.resource_type}</span>}\n    </div>\n  )\n}\n\nexport default Note\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1728,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The note's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1729,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notes/index.d.ts",
																			"qualifiedName": "AdminNotesRes"
																		},
																		"name": "AdminNotesRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_notes"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 1730,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1732,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1731,
																	"name": "note",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/note.d.ts",
																			"qualifiedName": "Note"
																		},
																		"name": "Note",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1732,
																		1731
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1733,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1735,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1734,
																	"name": "note",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/note.d.ts",
																			"qualifiedName": "Note"
																		},
																		"name": "Note",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1735,
																		1734
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1736,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1738,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1737,
																	"name": "note",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/note.d.ts",
																			"qualifiedName": "Note"
																		},
																		"name": "Note",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1738,
																		1737
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1739,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1741,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1740,
																	"name": "note",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/note.d.ts",
																			"qualifiedName": "Note"
																		},
																		"name": "Note",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1741,
																		1740
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										1742,
										1745,
										1749,
										1696,
										1726
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										1696,
										1726
									]
								},
								{
									"title": "Mutations",
									"children": [
										1742,
										1745,
										1749
									]
								}
							]
						},
						{
							"id": 22,
							"name": "Notifications",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Notification API Routes](https://docs.medusajs.com/api/admin#notifications).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 852
									},
									{
										"kind": "text",
										"text": ".\n\nNotifications are sent to customers to inform them of new updates. For example, a notification can be sent to the customer when their order is place or its state is updated.\nThe notification's type, such as an email or SMS, is determined by the notification provider installed on the Medusa backend."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 1784,
									"name": "useAdminResendNotification",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1785,
											"name": "useAdminResendNotification",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook resends a previously sent notifications, with the same data but optionally to a different address."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminResendNotification } from \"medusa-react\"\n\ntype Props = {\n  notificationId: string\n}\n\nconst Notification = ({ notificationId }: Props) => {\n  const resendNotification = useAdminResendNotification(\n    notificationId\n  )\n  // ...\n\n  const handleResend = () => {\n    resendNotification.mutate({}, {\n      onSuccess: ({ notification }) => {\n        console.log(notification.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Notification\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1786,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The ID of the notification."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1787,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notifications/index.d.ts",
																			"qualifiedName": "AdminNotificationsRes"
																		},
																		"name": "AdminNotificationsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notifications/resend-notification.d.ts",
																	"qualifiedName": "AdminPostNotificationsNotificationResendReq"
																},
																"name": "AdminPostNotificationsNotificationResendReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notifications/index.d.ts",
																	"qualifiedName": "AdminNotificationsRes"
																},
																"name": "AdminNotificationsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notifications/resend-notification.d.ts",
															"qualifiedName": "AdminPostNotificationsNotificationResendReq"
														},
														"name": "AdminPostNotificationsNotificationResendReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1754,
									"name": "useAdminNotifications",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1755,
											"name": "useAdminNotifications",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of notifications. The notifications can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`event_name`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`resource_type`"
													},
													{
														"kind": "text",
														"text": " passed in the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter.\nThe notifications can also be paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list notifications:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminNotifications } from \"medusa-react\"\n\nconst Notifications = () => {\n  const { notifications, isLoading } = useAdminNotifications()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {notifications && !notifications.length && (\n        <span>No Notifications</span>\n      )}\n      {notifications && notifications.length > 0 && (\n        <ul>\n          {notifications.map((notification) => (\n            <li key={notification.id}>{notification.to}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Notifications\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved within the notifications:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminNotifications } from \"medusa-react\"\n\nconst Notifications = () => {\n  const { notifications, isLoading } = useAdminNotifications({\n    expand: \"provider\"\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {notifications && !notifications.length && (\n        <span>No Notifications</span>\n      )}\n      {notifications && notifications.length > 0 && (\n        <ul>\n          {notifications.map((notification) => (\n            <li key={notification.id}>{notification.to}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Notifications\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`50`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminNotifications } from \"medusa-react\"\n\nconst Notifications = () => {\n  const { \n    notifications, \n    limit,\n    offset,\n    isLoading\n  } = useAdminNotifications({\n    expand: \"provider\",\n    limit: 20,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {notifications && !notifications.length && (\n        <span>No Notifications</span>\n      )}\n      {notifications && notifications.length > 0 && (\n        <ul>\n          {notifications.map((notification) => (\n            <li key={notification.id}>{notification.to}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Notifications\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1756,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations applied to the retrieved notifications."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notifications/list-notifications.d.ts",
															"qualifiedName": "AdminGetNotificationsParams"
														},
														"name": "AdminGetNotificationsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 1757,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notifications/index.d.ts",
																			"qualifiedName": "AdminNotificationsListRes"
																		},
																		"name": "AdminNotificationsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_notifications"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 1758,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 1759,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						1759
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 1760,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1765,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1764,
																	"name": "notifications",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/notification.d.ts",
																				"qualifiedName": "Notification"
																			},
																			"name": "Notification",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 1761,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1762,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1763,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1765,
																		1764,
																		1761,
																		1762,
																		1763
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1766,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1771,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1770,
																	"name": "notifications",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/notification.d.ts",
																				"qualifiedName": "Notification"
																			},
																			"name": "Notification",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 1767,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1768,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1769,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1771,
																		1770,
																		1767,
																		1768,
																		1769
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1772,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1777,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1776,
																	"name": "notifications",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/notification.d.ts",
																				"qualifiedName": "Notification"
																			},
																			"name": "Notification",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 1773,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1774,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1775,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1777,
																		1776,
																		1773,
																		1774,
																		1775
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1778,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1783,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1782,
																	"name": "notifications",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/notification.d.ts",
																				"qualifiedName": "Notification"
																			},
																			"name": "Notification",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 1779,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1780,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1781,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1783,
																		1782,
																		1779,
																		1780,
																		1781
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										1784,
										1754
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										1754
									]
								},
								{
									"title": "Mutations",
									"children": [
										1784
									]
								}
							]
						},
						{
							"id": 23,
							"name": "Order Edits",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Order Edit API Routes](https://docs.medusajs.com/api/admin#order-edits).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 852
									},
									{
										"kind": "text",
										"text": ".\n\nAn admin can edit an order to remove, add, or update an item's quantity. When an admin edits an order, they're stored as an "
									},
									{
										"kind": "code",
										"text": "`OrderEdit`"
									},
									{
										"kind": "text",
										"text": ".\n\nRelated Guide: [How to edit an order](https://docs.medusajs.com/modules/orders/admin/edit-order)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 1836,
									"name": "useAdminCreateOrderEdit",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1837,
											"name": "useAdminCreateOrderEdit",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates an order edit."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateOrderEdit } from \"medusa-react\"\n\nconst CreateOrderEdit = () => {\n  const createOrderEdit = useAdminCreateOrderEdit()\n\n  const handleCreateOrderEdit = (orderId: string) => {\n    createOrderEdit.mutate({\n      order_id: orderId,\n    }, {\n      onSuccess: ({ order_edit }) => {\n        console.log(order_edit.id)\n      }\n    })\n  }\n  \n  // ...\n}\n\nexport default CreateOrderEdit\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1838,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
																			"qualifiedName": "AdminOrderEditsRes"
																		},
																		"name": "AdminOrderEditsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/create-order-edit.d.ts",
																	"qualifiedName": "AdminPostOrderEditsReq"
																},
																"name": "AdminPostOrderEditsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
																	"qualifiedName": "AdminOrderEditsRes"
																},
																"name": "AdminOrderEditsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/create-order-edit.d.ts",
															"qualifiedName": "AdminPostOrderEditsReq"
														},
														"name": "AdminPostOrderEditsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1839,
									"name": "useAdminDeleteOrderEdit",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1840,
											"name": "useAdminDeleteOrderEdit",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes an order edit. Only order edits that have the status "
													},
													{
														"kind": "code",
														"text": "`created`"
													},
													{
														"kind": "text",
														"text": " can be deleted."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteOrderEdit } from \"medusa-react\"\n\ntype Props = {\n  orderEditId: string\n}\n\nconst OrderEdit = ({ orderEditId }: Props) => {\n  const deleteOrderEdit = useAdminDeleteOrderEdit(\n    orderEditId\n  )\n  \n  const handleDelete = () => {\n    deleteOrderEdit.mutate(void 0, {\n      onSuccess: ({ id, object, deleted }) => {\n        console.log(id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default OrderEdit\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1841,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Order Edit's ID"
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1842,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																			"qualifiedName": "DeleteResponse"
																		},
																		"name": "DeleteResponse",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1843,
									"name": "useAdminDeleteOrderEditItemChange",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1844,
											"name": "useAdminDeleteOrderEditItemChange",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a line item change that indicates the addition, deletion, or update of a line item in the original order."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteOrderEditItemChange } from \"medusa-react\"\n\ntype Props = {\n  orderEditId: string\n  itemChangeId: string\n}\n\nconst OrderEditItemChange = ({\n  orderEditId,\n  itemChangeId\n}: Props) => {\n  const deleteItemChange = useAdminDeleteOrderEditItemChange(\n    orderEditId, \n    itemChangeId\n  )\n  \n  const handleDeleteItemChange = () => {\n    deleteItemChange.mutate(void 0, {\n      onSuccess: ({ id, object, deleted }) => {\n        console.log(id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default OrderEditItemChange\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1845,
													"name": "orderEditId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order edit's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1846,
													"name": "itemChangeId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The line item change's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1847,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
																			"qualifiedName": "AdminOrderEditItemChangeDeleteRes"
																		},
																		"name": "AdminOrderEditItemChangeDeleteRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
																	"qualifiedName": "AdminOrderEditItemChangeDeleteRes"
																},
																"name": "AdminOrderEditItemChangeDeleteRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1848,
									"name": "useAdminOrderEditUpdateLineItem",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1849,
											"name": "useAdminOrderEditUpdateLineItem",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates or updates a line item change in the order edit that indicates addition, deletion, or update of a line item \ninto an original order. Line item changes are only reflected on the original order after the order edit is confirmed."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminOrderEditUpdateLineItem } from \"medusa-react\"\n\ntype Props = {\n  orderEditId: string\n  itemId: string\n}\n\nconst OrderEditItemChange = ({\n  orderEditId,\n  itemId\n}: Props) => {\n  const updateLineItem = useAdminOrderEditUpdateLineItem(\n    orderEditId, \n    itemId\n  )\n  \n  const handleUpdateLineItem = (quantity: number) => {\n    updateLineItem.mutate({\n      quantity,\n    }, {\n      onSuccess: ({ order_edit }) => {\n        console.log(order_edit.items)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default OrderEditItemChange\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1850,
													"name": "orderEditId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order edit's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1851,
													"name": "itemId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The line item's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1852,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
																			"qualifiedName": "AdminOrderEditsRes"
																		},
																		"name": "AdminOrderEditsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/update-order-edit-line-item.d.ts",
																	"qualifiedName": "AdminPostOrderEditsEditLineItemsLineItemReq"
																},
																"name": "AdminPostOrderEditsEditLineItemsLineItemReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
																	"qualifiedName": "AdminOrderEditsRes"
																},
																"name": "AdminOrderEditsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/update-order-edit-line-item.d.ts",
															"qualifiedName": "AdminPostOrderEditsEditLineItemsLineItemReq"
														},
														"name": "AdminPostOrderEditsEditLineItemsLineItemReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1853,
									"name": "useAdminOrderEditDeleteLineItem",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1854,
											"name": "useAdminOrderEditDeleteLineItem",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a line item change in the order edit that indicates deleting an item in the original order. \nThe item in the original order will not be deleted until the order edit is confirmed."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminOrderEditDeleteLineItem } from \"medusa-react\"\n\ntype Props = {\n  orderEditId: string\n  itemId: string\n}\n\nconst OrderEditLineItem = ({\n  orderEditId,\n  itemId\n}: Props) => {\n  const removeLineItem = useAdminOrderEditDeleteLineItem(\n    orderEditId, \n    itemId\n  )\n  \n  const handleRemoveLineItem = () => {\n    removeLineItem.mutate(void 0, {\n      onSuccess: ({ order_edit }) => {\n        console.log(order_edit.changes)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default OrderEditLineItem\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1855,
													"name": "orderEditId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order edit's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1856,
													"name": "itemId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The line item's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1857,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
																			"qualifiedName": "AdminOrderEditsRes"
																		},
																		"name": "AdminOrderEditsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
																	"qualifiedName": "AdminOrderEditsRes"
																},
																"name": "AdminOrderEditsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1858,
									"name": "useAdminUpdateOrderEdit",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1859,
											"name": "useAdminUpdateOrderEdit",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates an Order Edit's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateOrderEdit } from \"medusa-react\"\n\ntype Props = {\n  orderEditId: string\n}\n\nconst OrderEdit = ({ orderEditId }: Props) => {\n  const updateOrderEdit = useAdminUpdateOrderEdit(\n    orderEditId, \n  )\n  \n  const handleUpdate = (\n    internalNote: string\n  ) => {\n    updateOrderEdit.mutate({\n      internal_note: internalNote\n    }, {\n      onSuccess: ({ order_edit }) => {\n        console.log(order_edit.internal_note)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default OrderEdit\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1860,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order edit's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1861,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
																			"qualifiedName": "AdminOrderEditsRes"
																		},
																		"name": "AdminOrderEditsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/update-order-edit.d.ts",
																	"qualifiedName": "AdminPostOrderEditsOrderEditReq"
																},
																"name": "AdminPostOrderEditsOrderEditReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
																	"qualifiedName": "AdminOrderEditsRes"
																},
																"name": "AdminOrderEditsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/update-order-edit.d.ts",
															"qualifiedName": "AdminPostOrderEditsOrderEditReq"
														},
														"name": "AdminPostOrderEditsOrderEditReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1862,
									"name": "useAdminOrderEditAddLineItem",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1863,
											"name": "useAdminOrderEditAddLineItem",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a line item change in the order edit that indicates adding an item in the original order. \nThe item will not be added to the original order until the order edit is confirmed."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminOrderEditAddLineItem } from \"medusa-react\"\n\ntype Props = {\n  orderEditId: string\n}\n\nconst OrderEdit = ({ orderEditId }: Props) => {\n  const addLineItem = useAdminOrderEditAddLineItem(\n    orderEditId\n  )\n\n  const handleAddLineItem = \n    (quantity: number, variantId: string) => {\n      addLineItem.mutate({\n        quantity,\n        variant_id: variantId,\n      }, {\n        onSuccess: ({ order_edit }) => {\n          console.log(order_edit.changes)\n        }\n      })\n    }\n  \n  // ...\n}\n\nexport default OrderEdit\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1864,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order edit's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1865,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
																			"qualifiedName": "AdminOrderEditsRes"
																		},
																		"name": "AdminOrderEditsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/add-line-item.d.ts",
																	"qualifiedName": "AdminPostOrderEditsEditLineItemsReq"
																},
																"name": "AdminPostOrderEditsEditLineItemsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
																	"qualifiedName": "AdminOrderEditsRes"
																},
																"name": "AdminOrderEditsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/add-line-item.d.ts",
															"qualifiedName": "AdminPostOrderEditsEditLineItemsReq"
														},
														"name": "AdminPostOrderEditsEditLineItemsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1866,
									"name": "useAdminRequestOrderEditConfirmation",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1867,
											"name": "useAdminRequestOrderEditConfirmation",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook requests customer confirmation of an order edit. This would emit the event "
													},
													{
														"kind": "code",
														"text": "`order-edit.requested`"
													},
													{
														"kind": "text",
														"text": " which Notification Providers listen to and send\na notification to the customer about the order edit."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminRequestOrderEditConfirmation,\n} from \"medusa-react\"\n\ntype Props = {\n  orderEditId: string\n}\n\nconst OrderEdit = ({ orderEditId }: Props) => {\n  const requestOrderConfirmation = \n    useAdminRequestOrderEditConfirmation(\n      orderEditId\n    )\n  \n  const handleRequestConfirmation = () => {\n    requestOrderConfirmation.mutate(void 0, {\n      onSuccess: ({ order_edit }) => {\n        console.log(\n          order_edit.requested_at, \n          order_edit.requested_by\n        )\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default OrderEdit\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1868,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order edit's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1869,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
																			"qualifiedName": "AdminOrderEditsRes"
																		},
																		"name": "AdminOrderEditsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
																	"qualifiedName": "AdminOrderEditsRes"
																},
																"name": "AdminOrderEditsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1870,
									"name": "useAdminCancelOrderEdit",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1871,
											"name": "useAdminCancelOrderEdit",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook cancels an order edit."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminCancelOrderEdit,\n} from \"medusa-react\"\n\ntype Props = {\n  orderEditId: string\n}\n\nconst OrderEdit = ({ orderEditId }: Props) => {\n  const cancelOrderEdit = \n    useAdminCancelOrderEdit(\n      orderEditId\n    )\n  \n  const handleCancel = () => {\n    cancelOrderEdit.mutate(void 0, {\n      onSuccess: ({ order_edit }) => {\n        console.log(\n          order_edit.id\n        )\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default OrderEdit\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1872,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order edit's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1873,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
																			"qualifiedName": "AdminOrderEditsRes"
																		},
																		"name": "AdminOrderEditsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
																	"qualifiedName": "AdminOrderEditsRes"
																},
																"name": "AdminOrderEditsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1874,
									"name": "useAdminConfirmOrderEdit",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1875,
											"name": "useAdminConfirmOrderEdit",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook confirms an order edit. This will reflect the changes in the order edit on the associated order."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminConfirmOrderEdit } from \"medusa-react\"\n\ntype Props = {\n  orderEditId: string\n}\n\nconst OrderEdit = ({ orderEditId }: Props) => {\n  const confirmOrderEdit = useAdminConfirmOrderEdit(\n    orderEditId\n  )\n  \n  const handleConfirmOrderEdit = () => {\n    confirmOrderEdit.mutate(void 0, {\n      onSuccess: ({ order_edit }) => {\n        console.log(\n          order_edit.confirmed_at,\n          order_edit.confirmed_by\n        )\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default OrderEdit\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1876,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order edit's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1877,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
																			"qualifiedName": "AdminOrderEditsRes"
																		},
																		"name": "AdminOrderEditsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
																	"qualifiedName": "AdminOrderEditsRes"
																},
																"name": "AdminOrderEditsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1789,
									"name": "useAdminOrderEdit",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1790,
											"name": "useAdminOrderEdit",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves an order edit's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "A simple example that retrieves an order edit by its ID:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminOrderEdit } from \"medusa-react\"\n\ntype Props = {\n  orderEditId: string\n}\n\nconst OrderEdit = ({ orderEditId }: Props) => {\n  const { \n    order_edit, \n    isLoading, \n  } = useAdminOrderEdit(orderEditId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {order_edit && <span>{order_edit.status}</span>}\n    </div>\n  )\n}\n\nexport default OrderEdit\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminOrderEdit } from \"medusa-react\"\n\ntype Props = {\n  orderEditId: string\n}\n\nconst OrderEdit = ({ orderEditId }: Props) => {\n  const { \n    order_edit, \n    isLoading, \n  } = useAdminOrderEdit(\n    orderEditId,\n    {\n      expand: \"order\"\n    }\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {order_edit && <span>{order_edit.status}</span>}\n    </div>\n  )\n}\n\nexport default OrderEdit\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1791,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order edit's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1792,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Configurations to apply on the retrieved order edit."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/get-order-edit.d.ts",
															"qualifiedName": "GetOrderEditsOrderEditParams"
														},
														"name": "GetOrderEditsOrderEditParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 1793,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
																			"qualifiedName": "AdminOrderEditsRes"
																		},
																		"name": "AdminOrderEditsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_order_edits"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 1794,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1796,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1795,
																	"name": "order_edit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/order-edit.d.ts",
																			"qualifiedName": "OrderEdit"
																		},
																		"name": "OrderEdit",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1796,
																		1795
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1797,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1799,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1798,
																	"name": "order_edit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/order-edit.d.ts",
																			"qualifiedName": "OrderEdit"
																		},
																		"name": "OrderEdit",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1799,
																		1798
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1800,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1802,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1801,
																	"name": "order_edit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/order-edit.d.ts",
																			"qualifiedName": "OrderEdit"
																		},
																		"name": "OrderEdit",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1802,
																		1801
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1803,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1805,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1804,
																	"name": "order_edit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/order-edit.d.ts",
																			"qualifiedName": "OrderEdit"
																		},
																		"name": "OrderEdit",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1805,
																		1804
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 1806,
									"name": "useAdminOrderEdits",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1807,
											"name": "useAdminOrderEdits",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of order edits. The order edits can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`q`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`order_id`"
													},
													{
														"kind": "text",
														"text": " passed to the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter. \nThe order edits can also be paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list order edits:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminOrderEdits } from \"medusa-react\"\n\nconst OrderEdits = () => {\n  const { order_edits, isLoading } = useAdminOrderEdits()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {order_edits && !order_edits.length && (\n        <span>No Order Edits</span>\n      )}\n      {order_edits && order_edits.length > 0 && (\n        <ul>\n          {order_edits.map((orderEdit) => (\n            <li key={orderEdit.id}>\n              {orderEdit.status}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default OrderEdits\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved within the order edits:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminOrderEdits } from \"medusa-react\"\n\nconst OrderEdits = () => {\n  const { order_edits, isLoading } = useAdminOrderEdits({\n    expand: \"order\"\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {order_edits && !order_edits.length && (\n        <span>No Order Edits</span>\n      )}\n      {order_edits && order_edits.length > 0 && (\n        <ul>\n          {order_edits.map((orderEdit) => (\n            <li key={orderEdit.id}>\n              {orderEdit.status}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default OrderEdits\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`50`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminOrderEdits } from \"medusa-react\"\n\nconst OrderEdits = () => {\n  const { \n    order_edits,\n    limit,\n    offset,\n    isLoading\n  } = useAdminOrderEdits({\n    expand: \"order\",\n    limit: 20,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {order_edits && !order_edits.length && (\n        <span>No Order Edits</span>\n      )}\n      {order_edits && order_edits.length > 0 && (\n        <ul>\n          {order_edits.map((orderEdit) => (\n            <li key={orderEdit.id}>\n              {orderEdit.status}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default OrderEdits\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1808,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations applied to retrieved order edits."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/list-order-edit.d.ts",
															"qualifiedName": "GetOrderEditsParams"
														},
														"name": "GetOrderEditsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 1809,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
																			"qualifiedName": "AdminOrderEditsListRes"
																		},
																		"name": "AdminOrderEditsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_order_edits"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 1810,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 1811,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						1811
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 1812,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1817,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1816,
																	"name": "order_edits",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/order-edit.d.ts",
																				"qualifiedName": "OrderEdit"
																			},
																			"name": "OrderEdit",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 1813,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1814,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1815,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1817,
																		1816,
																		1813,
																		1814,
																		1815
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1818,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1823,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1822,
																	"name": "order_edits",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/order-edit.d.ts",
																				"qualifiedName": "OrderEdit"
																			},
																			"name": "OrderEdit",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 1819,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1820,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1821,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1823,
																		1822,
																		1819,
																		1820,
																		1821
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1824,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1829,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1828,
																	"name": "order_edits",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/order-edit.d.ts",
																				"qualifiedName": "OrderEdit"
																			},
																			"name": "OrderEdit",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 1825,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1826,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1827,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1829,
																		1828,
																		1825,
																		1826,
																		1827
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1830,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1835,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1834,
																	"name": "order_edits",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/order-edit.d.ts",
																				"qualifiedName": "OrderEdit"
																			},
																			"name": "OrderEdit",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 1831,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1832,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1833,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1835,
																		1834,
																		1831,
																		1832,
																		1833
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										1836,
										1839,
										1843,
										1848,
										1853,
										1858,
										1862,
										1866,
										1870,
										1874,
										1789,
										1806
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										1789,
										1806
									]
								},
								{
									"title": "Mutations",
									"children": [
										1836,
										1839,
										1843,
										1848,
										1853,
										1858,
										1862,
										1866,
										1870,
										1874
									]
								}
							]
						},
						{
							"id": 24,
							"name": "Orders",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Order API Routes](https://docs.medusajs.com/api/admin#orders).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 852
									},
									{
										"kind": "text",
										"text": ".\n\nOrders are purchases made by customers, typically through a storefront using cart. Managing orders include managing fulfillment, payment, claims, reservations, and more.\n\nRelated Guide: [How to manage orders](https://docs.medusajs.com/modules/orders/admin/manage-orders)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 1954,
									"name": "useAdminUpdateOrder",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1955,
											"name": "useAdminUpdateOrder",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates an order's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateOrder } from \"medusa-react\"\n\ntype Props = {\n  orderId: string\n}\n\nconst Order = ({ orderId }: Props) => {\n  const updateOrder = useAdminUpdateOrder(\n    orderId\n  )\n\n  const handleUpdate = (\n    email: string\n  ) => {\n    updateOrder.mutate({\n      email,\n    }, {\n      onSuccess: ({ order }) => {\n        console.log(order.email)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Order\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1956,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1957,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/update-order.d.ts",
																	"qualifiedName": "AdminPostOrdersOrderReq"
																},
																"name": "AdminPostOrdersOrderReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/update-order.d.ts",
															"qualifiedName": "AdminPostOrdersOrderReq"
														},
														"name": "AdminPostOrdersOrderReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1958,
									"name": "useAdminCancelOrder",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1959,
											"name": "useAdminCancelOrder",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook cancels an order and change its status. This will also cancel any associated fulfillments and payments, \nand it may fail if the payment or fulfillment Provider is unable to cancel the payment/fulfillment."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCancelOrder } from \"medusa-react\"\n\ntype Props = {\n  orderId: string\n}\n\nconst Order = ({ orderId }: Props) => {\n  const cancelOrder = useAdminCancelOrder(\n    orderId\n  )\n  // ...\n\n  const handleCancel = () => {\n    cancelOrder.mutate(void 0, {\n      onSuccess: ({ order }) => {\n        console.log(order.status)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Order\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1960,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1961,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1962,
									"name": "useAdminCompleteOrder",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1963,
											"name": "useAdminCompleteOrder",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook completes an order and change its status. A canceled order can't be completed."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCompleteOrder } from \"medusa-react\"\n\ntype Props = {\n  orderId: string\n}\n\nconst Order = ({ orderId }: Props) => {\n  const completeOrder = useAdminCompleteOrder(\n    orderId\n  )\n  // ...\n\n  const handleComplete = () => {\n    completeOrder.mutate(void 0, {\n      onSuccess: ({ order }) => {\n        console.log(order.status)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Order\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1964,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1965,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1966,
									"name": "useAdminCapturePayment",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1967,
											"name": "useAdminCapturePayment",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook captures all the payments associated with an order. The payment of canceled orders can't be captured."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCapturePayment } from \"medusa-react\"\n\ntype Props = {\n  orderId: string\n}\n\nconst Order = ({ orderId }: Props) => {\n  const capturePayment = useAdminCapturePayment(\n    orderId\n  )\n  // ...\n\n  const handleCapture = () => {\n    capturePayment.mutate(void 0, {\n      onSuccess: ({ order }) => {\n        console.log(order.status)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Order\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1968,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1969,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1970,
									"name": "useAdminRefundPayment",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1971,
											"name": "useAdminRefundPayment",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook refunds an amount for an order. The amount must be less than or equal the "
													},
													{
														"kind": "code",
														"text": "`refundable_amount`"
													},
													{
														"kind": "text",
														"text": " of the order."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminRefundPayment } from \"medusa-react\"\n\ntype Props = {\n  orderId: string\n}\n\nconst Order = ({ orderId }: Props) => {\n  const refundPayment = useAdminRefundPayment(\n    orderId\n  )\n  // ...\n\n  const handleRefund = (\n    amount: number,\n    reason: string\n  ) => {\n    refundPayment.mutate({\n      amount,\n      reason,\n    }, {\n      onSuccess: ({ order }) => {\n        console.log(order.refunds)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Order\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1972,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1973,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/refund-payment.d.ts",
																	"qualifiedName": "AdminPostOrdersOrderRefundsReq"
																},
																"name": "AdminPostOrdersOrderRefundsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/refund-payment.d.ts",
															"qualifiedName": "AdminPostOrdersOrderRefundsReq"
														},
														"name": "AdminPostOrdersOrderRefundsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1974,
									"name": "useAdminCreateFulfillment",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1975,
											"name": "useAdminCreateFulfillment",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a Fulfillment of an Order using the fulfillment provider, and change the order's \nfulfillment status to either "
													},
													{
														"kind": "code",
														"text": "`partially_fulfilled`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`fulfilled`"
													},
													{
														"kind": "text",
														"text": ", depending on\nwhether all the items were fulfilled."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateFulfillment } from \"medusa-react\"\n\ntype Props = {\n  orderId: string\n}\n\nconst Order = ({ orderId }: Props) => {\n  const createFulfillment = useAdminCreateFulfillment(\n    orderId\n  )\n  // ...\n\n  const handleCreateFulfillment = (\n    itemId: string,\n    quantity: number\n  ) => {\n    createFulfillment.mutate({\n      items: [\n        {\n          item_id: itemId,\n          quantity,\n        },\n      ],\n    }, {\n      onSuccess: ({ order }) => {\n        console.log(order.fulfillments)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Order\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1976,
													"name": "orderId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1977,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/create-fulfillment.d.ts",
																	"qualifiedName": "AdminPostOrdersOrderFulfillmentsReq"
																},
																"name": "AdminPostOrdersOrderFulfillmentsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/create-fulfillment.d.ts",
															"qualifiedName": "AdminPostOrdersOrderFulfillmentsReq"
														},
														"name": "AdminPostOrdersOrderFulfillmentsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1978,
									"name": "useAdminCancelFulfillment",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1979,
											"name": "useAdminCancelFulfillment",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook cancels an order's fulfillment and change its fulfillment status to "
													},
													{
														"kind": "code",
														"text": "`canceled`"
													},
													{
														"kind": "text",
														"text": "."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "string - The fulfillment's ID."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCancelFulfillment } from \"medusa-react\"\n\ntype Props = {\n  orderId: string\n}\n\nconst Order = ({ orderId }: Props) => {\n  const cancelFulfillment = useAdminCancelFulfillment(\n    orderId\n  )\n  // ...\n\n  const handleCancel = (\n    fulfillmentId: string\n  ) => {\n    cancelFulfillment.mutate(fulfillmentId, {\n      onSuccess: ({ order }) => {\n        console.log(order.fulfillments)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Order\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1980,
													"name": "orderId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1981,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1982,
									"name": "useAdminCreateShipment",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1983,
											"name": "useAdminCreateShipment",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a shipment and mark a fulfillment as shipped. This changes the order's fulfillment status to either \n"
													},
													{
														"kind": "code",
														"text": "`partially_shipped`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`shipped`"
													},
													{
														"kind": "text",
														"text": ", depending on whether all the items were shipped."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateShipment } from \"medusa-react\"\n\ntype Props = {\n  orderId: string\n}\n\nconst Order = ({ orderId }: Props) => {\n  const createShipment = useAdminCreateShipment(\n    orderId\n  )\n  // ...\n\n  const handleCreate = (\n    fulfillmentId: string\n  ) => {\n    createShipment.mutate({\n      fulfillment_id: fulfillmentId,\n    }, {\n      onSuccess: ({ order }) => {\n        console.log(order.fulfillment_status)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Order\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1984,
													"name": "orderId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1985,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/create-shipment.d.ts",
																	"qualifiedName": "AdminPostOrdersOrderShipmentReq"
																},
																"name": "AdminPostOrdersOrderShipmentReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/create-shipment.d.ts",
															"qualifiedName": "AdminPostOrdersOrderShipmentReq"
														},
														"name": "AdminPostOrdersOrderShipmentReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1986,
									"name": "useAdminRequestReturn",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1987,
											"name": "useAdminRequestReturn",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook requests and create a return for items in an order. If the return shipping method is specified, it will be automatically fulfilled."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminRequestReturn } from \"medusa-react\"\n\ntype Props = {\n  orderId: string\n}\n\nconst Order = ({ orderId }: Props) => {\n  const requestReturn = useAdminRequestReturn(\n    orderId\n  )\n  // ...\n\n  const handleRequestingReturn = (\n    itemId: string,\n    quantity: number\n  ) => {\n    requestReturn.mutate({\n      items: [\n        {\n          item_id: itemId,\n          quantity\n        }\n      ]\n    }, {\n      onSuccess: ({ order }) => {\n        console.log(order.returns)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Order\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1988,
													"name": "orderId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1989,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/request-return.d.ts",
																	"qualifiedName": "AdminPostOrdersOrderReturnsReq"
																},
																"name": "AdminPostOrdersOrderReturnsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/request-return.d.ts",
															"qualifiedName": "AdminPostOrdersOrderReturnsReq"
														},
														"name": "AdminPostOrdersOrderReturnsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1990,
									"name": "useAdminAddShippingMethod",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1991,
											"name": "useAdminAddShippingMethod",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook adds a shipping method to an order. If another shipping method exists with the same shipping profile, the previous shipping method will be replaced."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminAddShippingMethod } from \"medusa-react\"\n\ntype Props = {\n  orderId: string\n}\n\nconst Order = ({ orderId }: Props) => {\n  const addShippingMethod = useAdminAddShippingMethod(\n    orderId\n  )\n  // ...\n\n  const handleAddShippingMethod = (\n    optionId: string,\n    price: number\n  ) => {\n    addShippingMethod.mutate({\n      option_id: optionId,\n      price\n    }, {\n      onSuccess: ({ order }) => {\n        console.log(order.shipping_methods)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Order\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1992,
													"name": "orderId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1993,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/add-shipping-method.d.ts",
																	"qualifiedName": "AdminPostOrdersOrderShippingMethodsReq"
																},
																"name": "AdminPostOrdersOrderShippingMethodsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/add-shipping-method.d.ts",
															"qualifiedName": "AdminPostOrdersOrderShippingMethodsReq"
														},
														"name": "AdminPostOrdersOrderShippingMethodsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1994,
									"name": "useAdminArchiveOrder",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1995,
											"name": "useAdminArchiveOrder",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The hook archives an order and change its status."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminArchiveOrder } from \"medusa-react\"\n\ntype Props = {\n  orderId: string\n}\n\nconst Order = ({ orderId }: Props) => {\n  const archiveOrder = useAdminArchiveOrder(\n    orderId\n  )\n  // ...\n\n  const handleArchivingOrder = () => {\n    archiveOrder.mutate(void 0, {\n      onSuccess: ({ order }) => {\n        console.log(order.status)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Order\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1996,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1997,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1904,
									"name": "useAdminOrders",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1905,
											"name": "useAdminOrders",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of orders. The orders can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`status`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`display_id`"
													},
													{
														"kind": "text",
														"text": " passed \nin the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter. The order can also be paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list orders:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminOrders } from \"medusa-react\"\n\nconst Orders = () => {\n  const { orders, isLoading } = useAdminOrders()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {orders && !orders.length && <span>No Orders</span>}\n      {orders && orders.length > 0 && (\n        <ul>\n          {orders.map((order) => (\n            <li key={order.id}>{order.display_id}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Orders\n```"
															},
															{
																"kind": "text",
																"text": "\n\nYou can use the "
															},
															{
																"kind": "code",
																"text": "`query`"
															},
															{
																"kind": "text",
																"text": " parameter to pass filters and specify relations that should be retrieved within the orders. In addition,\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`50`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminOrders } from \"medusa-react\"\n\nconst Orders = () => {\n  const { \n    orders,\n    limit,\n    offset,\n    isLoading\n  } = useAdminOrders({\n    expand: \"customers\",\n    limit: 20,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {orders && !orders.length && <span>No Orders</span>}\n      {orders && orders.length > 0 && (\n        <ul>\n          {orders.map((order) => (\n            <li key={order.id}>{order.display_id}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Orders\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1906,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations applied on the retrieved orders."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/list-orders.d.ts",
															"qualifiedName": "AdminGetOrdersParams"
														},
														"name": "AdminGetOrdersParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 1907,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersListRes"
																		},
																		"name": "AdminOrdersListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_orders"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 1908,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 1909,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						1909
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 1910,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1915,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1914,
																	"name": "orders",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																				"qualifiedName": "Order"
																			},
																			"name": "Order",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 1911,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1912,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1913,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1915,
																		1914,
																		1911,
																		1912,
																		1913
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1916,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1921,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1920,
																	"name": "orders",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																				"qualifiedName": "Order"
																			},
																			"name": "Order",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 1917,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1918,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1919,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1921,
																		1920,
																		1917,
																		1918,
																		1919
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1922,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1927,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1926,
																	"name": "orders",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																				"qualifiedName": "Order"
																			},
																			"name": "Order",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 1923,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1924,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1925,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1927,
																		1926,
																		1923,
																		1924,
																		1925
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1928,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1933,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1932,
																	"name": "orders",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																				"qualifiedName": "Order"
																			},
																			"name": "Order",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 1929,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1930,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1931,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1933,
																		1932,
																		1929,
																		1930,
																		1931
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 1934,
									"name": "useAdminOrder",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 1935,
											"name": "useAdminOrder",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieve an order's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "A simple example that retrieves an order by its ID:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminOrder } from \"medusa-react\"\n\ntype Props = {\n  orderId: string\n}\n\nconst Order = ({ orderId }: Props) => {\n  const { \n    order, \n    isLoading, \n  } = useAdminOrder(orderId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {order && <span>{order.display_id}</span>}\n      \n    </div>\n  )\n}\n\nexport default Order\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminOrder } from \"medusa-react\"\n\nconst Order = (\n  orderId: string\n) => {\n  const { \n    order, \n    isLoading, \n  } = useAdminOrder(orderId, {\n    expand: \"customer\"\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {order && <span>{order.display_id}</span>}\n      \n    </div>\n  )\n}\n\nexport default Order\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 1936,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1937,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Configurations to apply on the retrieved order."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
															"qualifiedName": "FindParams"
														},
														"name": "FindParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 1938,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "reflection",
																			"declaration": {
																				"id": 1939,
																				"name": "__type",
																				"variant": "declaration",
																				"kind": 65536,
																				"flags": {},
																				"children": [
																					{
																						"id": 1940,
																						"name": "expand",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"comment": {
																							"summary": [
																								{
																									"kind": "text",
																									"text": "Comma-separated relations that should be expanded in the returned data."
																								}
																							]
																						},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					},
																					{
																						"id": 1941,
																						"name": "fields",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"comment": {
																							"summary": [
																								{
																									"kind": "text",
																									"text": "Comma-separated fields that should be included in the returned data."
																								}
																							]
																						},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"children": [
																							1940,
																							1941
																						]
																					}
																				]
																			}
																		}
																	]
																}
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 1942,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1944,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1943,
																	"name": "order",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																			"qualifiedName": "Order"
																		},
																		"name": "Order",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1944,
																		1943
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1945,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1947,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1946,
																	"name": "order",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																			"qualifiedName": "Order"
																		},
																		"name": "Order",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1947,
																		1946
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1948,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1950,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1949,
																	"name": "order",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																			"qualifiedName": "Order"
																		},
																		"name": "Order",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1950,
																		1949
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1951,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1953,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 1952,
																	"name": "order",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																			"qualifiedName": "Order"
																		},
																		"name": "Order",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1953,
																		1952
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										1954,
										1958,
										1962,
										1966,
										1970,
										1974,
										1978,
										1982,
										1986,
										1990,
										1994,
										1904,
										1934
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										1904,
										1934
									]
								},
								{
									"title": "Mutations",
									"children": [
										1954,
										1958,
										1962,
										1966,
										1970,
										1974,
										1978,
										1982,
										1986,
										1990,
										1994
									]
								}
							]
						},
						{
							"id": 25,
							"name": "Payment Collections",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Payment Collection API Routes](https://docs.medusajs.com/api/admin#payment-collections).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 852
									},
									{
										"kind": "text",
										"text": ".\n\nA payment collection is useful for managing additional payments, such as for Order Edits, or installment payments."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 2015,
									"name": "useAdminDeletePaymentCollection",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2016,
											"name": "useAdminDeletePaymentCollection",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a payment collection. Only payment collections with the statuses "
													},
													{
														"kind": "code",
														"text": "`canceled`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`not_paid`"
													},
													{
														"kind": "text",
														"text": " can be deleted."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeletePaymentCollection } from \"medusa-react\"\n\ntype Props = {\n  paymentCollectionId: string\n}\n\nconst PaymentCollection = ({ paymentCollectionId }: Props) => {\n  const deleteCollection = useAdminDeletePaymentCollection(\n    paymentCollectionId\n  )\n  // ...\n\n  const handleDelete = () => {\n    deleteCollection.mutate(void 0, {\n      onSuccess: ({ id, object, deleted }) => {\n        console.log(id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default PaymentCollection\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2017,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The payment collection's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2018,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payment-collections/index.d.ts",
																			"qualifiedName": "AdminPaymentCollectionDeleteRes"
																		},
																		"name": "AdminPaymentCollectionDeleteRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payment-collections/index.d.ts",
																	"qualifiedName": "AdminPaymentCollectionDeleteRes"
																},
																"name": "AdminPaymentCollectionDeleteRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 2019,
									"name": "useAdminUpdatePaymentCollection",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2020,
											"name": "useAdminUpdatePaymentCollection",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a payment collection's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdatePaymentCollection } from \"medusa-react\"\n\ntype Props = {\n  paymentCollectionId: string\n}\n\nconst PaymentCollection = ({ paymentCollectionId }: Props) => {\n  const updateCollection = useAdminUpdatePaymentCollection(\n    paymentCollectionId\n  )\n  // ...\n\n  const handleUpdate = (\n    description: string\n  ) => {\n    updateCollection.mutate({\n      description\n    }, {\n      onSuccess: ({ payment_collection }) => {\n        console.log(payment_collection.description)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default PaymentCollection\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2021,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The payment collection's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2022,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payment-collections/index.d.ts",
																			"qualifiedName": "AdminPaymentCollectionsRes"
																		},
																		"name": "AdminPaymentCollectionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payment-collections/update-payment-collection.d.ts",
																	"qualifiedName": "AdminUpdatePaymentCollectionsReq"
																},
																"name": "AdminUpdatePaymentCollectionsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payment-collections/index.d.ts",
																	"qualifiedName": "AdminPaymentCollectionsRes"
																},
																"name": "AdminPaymentCollectionsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payment-collections/update-payment-collection.d.ts",
															"qualifiedName": "AdminUpdatePaymentCollectionsReq"
														},
														"name": "AdminUpdatePaymentCollectionsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 2023,
									"name": "useAdminMarkPaymentCollectionAsAuthorized",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2024,
											"name": "useAdminMarkPaymentCollectionAsAuthorized",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook sets the status of a payment collection as "
													},
													{
														"kind": "code",
														"text": "`authorized`"
													},
													{
														"kind": "text",
														"text": ". This will also change the "
													},
													{
														"kind": "code",
														"text": "`authorized_amount`"
													},
													{
														"kind": "text",
														"text": " of the payment collection."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminMarkPaymentCollectionAsAuthorized } from \"medusa-react\"\n\ntype Props = {\n  paymentCollectionId: string\n}\n\nconst PaymentCollection = ({ paymentCollectionId }: Props) => {\n  const markAsAuthorized = useAdminMarkPaymentCollectionAsAuthorized(\n    paymentCollectionId\n  )\n  // ...\n\n  const handleAuthorization = () => {\n    markAsAuthorized.mutate(void 0, {\n      onSuccess: ({ payment_collection }) => {\n        console.log(payment_collection.status)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default PaymentCollection\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2025,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The payment collection's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2026,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payment-collections/index.d.ts",
																			"qualifiedName": "AdminPaymentCollectionsRes"
																		},
																		"name": "AdminPaymentCollectionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payment-collections/index.d.ts",
																	"qualifiedName": "AdminPaymentCollectionsRes"
																},
																"name": "AdminPaymentCollectionsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 1999,
									"name": "useAdminPaymentCollection",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2000,
											"name": "useAdminPaymentCollection",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a Payment Collection's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminPaymentCollection } from \"medusa-react\"\n\ntype Props = {\n  paymentCollectionId: string\n}\n\nconst PaymentCollection = ({ paymentCollectionId }: Props) => {\n  const { \n    payment_collection, \n    isLoading, \n  } = useAdminPaymentCollection(paymentCollectionId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {payment_collection && (\n        <span>{payment_collection.status}</span>\n      )}\n      \n    </div>\n  )\n}\n\nexport default PaymentCollection\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2001,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The payment collection's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2002,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payment-collections/index.d.ts",
																			"qualifiedName": "AdminPaymentCollectionsRes"
																		},
																		"name": "AdminPaymentCollectionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "paymentCollection"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 2003,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2005,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2004,
																	"name": "payment_collection",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/payment-collection.d.ts",
																			"qualifiedName": "PaymentCollection"
																		},
																		"name": "PaymentCollection",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2005,
																		2004
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2006,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2008,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2007,
																	"name": "payment_collection",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/payment-collection.d.ts",
																			"qualifiedName": "PaymentCollection"
																		},
																		"name": "PaymentCollection",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2008,
																		2007
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2009,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2011,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2010,
																	"name": "payment_collection",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/payment-collection.d.ts",
																			"qualifiedName": "PaymentCollection"
																		},
																		"name": "PaymentCollection",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2011,
																		2010
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2012,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2014,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2013,
																	"name": "payment_collection",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/payment-collection.d.ts",
																			"qualifiedName": "PaymentCollection"
																		},
																		"name": "PaymentCollection",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2014,
																		2013
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										2015,
										2019,
										2023,
										1999
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										1999
									]
								},
								{
									"title": "Mutations",
									"children": [
										2015,
										2019,
										2023
									]
								}
							]
						},
						{
							"id": 26,
							"name": "Payments",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Payment API Routes](https://docs.medusajs.com/api/admin#payments).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 852
									},
									{
										"kind": "text",
										"text": ".\n\nA payment can be related to an order, swap, return, or more. It can be captured or refunded."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 2044,
									"name": "useAdminPaymentsCapturePayment",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2045,
											"name": "useAdminPaymentsCapturePayment",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook captures a payment."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminPaymentsCapturePayment } from \"medusa-react\"\n\ntype Props = {\n  paymentId: string\n}\n\nconst Payment = ({ paymentId }: Props) => {\n  const capture = useAdminPaymentsCapturePayment(\n    paymentId\n  )\n  // ...\n\n  const handleCapture = () => {\n    capture.mutate(void 0, {\n      onSuccess: ({ payment }) => {\n        console.log(payment.amount)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Payment\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2046,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The payment's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2047,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payments/index.d.ts",
																			"qualifiedName": "AdminPaymentRes"
																		},
																		"name": "AdminPaymentRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payments/index.d.ts",
																	"qualifiedName": "AdminPaymentRes"
																},
																"name": "AdminPaymentRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 2048,
									"name": "useAdminPaymentsRefundPayment",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2049,
											"name": "useAdminPaymentsRefundPayment",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook refunds a payment. The payment must be captured first."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { RefundReason } from \"@medusajs/medusa\"\nimport { useAdminPaymentsRefundPayment } from \"medusa-react\"\n\ntype Props = {\n  paymentId: string\n}\n\nconst Payment = ({ paymentId }: Props) => {\n  const refund = useAdminPaymentsRefundPayment(\n    paymentId\n  )\n  // ...\n\n  const handleRefund = (\n    amount: number,\n    reason: RefundReason,\n    note: string\n  ) => {\n    refund.mutate({\n      amount,\n      reason,\n      note\n    }, {\n      onSuccess: ({ refund }) => {\n        console.log(refund.amount)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Payment\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2050,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The payment's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2051,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payments/index.d.ts",
																			"qualifiedName": "AdminRefundRes"
																		},
																		"name": "AdminRefundRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payments/refund-payment.d.ts",
																	"qualifiedName": "AdminPostPaymentRefundsReq"
																},
																"name": "AdminPostPaymentRefundsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payments/index.d.ts",
																	"qualifiedName": "AdminRefundRes"
																},
																"name": "AdminRefundRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payments/refund-payment.d.ts",
															"qualifiedName": "AdminPostPaymentRefundsReq"
														},
														"name": "AdminPostPaymentRefundsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 2028,
									"name": "useAdminPayment",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2029,
											"name": "useAdminPayment",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a payment's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminPayment } from \"medusa-react\"\n\ntype Props = {\n  paymentId: string\n}\n\nconst Payment = ({ paymentId }: Props) => {\n  const { \n    payment, \n    isLoading, \n  } = useAdminPayment(paymentId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {payment && <span>{payment.amount}</span>}\n      \n    </div>\n  )\n}\n\nexport default Payment\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2030,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The payment's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2031,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payments/index.d.ts",
																			"qualifiedName": "AdminPaymentRes"
																		},
																		"name": "AdminPaymentRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "payment"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 2032,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2034,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2033,
																	"name": "payment",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/payment.d.ts",
																			"qualifiedName": "Payment"
																		},
																		"name": "Payment",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2034,
																		2033
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2035,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2037,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2036,
																	"name": "payment",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/payment.d.ts",
																			"qualifiedName": "Payment"
																		},
																		"name": "Payment",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2037,
																		2036
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2038,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2040,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2039,
																	"name": "payment",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/payment.d.ts",
																			"qualifiedName": "Payment"
																		},
																		"name": "Payment",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2040,
																		2039
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2041,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2043,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2042,
																	"name": "payment",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/payment.d.ts",
																			"qualifiedName": "Payment"
																		},
																		"name": "Payment",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2043,
																		2042
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										2044,
										2048,
										2028
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										2028
									]
								},
								{
									"title": "Mutations",
									"children": [
										2044,
										2048
									]
								}
							]
						},
						{
							"id": 27,
							"name": "Price Lists",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Price List API Routes](https://docs.medusajs.com/api/admin#price-lists).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 852
									},
									{
										"kind": "text",
										"text": ".\n\nA price list are special prices applied to products based on a set of conditions, such as customer group.\n\nRelated Guide: [How to manage price lists](https://docs.medusajs.com/modules/price-lists/admin/manage-price-lists)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 2150,
									"name": "useAdminCreatePriceList",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2151,
											"name": "useAdminCreatePriceList",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a price list."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  PriceListStatus, \n  PriceListType, \n} from \"@medusajs/medusa\"\nimport { useAdminCreatePriceList } from \"medusa-react\"\n\ntype CreateData = {\n  name: string\n  description: string\n  type: PriceListType\n  status: PriceListStatus\n  prices: {\n    amount: number\n    variant_id: string\n    currency_code: string\n    max_quantity: number\n  }[]\n}\n\nconst CreatePriceList = () => {\n  const createPriceList = useAdminCreatePriceList()\n  // ...\n\n  const handleCreate = (\n    data: CreateData\n  ) => {\n    createPriceList.mutate(data, {\n      onSuccess: ({ price_list }) => {\n        console.log(price_list.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreatePriceList\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2152,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
																			"qualifiedName": "AdminPriceListRes"
																		},
																		"name": "AdminPriceListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/create-price-list.d.ts",
																	"qualifiedName": "AdminPostPriceListsPriceListReq"
																},
																"name": "AdminPostPriceListsPriceListReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
																	"qualifiedName": "AdminPriceListRes"
																},
																"name": "AdminPriceListRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/create-price-list.d.ts",
															"qualifiedName": "AdminPostPriceListsPriceListReq"
														},
														"name": "AdminPostPriceListsPriceListReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 2153,
									"name": "useAdminUpdatePriceList",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2154,
											"name": "useAdminUpdatePriceList",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a price list's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdatePriceList } from \"medusa-react\"\n\ntype Props = {\n  priceListId: string\n}\n\nconst PriceList = ({\n  priceListId\n}: Props) => {\n  const updatePriceList = useAdminUpdatePriceList(priceListId)\n  // ...\n\n  const handleUpdate = (\n    endsAt: Date\n  ) => {\n    updatePriceList.mutate({\n      ends_at: endsAt,\n    }, {\n      onSuccess: ({ price_list }) => {\n        console.log(price_list.ends_at)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default PriceList\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2155,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The price list's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2156,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
																			"qualifiedName": "AdminPriceListRes"
																		},
																		"name": "AdminPriceListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/update-price-list.d.ts",
																	"qualifiedName": "AdminPostPriceListsPriceListPriceListReq"
																},
																"name": "AdminPostPriceListsPriceListPriceListReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
																	"qualifiedName": "AdminPriceListRes"
																},
																"name": "AdminPriceListRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/update-price-list.d.ts",
															"qualifiedName": "AdminPostPriceListsPriceListPriceListReq"
														},
														"name": "AdminPostPriceListsPriceListPriceListReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 2157,
									"name": "useAdminDeletePriceList",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2158,
											"name": "useAdminDeletePriceList",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a price list and its associated prices."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeletePriceList } from \"medusa-react\"\n\ntype Props = {\n  priceListId: string\n}\n\nconst PriceList = ({\n  priceListId\n}: Props) => {\n  const deletePriceList = useAdminDeletePriceList(priceListId)\n  // ...\n\n  const handleDelete = () => {\n    deletePriceList.mutate(void 0, {\n      onSuccess: ({ id, object, deleted }) => {\n        console.log(id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default PriceList\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2159,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The price list's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2160,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																			"qualifiedName": "DeleteResponse"
																		},
																		"name": "DeleteResponse",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 2161,
									"name": "useAdminCreatePriceListPrices",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2162,
											"name": "useAdminCreatePriceListPrices",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook adds or updates a list of prices in a price list."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreatePriceListPrices } from \"medusa-react\"\n\ntype PriceData = {\n  amount: number\n  variant_id: string\n  currency_code: string\n}\n\ntype Props = {\n  priceListId: string\n}\n\nconst PriceList = ({\n  priceListId\n}: Props) => {\n  const addPrices = useAdminCreatePriceListPrices(priceListId)\n  // ...\n\n  const handleAddPrices = (prices: PriceData[]) => {\n    addPrices.mutate({\n      prices\n    }, {\n      onSuccess: ({ price_list }) => {\n        console.log(price_list.prices)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default PriceList\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2163,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The price list's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2164,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
																			"qualifiedName": "AdminPriceListRes"
																		},
																		"name": "AdminPriceListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/add-prices-batch.d.ts",
																	"qualifiedName": "AdminPostPriceListPricesPricesReq"
																},
																"name": "AdminPostPriceListPricesPricesReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
																	"qualifiedName": "AdminPriceListRes"
																},
																"name": "AdminPriceListRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/add-prices-batch.d.ts",
															"qualifiedName": "AdminPostPriceListPricesPricesReq"
														},
														"name": "AdminPostPriceListPricesPricesReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 2165,
									"name": "useAdminDeletePriceListPrices",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2166,
											"name": "useAdminDeletePriceListPrices",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a list of prices in a price list."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeletePriceListPrices } from \"medusa-react\"\n\ntype Props = {\n  priceListId: string\n}\n\nconst PriceList = ({\n  priceListId\n}: Props) => {\n  const deletePrices = useAdminDeletePriceListPrices(priceListId)\n  // ...\n\n  const handleDeletePrices = (priceIds: string[]) => {\n    deletePrices.mutate({\n      price_ids: priceIds\n    }, {\n      onSuccess: ({ ids, deleted, object }) => {\n        console.log(ids)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default PriceList\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2167,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The price list's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2168,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
																			"qualifiedName": "AdminPriceListDeleteBatchRes"
																		},
																		"name": "AdminPriceListDeleteBatchRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/delete-prices-batch.d.ts",
																	"qualifiedName": "AdminDeletePriceListPricesPricesReq"
																},
																"name": "AdminDeletePriceListPricesPricesReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
																	"qualifiedName": "AdminPriceListDeleteBatchRes"
																},
																"name": "AdminPriceListDeleteBatchRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/delete-prices-batch.d.ts",
															"qualifiedName": "AdminDeletePriceListPricesPricesReq"
														},
														"name": "AdminDeletePriceListPricesPricesReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 2169,
									"name": "useAdminDeletePriceListProductsPrices",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2170,
											"name": "useAdminDeletePriceListProductsPrices",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes all the prices associated with multiple products in a price list."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeletePriceListProductsPrices } from \"medusa-react\"\n\ntype Props = {\n  priceListId: string\n}\n\nconst PriceList = ({\n  priceListId\n}: Props) => {\n  const deleteProductsPrices = useAdminDeletePriceListProductsPrices(\n    priceListId\n  )\n  // ...\n\n  const handleDeleteProductsPrices = (productIds: string[]) => {\n    deleteProductsPrices.mutate({\n      product_ids: productIds\n    }, {\n      onSuccess: ({ ids, deleted, object }) => {\n        console.log(ids)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default PriceList\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2171,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The price list's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2172,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
																			"qualifiedName": "AdminPriceListDeleteBatchRes"
																		},
																		"name": "AdminPriceListDeleteBatchRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/delete-products-prices-batch.d.ts",
																	"qualifiedName": "AdminDeletePriceListsPriceListProductsPricesBatchReq"
																},
																"name": "AdminDeletePriceListsPriceListProductsPricesBatchReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
																	"qualifiedName": "AdminPriceListDeleteBatchRes"
																},
																"name": "AdminPriceListDeleteBatchRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/delete-products-prices-batch.d.ts",
															"qualifiedName": "AdminDeletePriceListsPriceListProductsPricesBatchReq"
														},
														"name": "AdminDeletePriceListsPriceListProductsPricesBatchReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 2173,
									"name": "useAdminDeletePriceListProductPrices",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2174,
											"name": "useAdminDeletePriceListProductPrices",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes all the prices related to a specific product in a price list."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminDeletePriceListProductPrices\n} from \"medusa-react\"\n\ntype Props = {\n  priceListId: string\n  productId: string\n}\n\nconst PriceListProduct = ({\n  priceListId,\n  productId\n}: Props) => {\n  const deleteProductPrices = useAdminDeletePriceListProductPrices(\n    priceListId,\n    productId\n  )\n  // ...\n\n  const handleDeleteProductPrices = () => {\n    deleteProductPrices.mutate(void 0, {\n      onSuccess: ({ ids, deleted, object }) => {\n        console.log(ids)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default PriceListProduct\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2175,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The price list's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2176,
													"name": "productId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2177,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
																			"qualifiedName": "AdminPriceListDeleteBatchRes"
																		},
																		"name": "AdminPriceListDeleteBatchRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
																	"qualifiedName": "AdminPriceListDeleteBatchRes"
																},
																"name": "AdminPriceListDeleteBatchRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 2178,
									"name": "useAdminDeletePriceListVariantPrices",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2179,
											"name": "useAdminDeletePriceListVariantPrices",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes all the prices related to a specific product variant in a price list."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminDeletePriceListVariantPrices\n} from \"medusa-react\"\n\ntype Props = {\n  priceListId: string\n  variantId: string\n}\n\nconst PriceListVariant = ({\n  priceListId,\n  variantId\n}: Props) => {\n  const deleteVariantPrices = useAdminDeletePriceListVariantPrices(\n    priceListId,\n    variantId\n  )\n  // ...\n\n  const handleDeleteVariantPrices = () => {\n    deleteVariantPrices.mutate(void 0, {\n      onSuccess: ({ ids, deleted, object }) => {\n        console.log(ids)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default PriceListVariant\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2180,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The price list's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2181,
													"name": "variantId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product variant's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2182,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
																			"qualifiedName": "AdminPriceListDeleteBatchRes"
																		},
																		"name": "AdminPriceListDeleteBatchRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
																	"qualifiedName": "AdminPriceListDeleteBatchRes"
																},
																"name": "AdminPriceListDeleteBatchRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 2075,
									"name": "useAdminPriceLists",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2076,
											"name": "useAdminPriceLists",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of price lists. The price lists can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`q`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`status`"
													},
													{
														"kind": "text",
														"text": " passed \nin the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter. The price lists can also be sorted or paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list price lists:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminPriceLists } from \"medusa-react\"\n\nconst PriceLists = () => {\n  const { price_lists, isLoading } = useAdminPriceLists()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {price_lists && !price_lists.length && (\n        <span>No Price Lists</span>\n      )}\n      {price_lists && price_lists.length > 0 && (\n        <ul>\n          {price_lists.map((price_list) => (\n            <li key={price_list.id}>{price_list.name}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default PriceLists\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved within the price lists:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminPriceLists } from \"medusa-react\"\n\nconst PriceLists = () => {\n  const { price_lists, isLoading } = useAdminPriceLists({\n    expand: \"prices\"\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {price_lists && !price_lists.length && (\n        <span>No Price Lists</span>\n      )}\n      {price_lists && price_lists.length > 0 && (\n        <ul>\n          {price_lists.map((price_list) => (\n            <li key={price_list.id}>{price_list.name}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default PriceLists\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`10`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminPriceLists } from \"medusa-react\"\n\nconst PriceLists = () => {\n  const { \n    price_lists, \n    limit,\n    offset,\n    isLoading\n  } = useAdminPriceLists({\n    expand: \"prices\",\n    limit: 20,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {price_lists && !price_lists.length && (\n        <span>No Price Lists</span>\n      )}\n      {price_lists && price_lists.length > 0 && (\n        <ul>\n          {price_lists.map((price_list) => (\n            <li key={price_list.id}>{price_list.name}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default PriceLists\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2077,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved price lists."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/list-price-lists.d.ts",
															"qualifiedName": "AdminGetPriceListPaginationParams"
														},
														"name": "AdminGetPriceListPaginationParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 2078,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
																			"qualifiedName": "AdminPriceListsListRes"
																		},
																		"name": "AdminPriceListsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_price_lists"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 2079,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 2080,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						2080
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 2081,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2086,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2085,
																	"name": "price_lists",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/price-list.d.ts",
																				"qualifiedName": "PriceList"
																			},
																			"name": "PriceList",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 2082,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2083,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2084,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2086,
																		2085,
																		2082,
																		2083,
																		2084
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2087,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2092,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2091,
																	"name": "price_lists",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/price-list.d.ts",
																				"qualifiedName": "PriceList"
																			},
																			"name": "PriceList",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 2088,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2089,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2090,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2092,
																		2091,
																		2088,
																		2089,
																		2090
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2093,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2098,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2097,
																	"name": "price_lists",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/price-list.d.ts",
																				"qualifiedName": "PriceList"
																			},
																			"name": "PriceList",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 2094,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2095,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2096,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2098,
																		2097,
																		2094,
																		2095,
																		2096
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2099,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2104,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2103,
																	"name": "price_lists",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/price-list.d.ts",
																				"qualifiedName": "PriceList"
																			},
																			"name": "PriceList",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 2100,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2101,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2102,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2104,
																		2103,
																		2100,
																		2101,
																		2102
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 2105,
									"name": "useAdminPriceListProducts",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2106,
											"name": "useAdminPriceListProducts",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a price list's products. The products can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`q`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`status`"
													},
													{
														"kind": "text",
														"text": " \npassed in the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter. The products can also be sorted or paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list products in a price list:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminPriceListProducts } from \"medusa-react\"\n\ntype Props = {\n  priceListId: string\n}\n\nconst PriceListProducts = ({\n  priceListId\n}: Props) => {\n  const { products, isLoading } = useAdminPriceListProducts(\n    priceListId\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {products && !products.length && (\n        <span>No Price Lists</span>\n      )}\n      {products && products.length > 0 && (\n        <ul>\n          {products.map((product) => (\n            <li key={product.id}>{product.title}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default PriceListProducts\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved within the products:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminPriceListProducts } from \"medusa-react\"\n\ntype Props = {\n  priceListId: string\n}\n\nconst PriceListProducts = ({\n  priceListId\n}: Props) => {\n  const { products, isLoading } = useAdminPriceListProducts(\n    priceListId,\n    {\n      expand: \"variants\"\n    }\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {products && !products.length && (\n        <span>No Price Lists</span>\n      )}\n      {products && products.length > 0 && (\n        <ul>\n          {products.map((product) => (\n            <li key={product.id}>{product.title}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default PriceListProducts\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`50`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminPriceListProducts } from \"medusa-react\"\n\ntype Props = {\n  priceListId: string\n}\n\nconst PriceListProducts = ({\n  priceListId\n}: Props) => {\n  const { \n    products,\n    limit,\n    offset,\n    isLoading\n  } = useAdminPriceListProducts(\n    priceListId,\n    {\n      expand: \"variants\",\n      limit: 20,\n      offset: 0\n    }\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {products && !products.length && (\n        <span>No Price Lists</span>\n      )}\n      {products && products.length > 0 && (\n        <ul>\n          {products.map((product) => (\n            <li key={product.id}>{product.title}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default PriceListProducts\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2107,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The ID of the associated price list."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2108,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations applied on the retrieved products."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/list-price-list-products.d.ts",
															"qualifiedName": "AdminGetPriceListsPriceListProductsParams"
														},
														"name": "AdminGetPriceListsPriceListProductsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 2109,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																			"qualifiedName": "AdminProductsListRes"
																		},
																		"name": "AdminProductsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "typeOperator",
																"operator": "readonly",
																"target": {
																	"type": "tuple",
																	"elements": [
																		{
																			"type": "literal",
																			"value": "admin_price_lists"
																		},
																		{
																			"type": "literal",
																			"value": "detail"
																		},
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "literal",
																			"value": "products"
																		},
																		{
																			"type": "intrinsic",
																			"name": "any"
																		}
																	]
																}
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 2110,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2115,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2114,
																	"name": "products",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "union",
																			"types": [
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/medusa/dist/models/product.d.ts",
																						"qualifiedName": "Product"
																					},
																					"name": "Product",
																					"package": "@medusajs/medusa"
																				},
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																						"qualifiedName": "PricedProduct"
																					},
																					"name": "PricedProduct",
																					"package": "@medusajs/medusa"
																				}
																			]
																		}
																	}
																},
																{
																	"id": 2111,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2112,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2113,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2115,
																		2114,
																		2111,
																		2112,
																		2113
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2116,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2121,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2120,
																	"name": "products",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "union",
																			"types": [
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/medusa/dist/models/product.d.ts",
																						"qualifiedName": "Product"
																					},
																					"name": "Product",
																					"package": "@medusajs/medusa"
																				},
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																						"qualifiedName": "PricedProduct"
																					},
																					"name": "PricedProduct",
																					"package": "@medusajs/medusa"
																				}
																			]
																		}
																	}
																},
																{
																	"id": 2117,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2118,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2119,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2121,
																		2120,
																		2117,
																		2118,
																		2119
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2122,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2127,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2126,
																	"name": "products",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "union",
																			"types": [
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/medusa/dist/models/product.d.ts",
																						"qualifiedName": "Product"
																					},
																					"name": "Product",
																					"package": "@medusajs/medusa"
																				},
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																						"qualifiedName": "PricedProduct"
																					},
																					"name": "PricedProduct",
																					"package": "@medusajs/medusa"
																				}
																			]
																		}
																	}
																},
																{
																	"id": 2123,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2124,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2125,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2127,
																		2126,
																		2123,
																		2124,
																		2125
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2128,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2133,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2132,
																	"name": "products",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "union",
																			"types": [
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/medusa/dist/models/product.d.ts",
																						"qualifiedName": "Product"
																					},
																					"name": "Product",
																					"package": "@medusajs/medusa"
																				},
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																						"qualifiedName": "PricedProduct"
																					},
																					"name": "PricedProduct",
																					"package": "@medusajs/medusa"
																				}
																			]
																		}
																	}
																},
																{
																	"id": 2129,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2130,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2131,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2133,
																		2132,
																		2129,
																		2130,
																		2131
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 2134,
									"name": "useAdminPriceList",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2135,
											"name": "useAdminPriceList",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a price list's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminPriceList } from \"medusa-react\"\n\ntype Props = {\n  priceListId: string\n}\n\nconst PriceList = ({\n  priceListId\n}: Props) => {\n  const { \n    price_list, \n    isLoading, \n  } = useAdminPriceList(priceListId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {price_list && <span>{price_list.name}</span>}\n    </div>\n  )\n}\n\nexport default PriceList\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2136,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The price list's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2137,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
																			"qualifiedName": "AdminPriceListRes"
																		},
																		"name": "AdminPriceListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_price_lists"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 2138,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2140,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2139,
																	"name": "price_list",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/price-list.d.ts",
																			"qualifiedName": "PriceList"
																		},
																		"name": "PriceList",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2140,
																		2139
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2141,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2143,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2142,
																	"name": "price_list",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/price-list.d.ts",
																			"qualifiedName": "PriceList"
																		},
																		"name": "PriceList",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2143,
																		2142
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2144,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2146,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2145,
																	"name": "price_list",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/price-list.d.ts",
																			"qualifiedName": "PriceList"
																		},
																		"name": "PriceList",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2146,
																		2145
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2147,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2149,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2148,
																	"name": "price_list",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/price-list.d.ts",
																			"qualifiedName": "PriceList"
																		},
																		"name": "PriceList",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2149,
																		2148
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										2150,
										2153,
										2157,
										2161,
										2165,
										2169,
										2173,
										2178,
										2075,
										2105,
										2134
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										2075,
										2105,
										2134
									]
								},
								{
									"title": "Mutations",
									"children": [
										2150,
										2153,
										2157,
										2161,
										2165,
										2169,
										2173,
										2178
									]
								}
							]
						},
						{
							"id": 28,
							"name": "Product Categories",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Product Category API Routes](https://docs.medusajs.com/api/admin#product-categories).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 852
									},
									{
										"kind": "text",
										"text": ".\n\nProducts can be categoriezed into categories. A product can be added into more than one category.\n\nRelated Guide: [How to manage product categories](https://docs.medusajs.com/modules/products/admin/manage-categories)."
									}
								],
								"blockTags": [
									{
										"tag": "@featureFlag",
										"content": [
											{
												"kind": "text",
												"text": "product_categories"
											}
										]
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 2231,
									"name": "useAdminCreateProductCategory",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2232,
											"name": "useAdminCreateProductCategory",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a product category."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateProductCategory } from \"medusa-react\"\n\nconst CreateCategory = () => {\n  const createCategory = useAdminCreateProductCategory()\n  // ...\n\n  const handleCreate = (\n    name: string\n  ) => {\n    createCategory.mutate({\n      name,\n    }, {\n      onSuccess: ({ product_category }) => {\n        console.log(product_category.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateCategory\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2233,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/index.d.ts",
																			"qualifiedName": "AdminProductCategoriesCategoryRes"
																		},
																		"name": "AdminProductCategoriesCategoryRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/create-product-category.d.ts",
																	"qualifiedName": "AdminPostProductCategoriesReq"
																},
																"name": "AdminPostProductCategoriesReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/index.d.ts",
																	"qualifiedName": "AdminProductCategoriesCategoryRes"
																},
																"name": "AdminProductCategoriesCategoryRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/create-product-category.d.ts",
															"qualifiedName": "AdminPostProductCategoriesReq"
														},
														"name": "AdminPostProductCategoriesReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 2234,
									"name": "useAdminUpdateProductCategory",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2235,
											"name": "useAdminUpdateProductCategory",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a product category."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateProductCategory } from \"medusa-react\"\n\ntype Props = {\n  productCategoryId: string\n}\n\nconst Category = ({\n  productCategoryId\n}: Props) => {\n  const updateCategory = useAdminUpdateProductCategory(\n    productCategoryId\n  )\n  // ...\n\n  const handleUpdate = (\n    name: string\n  ) => {\n    updateCategory.mutate({\n      name,\n    }, {\n      onSuccess: ({ product_category }) => {\n        console.log(product_category.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Category\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2236,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product category's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2237,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/index.d.ts",
																			"qualifiedName": "AdminProductCategoriesCategoryRes"
																		},
																		"name": "AdminProductCategoriesCategoryRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/update-product-category.d.ts",
																	"qualifiedName": "AdminPostProductCategoriesCategoryReq"
																},
																"name": "AdminPostProductCategoriesCategoryReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/index.d.ts",
																	"qualifiedName": "AdminProductCategoriesCategoryRes"
																},
																"name": "AdminProductCategoriesCategoryRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/update-product-category.d.ts",
															"qualifiedName": "AdminPostProductCategoriesCategoryReq"
														},
														"name": "AdminPostProductCategoriesCategoryReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 2238,
									"name": "useAdminDeleteProductCategory",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2239,
											"name": "useAdminDeleteProductCategory",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a product category. This does not delete associated products."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteProductCategory } from \"medusa-react\"\n\ntype Props = {\n  productCategoryId: string\n}\n\nconst Category = ({\n  productCategoryId\n}: Props) => {\n  const deleteCategory = useAdminDeleteProductCategory(\n    productCategoryId\n  )\n  // ...\n\n  const handleDelete = () => {\n    deleteCategory.mutate(void 0, {\n      onSuccess: ({ id, object, deleted }) => {\n        console.log(id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Category\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2240,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product category's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2241,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																			"qualifiedName": "DeleteResponse"
																		},
																		"name": "DeleteResponse",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 2242,
									"name": "useAdminAddProductsToCategory",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2243,
											"name": "useAdminAddProductsToCategory",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook adds a list of products to a product category."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminAddProductsToCategory } from \"medusa-react\"\n\ntype ProductsData = {\n  id: string\n}\n\ntype Props = {\n  productCategoryId: string\n}\n\nconst Category = ({\n  productCategoryId\n}: Props) => {\n  const addProducts = useAdminAddProductsToCategory(\n    productCategoryId\n  )\n  // ...\n\n  const handleAddProducts = (\n    productIds: ProductsData[]\n  ) => {\n    addProducts.mutate({\n      product_ids: productIds\n    }, {\n      onSuccess: ({ product_category }) => {\n        console.log(product_category.products)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Category\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2244,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product category's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2245,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/index.d.ts",
																			"qualifiedName": "AdminProductCategoriesCategoryRes"
																		},
																		"name": "AdminProductCategoriesCategoryRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/add-products-batch.d.ts",
																	"qualifiedName": "AdminPostProductCategoriesCategoryProductsBatchReq"
																},
																"name": "AdminPostProductCategoriesCategoryProductsBatchReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/index.d.ts",
																	"qualifiedName": "AdminProductCategoriesCategoryRes"
																},
																"name": "AdminProductCategoriesCategoryRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/add-products-batch.d.ts",
															"qualifiedName": "AdminPostProductCategoriesCategoryProductsBatchReq"
														},
														"name": "AdminPostProductCategoriesCategoryProductsBatchReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 2246,
									"name": "useAdminDeleteProductsFromCategory",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2247,
											"name": "useAdminDeleteProductsFromCategory",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook removes a list of products from a product category."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteProductsFromCategory } from \"medusa-react\"\n\ntype ProductsData = {\n  id: string\n}\n\ntype Props = {\n  productCategoryId: string\n}\n\nconst Category = ({\n  productCategoryId\n}: Props) => {\n  const deleteProducts = useAdminDeleteProductsFromCategory(\n    productCategoryId\n  )\n  // ...\n\n  const handleDeleteProducts = (\n    productIds: ProductsData[]\n  ) => {\n    deleteProducts.mutate({\n      product_ids: productIds\n    }, {\n      onSuccess: ({ product_category }) => {\n        console.log(product_category.products)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Category\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2248,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product category's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2249,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/index.d.ts",
																			"qualifiedName": "AdminProductCategoriesCategoryRes"
																		},
																		"name": "AdminProductCategoriesCategoryRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/delete-products-batch.d.ts",
																	"qualifiedName": "AdminDeleteProductCategoriesCategoryProductsBatchReq"
																},
																"name": "AdminDeleteProductCategoriesCategoryProductsBatchReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/index.d.ts",
																	"qualifiedName": "AdminProductCategoriesCategoryRes"
																},
																"name": "AdminProductCategoriesCategoryRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/delete-products-batch.d.ts",
															"qualifiedName": "AdminDeleteProductCategoriesCategoryProductsBatchReq"
														},
														"name": "AdminDeleteProductCategoriesCategoryProductsBatchReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 2184,
									"name": "useAdminProductCategories",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2185,
											"name": "useAdminProductCategories",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook"
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list product categories:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminProductCategories } from \"medusa-react\"\n\nfunction Categories() {\n  const { \n    product_categories,\n    isLoading \n  } = useAdminProductCategories()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {product_categories && !product_categories.length && (\n        <span>No Categories</span>\n      )}\n      {product_categories && product_categories.length > 0 && (\n        <ul>\n          {product_categories.map(\n            (category) => (\n              <li key={category.id}>{category.name}</li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Categories\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved within the product category:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminProductCategories } from \"medusa-react\"\n\nfunction Categories() {\n  const { \n    product_categories,\n    isLoading \n  } = useAdminProductCategories({\n    expand: \"category_children\"\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {product_categories && !product_categories.length && (\n        <span>No Categories</span>\n      )}\n      {product_categories && product_categories.length > 0 && (\n        <ul>\n          {product_categories.map(\n            (category) => (\n              <li key={category.id}>{category.name}</li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Categories\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`100`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminProductCategories } from \"medusa-react\"\n\nfunction Categories() {\n  const { \n    product_categories,\n    limit,\n    offset,\n    isLoading \n  } = useAdminProductCategories({\n    expand: \"category_children\",\n    limit: 20,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {product_categories && !product_categories.length && (\n        <span>No Categories</span>\n      )}\n      {product_categories && product_categories.length > 0 && (\n        <ul>\n          {product_categories.map(\n            (category) => (\n              <li key={category.id}>{category.name}</li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Categories\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2186,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved product categories."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/list-product-categories.d.ts",
															"qualifiedName": "AdminGetProductCategoriesParams"
														},
														"name": "AdminGetProductCategoriesParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 2187,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/index.d.ts",
																			"qualifiedName": "AdminProductCategoriesListRes"
																		},
																		"name": "AdminProductCategoriesListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "product_categories"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 2188,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 2189,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						2189
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 2190,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2195,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2194,
																	"name": "product_categories",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-category.d.ts",
																				"qualifiedName": "ProductCategory"
																			},
																			"name": "ProductCategory",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 2191,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2192,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2193,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2195,
																		2194,
																		2191,
																		2192,
																		2193
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2196,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2201,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2200,
																	"name": "product_categories",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-category.d.ts",
																				"qualifiedName": "ProductCategory"
																			},
																			"name": "ProductCategory",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 2197,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2198,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2199,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2201,
																		2200,
																		2197,
																		2198,
																		2199
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2202,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2207,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2206,
																	"name": "product_categories",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-category.d.ts",
																				"qualifiedName": "ProductCategory"
																			},
																			"name": "ProductCategory",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 2203,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2204,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2205,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2207,
																		2206,
																		2203,
																		2204,
																		2205
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2208,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2213,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2212,
																	"name": "product_categories",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-category.d.ts",
																				"qualifiedName": "ProductCategory"
																			},
																			"name": "ProductCategory",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 2209,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2210,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2211,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2213,
																		2212,
																		2209,
																		2210,
																		2211
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 2214,
									"name": "useAdminProductCategory",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2215,
											"name": "useAdminProductCategory",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a product category's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "A simple example that retrieves an order by its ID:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminProductCategory } from \"medusa-react\"\n\ntype Props = {\n  productCategoryId: string\n}\n\nconst Category = ({\n  productCategoryId\n}: Props) => {\n  const { \n    product_category, \n    isLoading, \n  } = useAdminProductCategory(productCategoryId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {product_category && (\n        <span>{product_category.name}</span>\n      )}\n      \n    </div>\n  )\n}\n\nexport default Category\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminProductCategory } from \"medusa-react\"\n\ntype Props = {\n  productCategoryId: string\n}\n\nconst Category = ({\n  productCategoryId\n}: Props) => {\n  const { \n    product_category, \n    isLoading, \n  } = useAdminProductCategory(productCategoryId, {\n    expand: \"category_children\"\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {product_category && (\n        <span>{product_category.name}</span>\n      )}\n      \n    </div>\n  )\n}\n\nexport default Category\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2216,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product category's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2217,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Configurations to apply on the retrieved product category."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/get-product-category.d.ts",
															"qualifiedName": "AdminGetProductCategoryParams"
														},
														"name": "AdminGetProductCategoryParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 2218,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/index.d.ts",
																			"qualifiedName": "AdminProductCategoriesCategoryRes"
																		},
																		"name": "AdminProductCategoriesCategoryRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "product_categories"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 2219,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2221,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2220,
																	"name": "product_category",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/product-category.d.ts",
																			"qualifiedName": "ProductCategory"
																		},
																		"name": "ProductCategory",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2221,
																		2220
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2222,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2224,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2223,
																	"name": "product_category",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/product-category.d.ts",
																			"qualifiedName": "ProductCategory"
																		},
																		"name": "ProductCategory",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2224,
																		2223
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2225,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2227,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2226,
																	"name": "product_category",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/product-category.d.ts",
																			"qualifiedName": "ProductCategory"
																		},
																		"name": "ProductCategory",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2227,
																		2226
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2228,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2230,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2229,
																	"name": "product_category",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/product-category.d.ts",
																			"qualifiedName": "ProductCategory"
																		},
																		"name": "ProductCategory",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2230,
																		2229
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										2231,
										2234,
										2238,
										2242,
										2246,
										2184,
										2214
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										2184,
										2214
									]
								},
								{
									"title": "Mutations",
									"children": [
										2231,
										2234,
										2238,
										2242,
										2246
									]
								}
							]
						},
						{
							"id": 29,
							"name": "Product Tags",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Product Tag API Routes](https://docs.medusajs.com/api/admin#product-tags).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 852
									},
									{
										"kind": "text",
										"text": ".\n\nProduct tags are string values created when you create or update a product with a new tag.\nProducts can have more than one tag, and products can share tags. This allows admins to associate products to similar tags that can be used to filter products."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 2251,
									"name": "useAdminProductTags",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2252,
											"name": "useAdminProductTags",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of product tags. The product tags can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`q`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`value`"
													},
													{
														"kind": "text",
														"text": " passed \nin the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter. The product tags can also be sorted or paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list product tags:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminProductTags } from \"medusa-react\"\n\nfunction ProductTags() {\n  const { \n    product_tags,\n    isLoading \n  } = useAdminProductTags()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {product_tags && !product_tags.length && (\n        <span>No Product Tags</span>\n      )}\n      {product_tags && product_tags.length > 0 && (\n        <ul>\n          {product_tags.map(\n            (tag) => (\n              <li key={tag.id}>{tag.value}</li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default ProductTags\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`10`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminProductTags } from \"medusa-react\"\n\nfunction ProductTags() {\n  const { \n    product_tags,\n    limit,\n    offset,\n    isLoading \n  } = useAdminProductTags({\n    limit: 20,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {product_tags && !product_tags.length && (\n        <span>No Product Tags</span>\n      )}\n      {product_tags && product_tags.length > 0 && (\n        <ul>\n          {product_tags.map(\n            (tag) => (\n              <li key={tag.id}>{tag.value}</li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default ProductTags\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2253,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved product tags."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-tags/list-product-tags.d.ts",
															"qualifiedName": "AdminGetProductTagsParams"
														},
														"name": "AdminGetProductTagsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 2254,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-tags/index.d.ts",
																			"qualifiedName": "AdminProductTagsListRes"
																		},
																		"name": "AdminProductTagsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_product_tags"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 2255,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 2256,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						2256
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 2257,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2262,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2261,
																	"name": "product_tags",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-tag.d.ts",
																				"qualifiedName": "ProductTag"
																			},
																			"name": "ProductTag",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 2258,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2259,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2260,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2262,
																		2261,
																		2258,
																		2259,
																		2260
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2263,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2268,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2267,
																	"name": "product_tags",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-tag.d.ts",
																				"qualifiedName": "ProductTag"
																			},
																			"name": "ProductTag",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 2264,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2265,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2266,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2268,
																		2267,
																		2264,
																		2265,
																		2266
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2269,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2274,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2273,
																	"name": "product_tags",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-tag.d.ts",
																				"qualifiedName": "ProductTag"
																			},
																			"name": "ProductTag",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 2270,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2271,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2272,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2274,
																		2273,
																		2270,
																		2271,
																		2272
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2275,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2280,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2279,
																	"name": "product_tags",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-tag.d.ts",
																				"qualifiedName": "ProductTag"
																			},
																			"name": "ProductTag",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 2276,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2277,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2278,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2280,
																		2279,
																		2276,
																		2277,
																		2278
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										2251
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										2251
									]
								}
							]
						},
						{
							"id": 30,
							"name": "Product Types",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Product Type API Routes](https://docs.medusajs.com/api/admin#product-types).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 852
									},
									{
										"kind": "text",
										"text": ".\n\nProduct types are string values created when you create or update a product with a new type.\nProducts can have one type, and products can share types. This allows admins to associate products with a type that can be used to filter products."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 2282,
									"name": "useAdminProductTypes",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2283,
											"name": "useAdminProductTypes",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of product types. The product types can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`q`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`value`"
													},
													{
														"kind": "text",
														"text": " passed in the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter.\nThe product types can also be sorted or paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list product types:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminProductTypes } from \"medusa-react\"\n\nfunction ProductTypes() {\n  const { \n    product_types,\n    isLoading \n  } = useAdminProductTypes()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {product_types && !product_types.length && (\n        <span>No Product Tags</span>\n      )}\n      {product_types && product_types.length > 0 && (\n        <ul>\n          {product_types.map(\n            (type) => (\n              <li key={type.id}>{type.value}</li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default ProductTypes\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`20`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminProductTypes } from \"medusa-react\"\n\nfunction ProductTypes() {\n  const { \n    product_types,\n    limit,\n    offset,\n    isLoading \n  } = useAdminProductTypes({\n    limit: 10,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {product_types && !product_types.length && (\n        <span>No Product Tags</span>\n      )}\n      {product_types && product_types.length > 0 && (\n        <ul>\n          {product_types.map(\n            (type) => (\n              <li key={type.id}>{type.value}</li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default ProductTypes\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2284,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved product types."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-types/list-product-types.d.ts",
															"qualifiedName": "AdminGetProductTypesParams"
														},
														"name": "AdminGetProductTypesParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 2285,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-types/index.d.ts",
																			"qualifiedName": "AdminProductTypesListRes"
																		},
																		"name": "AdminProductTypesListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_product_types"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 2286,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 2287,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						2287
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 2288,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2293,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2292,
																	"name": "product_types",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-type.d.ts",
																				"qualifiedName": "ProductType"
																			},
																			"name": "ProductType",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 2289,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2290,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2291,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2293,
																		2292,
																		2289,
																		2290,
																		2291
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2294,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2299,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2298,
																	"name": "product_types",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-type.d.ts",
																				"qualifiedName": "ProductType"
																			},
																			"name": "ProductType",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 2295,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2296,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2297,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2299,
																		2298,
																		2295,
																		2296,
																		2297
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2300,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2305,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2304,
																	"name": "product_types",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-type.d.ts",
																				"qualifiedName": "ProductType"
																			},
																			"name": "ProductType",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 2301,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2302,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2303,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2305,
																		2304,
																		2301,
																		2302,
																		2303
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2306,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2311,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2310,
																	"name": "product_types",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-type.d.ts",
																				"qualifiedName": "ProductType"
																			},
																			"name": "ProductType",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 2307,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2308,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2309,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2311,
																		2310,
																		2307,
																		2308,
																		2309
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										2282
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										2282
									]
								}
							]
						},
						{
							"id": 31,
							"name": "Products",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Product API Routes](https://docs.medusajs.com/api/admin#products).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 852
									},
									{
										"kind": "text",
										"text": ".\n\nProducts are saleable items in a store. This also includes [saleable gift cards](https://docs.medusajs.com/modules/gift-cards/admin/manage-gift-cards#manage-gift-card-product) in a store.\n\nRelated Guide: [How to manage products](https://docs.medusajs.com/modules/products/admin/manage-products)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 2383,
									"name": "useAdminCreateProduct",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2384,
											"name": "useAdminCreateProduct",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a new Product. This hook can also be used to create a gift card if the "
													},
													{
														"kind": "code",
														"text": "`is_giftcard`"
													},
													{
														"kind": "text",
														"text": " field is set to "
													},
													{
														"kind": "code",
														"text": "`true`"
													},
													{
														"kind": "text",
														"text": "."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateProduct } from \"medusa-react\"\n\ntype CreateProductData = {\n  title: string\n  is_giftcard: boolean\n  discountable: boolean\n  options: {\n    title: string\n  }[]\n  variants: {\n    title: string\n    prices: {\n      amount: number\n      currency_code :string\n    }[]\n    options: {\n      value: string\n    }[]\n  }[],\n  collection_id: string\n  categories: {\n    id: string\n  }[]\n  type: {\n    value: string\n  }\n  tags: {\n    value: string\n  }[]\n}\n\nconst CreateProduct = () => {\n  const createProduct = useAdminCreateProduct()\n  // ...\n\n  const handleCreate = (productData: CreateProductData) => {\n    createProduct.mutate(productData, {\n      onSuccess: ({ product }) => {\n        console.log(product.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateProduct\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2385,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																			"qualifiedName": "AdminProductsRes"
																		},
																		"name": "AdminProductsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/create-product.d.ts",
																	"qualifiedName": "AdminPostProductsReq"
																},
																"name": "AdminPostProductsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																	"qualifiedName": "AdminProductsRes"
																},
																"name": "AdminProductsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/create-product.d.ts",
															"qualifiedName": "AdminPostProductsReq"
														},
														"name": "AdminPostProductsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 2386,
									"name": "useAdminUpdateProduct",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2387,
											"name": "useAdminUpdateProduct",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a Product's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateProduct } from \"medusa-react\"\n\ntype Props = {\n  productId: string\n}\n\nconst Product = ({ productId }: Props) => {\n  const updateProduct = useAdminUpdateProduct(\n    productId\n  )\n  // ...\n\n  const handleUpdate = (\n    title: string\n  ) => {\n    updateProduct.mutate({\n      title,\n    }, {\n      onSuccess: ({ product }) => {\n        console.log(product.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Product\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2388,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2389,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																			"qualifiedName": "AdminProductsRes"
																		},
																		"name": "AdminProductsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/update-product.d.ts",
																	"qualifiedName": "AdminPostProductsProductReq"
																},
																"name": "AdminPostProductsProductReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																	"qualifiedName": "AdminProductsRes"
																},
																"name": "AdminProductsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/update-product.d.ts",
															"qualifiedName": "AdminPostProductsProductReq"
														},
														"name": "AdminPostProductsProductReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 2390,
									"name": "useAdminDeleteProduct",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2391,
											"name": "useAdminDeleteProduct",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a product and its associated product variants and options."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteProduct } from \"medusa-react\"\n\ntype Props = {\n  productId: string\n}\n\nconst Product = ({ productId }: Props) => {\n  const deleteProduct = useAdminDeleteProduct(\n    productId\n  )\n  // ...\n\n  const handleDelete = () => {\n    deleteProduct.mutate(void 0, {\n      onSuccess: ({ id, object, deleted}) => {\n        console.log(id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Product\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2392,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2393,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																			"qualifiedName": "AdminProductsDeleteRes"
																		},
																		"name": "AdminProductsDeleteRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																	"qualifiedName": "AdminProductsDeleteRes"
																},
																"name": "AdminProductsDeleteRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 2394,
									"name": "useAdminCreateVariant",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2395,
											"name": "useAdminCreateVariant",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a product variant associated with a product. Each product variant must have a unique combination of product option values."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateVariant } from \"medusa-react\"\n\ntype CreateVariantData = {\n  title: string\n  prices: {\n    amount: number\n    currency_code: string\n  }[]\n  options: {\n    option_id: string\n    value: string\n  }[]\n}\n\ntype Props = {\n  productId: string\n}\n\nconst CreateProductVariant = ({ productId }: Props) => {\n  const createVariant = useAdminCreateVariant(\n    productId\n  )\n  // ...\n\n  const handleCreate = (\n    variantData: CreateVariantData\n  ) => {\n    createVariant.mutate(variantData, {\n      onSuccess: ({ product }) => {\n        console.log(product.variants)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateProductVariant\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2396,
													"name": "productId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2397,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																			"qualifiedName": "AdminProductsRes"
																		},
																		"name": "AdminProductsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/create-variant.d.ts",
																	"qualifiedName": "AdminPostProductsProductVariantsReq"
																},
																"name": "AdminPostProductsProductVariantsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																	"qualifiedName": "AdminProductsRes"
																},
																"name": "AdminProductsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/create-variant.d.ts",
															"qualifiedName": "AdminPostProductsProductVariantsReq"
														},
														"name": "AdminPostProductsProductVariantsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 2401,
									"name": "useAdminUpdateVariant",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2402,
											"name": "useAdminUpdateVariant",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a product variant's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateVariant } from \"medusa-react\"\n\ntype Props = {\n  productId: string\n  variantId: string\n}\n\nconst ProductVariant = ({\n  productId,\n  variantId\n}: Props) => {\n  const updateVariant = useAdminUpdateVariant(\n    productId\n  )\n  // ...\n\n  const handleUpdate = (title: string) => {\n    updateVariant.mutate({\n      variant_id: variantId,\n      title,\n    }, {\n      onSuccess: ({ product }) => {\n        console.log(product.variants)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default ProductVariant\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2403,
													"name": "productId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2404,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																			"qualifiedName": "AdminProductsRes"
																		},
																		"name": "AdminProductsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": 2398,
																"name": "AdminUpdateVariantReq",
																"package": "medusa-react"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																	"qualifiedName": "AdminProductsRes"
																},
																"name": "AdminProductsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": 2398,
														"name": "AdminUpdateVariantReq",
														"package": "medusa-react"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 2405,
									"name": "useAdminDeleteVariant",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2406,
											"name": "useAdminDeleteVariant",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a product variant."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "string - The ID of the product variant to delete."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteVariant } from \"medusa-react\"\n\ntype Props = {\n  productId: string\n  variantId: string\n}\n\nconst ProductVariant = ({\n  productId,\n  variantId\n}: Props) => {\n  const deleteVariant = useAdminDeleteVariant(\n    productId\n  )\n  // ...\n\n  const handleDelete = () => {\n    deleteVariant.mutate(variantId, {\n      onSuccess: ({ variant_id, object, deleted, product }) => {\n        console.log(product.variants)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default ProductVariant\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2407,
													"name": "productId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2408,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																			"qualifiedName": "AdminProductsDeleteVariantRes"
																		},
																		"name": "AdminProductsDeleteVariantRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																	"qualifiedName": "AdminProductsDeleteVariantRes"
																},
																"name": "AdminProductsDeleteVariantRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 2409,
									"name": "useAdminCreateProductOption",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2410,
											"name": "useAdminCreateProductOption",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook adds a product option to a product."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateProductOption } from \"medusa-react\"\n\ntype Props = {\n  productId: string\n}\n\nconst CreateProductOption = ({ productId }: Props) => {\n  const createOption = useAdminCreateProductOption(\n    productId\n  )\n  // ...\n\n  const handleCreate = (\n    title: string\n  ) => {\n    createOption.mutate({\n      title\n    }, {\n      onSuccess: ({ product }) => {\n        console.log(product.options)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateProductOption\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2411,
													"name": "productId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2412,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																			"qualifiedName": "AdminProductsRes"
																		},
																		"name": "AdminProductsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/add-option.d.ts",
																	"qualifiedName": "AdminPostProductsProductOptionsReq"
																},
																"name": "AdminPostProductsProductOptionsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																	"qualifiedName": "AdminProductsRes"
																},
																"name": "AdminProductsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/add-option.d.ts",
															"qualifiedName": "AdminPostProductsProductOptionsReq"
														},
														"name": "AdminPostProductsProductOptionsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 2416,
									"name": "useAdminUpdateProductOption",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2417,
											"name": "useAdminUpdateProductOption",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a product option's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateProductOption } from \"medusa-react\"\n\ntype Props = {\n  productId: string\n  optionId: string\n}\n\nconst ProductOption = ({\n  productId,\n  optionId\n}: Props) => {\n  const updateOption = useAdminUpdateProductOption(\n    productId\n  )\n  // ...\n\n  const handleUpdate = (\n    title: string\n  ) => {\n    updateOption.mutate({\n      option_id: optionId,\n      title,\n    }, {\n      onSuccess: ({ product }) => {\n        console.log(product.options)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default ProductOption\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2418,
													"name": "productId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2419,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																			"qualifiedName": "AdminProductsRes"
																		},
																		"name": "AdminProductsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": 2413,
																"name": "AdminUpdateProductOptionReq",
																"package": "medusa-react"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																	"qualifiedName": "AdminProductsRes"
																},
																"name": "AdminProductsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": 2413,
														"name": "AdminUpdateProductOptionReq",
														"package": "medusa-react"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 2420,
									"name": "useAdminDeleteProductOption",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2421,
											"name": "useAdminDeleteProductOption",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a product option. If there are product variants that use this product option, \nthey must be deleted before deleting the product option."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "string - The ID of the product option to delete."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteProductOption } from \"medusa-react\"\n\ntype Props = {\n  productId: string\n  optionId: string\n}\n\nconst ProductOption = ({\n  productId,\n  optionId\n}: Props) => {\n  const deleteOption = useAdminDeleteProductOption(\n    productId\n  )\n  // ...\n\n  const handleDelete = () => {\n    deleteOption.mutate(optionId, {\n      onSuccess: ({ option_id, object, deleted, product }) => {\n        console.log(product.options)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default ProductOption\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2422,
													"name": "productId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2423,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																			"qualifiedName": "AdminProductsDeleteOptionRes"
																		},
																		"name": "AdminProductsDeleteOptionRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																	"qualifiedName": "AdminProductsDeleteOptionRes"
																},
																"name": "AdminProductsDeleteOptionRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 2313,
									"name": "useAdminProducts",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2314,
											"name": "useAdminProducts",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of products. The products can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`q`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`status`"
													},
													{
														"kind": "text",
														"text": " passed in \nthe "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter. The products can also be sorted or paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list products:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminProducts } from \"medusa-react\"\n\nconst Products = () => {\n  const { products, isLoading } = useAdminProducts()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {products && !products.length && <span>No Products</span>}\n      {products && products.length > 0 && (\n        <ul>\n          {products.map((product) => (\n            <li key={product.id}>{product.title}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Products\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved within the products:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminProducts } from \"medusa-react\"\n\nconst Products = () => {\n  const { products, isLoading } = useAdminProducts({\n    expand: \"images\"\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {products && !products.length && <span>No Products</span>}\n      {products && products.length > 0 && (\n        <ul>\n          {products.map((product) => (\n            <li key={product.id}>{product.title}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Products\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`50`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminProducts } from \"medusa-react\"\n\nconst Products = () => {\n  const { \n    products, \n    limit,\n    offset,\n    isLoading\n  } = useAdminProducts({\n    expand: \"images\",\n    limit: 20,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {products && !products.length && <span>No Products</span>}\n      {products && products.length > 0 && (\n        <ul>\n          {products.map((product) => (\n            <li key={product.id}>{product.title}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Products\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2315,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved products."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/list-products.d.ts",
															"qualifiedName": "AdminGetProductsParams"
														},
														"name": "AdminGetProductsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 2316,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																			"qualifiedName": "AdminProductsListRes"
																		},
																		"name": "AdminProductsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_products"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 2317,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 2318,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						2318
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 2319,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2324,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2323,
																	"name": "products",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "union",
																			"types": [
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/medusa/dist/models/product.d.ts",
																						"qualifiedName": "Product"
																					},
																					"name": "Product",
																					"package": "@medusajs/medusa"
																				},
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																						"qualifiedName": "PricedProduct"
																					},
																					"name": "PricedProduct",
																					"package": "@medusajs/medusa"
																				}
																			]
																		}
																	}
																},
																{
																	"id": 2320,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2321,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2322,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2324,
																		2323,
																		2320,
																		2321,
																		2322
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2325,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2330,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2329,
																	"name": "products",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "union",
																			"types": [
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/medusa/dist/models/product.d.ts",
																						"qualifiedName": "Product"
																					},
																					"name": "Product",
																					"package": "@medusajs/medusa"
																				},
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																						"qualifiedName": "PricedProduct"
																					},
																					"name": "PricedProduct",
																					"package": "@medusajs/medusa"
																				}
																			]
																		}
																	}
																},
																{
																	"id": 2326,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2327,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2328,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2330,
																		2329,
																		2326,
																		2327,
																		2328
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2331,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2336,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2335,
																	"name": "products",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "union",
																			"types": [
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/medusa/dist/models/product.d.ts",
																						"qualifiedName": "Product"
																					},
																					"name": "Product",
																					"package": "@medusajs/medusa"
																				},
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																						"qualifiedName": "PricedProduct"
																					},
																					"name": "PricedProduct",
																					"package": "@medusajs/medusa"
																				}
																			]
																		}
																	}
																},
																{
																	"id": 2332,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2333,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2334,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2336,
																		2335,
																		2332,
																		2333,
																		2334
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2337,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2342,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2341,
																	"name": "products",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "union",
																			"types": [
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/medusa/dist/models/product.d.ts",
																						"qualifiedName": "Product"
																					},
																					"name": "Product",
																					"package": "@medusajs/medusa"
																				},
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																						"qualifiedName": "PricedProduct"
																					},
																					"name": "PricedProduct",
																					"package": "@medusajs/medusa"
																				}
																			]
																		}
																	}
																},
																{
																	"id": 2338,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2339,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2340,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2342,
																		2341,
																		2338,
																		2339,
																		2340
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 2343,
									"name": "useAdminProduct",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2344,
											"name": "useAdminProduct",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a product's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminProduct } from \"medusa-react\"\n\ntype Props = {\n  productId: string\n}\n\nconst Product = ({ productId }: Props) => {\n  const { \n    product, \n    isLoading, \n  } = useAdminProduct(productId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {product && <span>{product.title}</span>}\n      \n    </div>\n  )\n}\n\nexport default Product\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2345,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2346,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Configurations to apply on the retrieved product."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/get-product.d.ts",
															"qualifiedName": "AdminGetProductParams"
														},
														"name": "AdminGetProductParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 2347,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																			"qualifiedName": "AdminProductsRes"
																		},
																		"name": "AdminProductsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_products"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 2348,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2350,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2349,
																	"name": "product",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/product.d.ts",
																			"qualifiedName": "Product"
																		},
																		"name": "Product",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2350,
																		2349
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2351,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2353,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2352,
																	"name": "product",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/product.d.ts",
																			"qualifiedName": "Product"
																		},
																		"name": "Product",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2353,
																		2352
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2354,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2356,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2355,
																	"name": "product",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/product.d.ts",
																			"qualifiedName": "Product"
																		},
																		"name": "Product",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2356,
																		2355
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2357,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2359,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2358,
																	"name": "product",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/product.d.ts",
																			"qualifiedName": "Product"
																		},
																		"name": "Product",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2359,
																		2358
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 2360,
									"name": "useAdminProductTagUsage",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2361,
											"name": "useAdminProductTagUsage",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of Product Tags with how many times each is used in products."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminProductTagUsage } from \"medusa-react\"\n\nconst ProductTags = (productId: string) => {\n  const { tags, isLoading } = useAdminProductTagUsage()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {tags && !tags.length && <span>No Product Tags</span>}\n      {tags && tags.length > 0 && (\n        <ul>\n          {tags.map((tag) => (\n            <li key={tag.id}>{tag.value} - {tag.usage_count}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default ProductTags\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2362,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
																			"qualifiedName": "AdminProductsListTagsRes"
																		},
																		"name": "AdminProductsListTagsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_products"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 2363,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2367,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2364,
																	"name": "tags",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intersection",
																			"types": [
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																						"qualifiedName": "Pick"
																					},
																					"typeArguments": [
																						{
																							"type": "reference",
																							"target": {
																								"sourceFileName": "../../../packages/medusa/dist/models/product-tag.d.ts",
																								"qualifiedName": "ProductTag"
																							},
																							"name": "ProductTag",
																							"package": "@medusajs/medusa"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "value"
																								},
																								{
																									"type": "literal",
																									"value": "id"
																								}
																							]
																						}
																					],
																					"name": "Pick",
																					"package": "typescript"
																				},
																				{
																					"type": "reflection",
																					"declaration": {
																						"id": 2365,
																						"name": "__type",
																						"variant": "declaration",
																						"kind": 65536,
																						"flags": {},
																						"children": [
																							{
																								"id": 2366,
																								"name": "usage_count",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"type": {
																									"type": "intrinsic",
																									"name": "number"
																								}
																							}
																						],
																						"groups": [
																							{
																								"title": "Properties",
																								"children": [
																									2366
																								]
																							}
																						]
																					}
																				}
																			]
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2367,
																		2364
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2368,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2372,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2369,
																	"name": "tags",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intersection",
																			"types": [
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																						"qualifiedName": "Pick"
																					},
																					"typeArguments": [
																						{
																							"type": "reference",
																							"target": {
																								"sourceFileName": "../../../packages/medusa/dist/models/product-tag.d.ts",
																								"qualifiedName": "ProductTag"
																							},
																							"name": "ProductTag",
																							"package": "@medusajs/medusa"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "value"
																								},
																								{
																									"type": "literal",
																									"value": "id"
																								}
																							]
																						}
																					],
																					"name": "Pick",
																					"package": "typescript"
																				},
																				{
																					"type": "reflection",
																					"declaration": {
																						"id": 2370,
																						"name": "__type",
																						"variant": "declaration",
																						"kind": 65536,
																						"flags": {},
																						"children": [
																							{
																								"id": 2371,
																								"name": "usage_count",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"type": {
																									"type": "intrinsic",
																									"name": "number"
																								}
																							}
																						],
																						"groups": [
																							{
																								"title": "Properties",
																								"children": [
																									2371
																								]
																							}
																						]
																					}
																				}
																			]
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2372,
																		2369
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2373,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2377,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2374,
																	"name": "tags",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intersection",
																			"types": [
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																						"qualifiedName": "Pick"
																					},
																					"typeArguments": [
																						{
																							"type": "reference",
																							"target": {
																								"sourceFileName": "../../../packages/medusa/dist/models/product-tag.d.ts",
																								"qualifiedName": "ProductTag"
																							},
																							"name": "ProductTag",
																							"package": "@medusajs/medusa"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "value"
																								},
																								{
																									"type": "literal",
																									"value": "id"
																								}
																							]
																						}
																					],
																					"name": "Pick",
																					"package": "typescript"
																				},
																				{
																					"type": "reflection",
																					"declaration": {
																						"id": 2375,
																						"name": "__type",
																						"variant": "declaration",
																						"kind": 65536,
																						"flags": {},
																						"children": [
																							{
																								"id": 2376,
																								"name": "usage_count",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"type": {
																									"type": "intrinsic",
																									"name": "number"
																								}
																							}
																						],
																						"groups": [
																							{
																								"title": "Properties",
																								"children": [
																									2376
																								]
																							}
																						]
																					}
																				}
																			]
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2377,
																		2374
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2378,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2382,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2379,
																	"name": "tags",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intersection",
																			"types": [
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																						"qualifiedName": "Pick"
																					},
																					"typeArguments": [
																						{
																							"type": "reference",
																							"target": {
																								"sourceFileName": "../../../packages/medusa/dist/models/product-tag.d.ts",
																								"qualifiedName": "ProductTag"
																							},
																							"name": "ProductTag",
																							"package": "@medusajs/medusa"
																						},
																						{
																							"type": "union",
																							"types": [
																								{
																									"type": "literal",
																									"value": "value"
																								},
																								{
																									"type": "literal",
																									"value": "id"
																								}
																							]
																						}
																					],
																					"name": "Pick",
																					"package": "typescript"
																				},
																				{
																					"type": "reflection",
																					"declaration": {
																						"id": 2380,
																						"name": "__type",
																						"variant": "declaration",
																						"kind": 65536,
																						"flags": {},
																						"children": [
																							{
																								"id": 2381,
																								"name": "usage_count",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"type": {
																									"type": "intrinsic",
																									"name": "number"
																								}
																							}
																						],
																						"groups": [
																							{
																								"title": "Properties",
																								"children": [
																									2381
																								]
																							}
																						]
																					}
																				}
																			]
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2382,
																		2379
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										2383,
										2386,
										2390,
										2394,
										2401,
										2405,
										2409,
										2416,
										2420,
										2313,
										2343,
										2360
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										2313,
										2343,
										2360
									]
								},
								{
									"title": "Mutations",
									"children": [
										2383,
										2386,
										2390,
										2394,
										2401,
										2405,
										2409,
										2416,
										2420
									]
								}
							]
						},
						{
							"id": 32,
							"name": "Publishable API Keys",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Publishable API Key API Routes](https://docs.medusajs.com/api/admin#publishable-api-keys).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 852
									},
									{
										"kind": "text",
										"text": ".\n\nPublishable API Keys can be used to scope Store API calls with an API key, determining what resources are retrieved when querying the API.\nFor example, a publishable API key can be associated with one or more sales channels.\n\nWhen it is passed in the header of a request to the List Product store API Route,\nthe sales channels are inferred from the key and only products associated with those sales channels are retrieved.\n\nAdmins can manage publishable API keys and their associated resources. Currently, only Sales Channels are supported as a resource.\n\nRelated Guide: [How to manage publishable API keys](https://docs.medusajs.com/development/publishable-api-keys/admin/manage-publishable-api-keys)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 2510,
									"name": "useAdminCreatePublishableApiKey",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2511,
											"name": "useAdminCreatePublishableApiKey",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a publishable API key."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreatePublishableApiKey } from \"medusa-react\"\n\nconst CreatePublishableApiKey = () => {\n  const createKey = useAdminCreatePublishableApiKey()\n  // ...\n\n  const handleCreate = (title: string) => {\n    createKey.mutate({\n      title,\n    }, {\n      onSuccess: ({ publishable_api_key }) => {\n        console.log(publishable_api_key.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreatePublishableApiKey\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2512,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
																			"qualifiedName": "AdminPublishableApiKeysRes"
																		},
																		"name": "AdminPublishableApiKeysRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/create-publishable-api-key.d.ts",
																	"qualifiedName": "AdminPostPublishableApiKeysReq"
																},
																"name": "AdminPostPublishableApiKeysReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
																	"qualifiedName": "AdminPublishableApiKeysRes"
																},
																"name": "AdminPublishableApiKeysRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/create-publishable-api-key.d.ts",
															"qualifiedName": "AdminPostPublishableApiKeysReq"
														},
														"name": "AdminPostPublishableApiKeysReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 2513,
									"name": "useAdminUpdatePublishableApiKey",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2514,
											"name": "useAdminUpdatePublishableApiKey",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a publishable API key's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdatePublishableApiKey } from \"medusa-react\"\n\ntype Props = {\n  publishableApiKeyId: string\n}\n\nconst PublishableApiKey = ({\n  publishableApiKeyId\n}: Props) => {\n  const updateKey = useAdminUpdatePublishableApiKey(\n    publishableApiKeyId\n  )\n  // ...\n\n  const handleUpdate = (title: string) => {\n    updateKey.mutate({\n      title,\n    }, {\n      onSuccess: ({ publishable_api_key }) => {\n        console.log(publishable_api_key.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default PublishableApiKey\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2515,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The publishable API key's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2516,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
																			"qualifiedName": "AdminPublishableApiKeysRes"
																		},
																		"name": "AdminPublishableApiKeysRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/update-publishable-api-key.d.ts",
																	"qualifiedName": "AdminPostPublishableApiKeysPublishableApiKeyReq"
																},
																"name": "AdminPostPublishableApiKeysPublishableApiKeyReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
																	"qualifiedName": "AdminPublishableApiKeysRes"
																},
																"name": "AdminPublishableApiKeysRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/update-publishable-api-key.d.ts",
															"qualifiedName": "AdminPostPublishableApiKeysPublishableApiKeyReq"
														},
														"name": "AdminPostPublishableApiKeysPublishableApiKeyReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 2517,
									"name": "useAdminDeletePublishableApiKey",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2518,
											"name": "useAdminDeletePublishableApiKey",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a publishable API key. Associated resources, such as sales channels, are not deleted."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeletePublishableApiKey } from \"medusa-react\"\n\ntype Props = {\n  publishableApiKeyId: string\n}\n\nconst PublishableApiKey = ({\n  publishableApiKeyId\n}: Props) => {\n  const deleteKey = useAdminDeletePublishableApiKey(\n    publishableApiKeyId\n  )\n  // ...\n\n  const handleDelete = () => {\n    deleteKey.mutate(void 0, {\n      onSuccess: ({ id, object, deleted }) => {\n        console.log(id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default PublishableApiKey\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2519,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The publishable API key's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2520,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																			"qualifiedName": "DeleteResponse"
																		},
																		"name": "DeleteResponse",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 2521,
									"name": "useAdminRevokePublishableApiKey",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2522,
											"name": "useAdminRevokePublishableApiKey",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook revokes a publishable API key. Revoking the publishable API Key can't be undone, and the key can't be used in future requests."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminRevokePublishableApiKey } from \"medusa-react\"\n\ntype Props = {\n  publishableApiKeyId: string\n}\n\nconst PublishableApiKey = ({\n  publishableApiKeyId\n}: Props) => {\n  const revokeKey = useAdminRevokePublishableApiKey(\n    publishableApiKeyId\n  )\n  // ...\n\n  const handleRevoke = () => {\n    revokeKey.mutate(void 0, {\n      onSuccess: ({ publishable_api_key }) => {\n        console.log(publishable_api_key.revoked_at)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default PublishableApiKey\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2523,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The publishable API key's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2524,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
																			"qualifiedName": "AdminPublishableApiKeysRes"
																		},
																		"name": "AdminPublishableApiKeysRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
																	"qualifiedName": "AdminPublishableApiKeysRes"
																},
																"name": "AdminPublishableApiKeysRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 2525,
									"name": "useAdminAddPublishableKeySalesChannelsBatch",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2526,
											"name": "useAdminAddPublishableKeySalesChannelsBatch",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook adds a list of sales channels to a publishable API key."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport {\n  useAdminAddPublishableKeySalesChannelsBatch,\n} from \"medusa-react\"\n\ntype Props = {\n  publishableApiKeyId: string\n}\n\nconst PublishableApiKey = ({\n  publishableApiKeyId\n}: Props) => {\n  const addSalesChannels = \n    useAdminAddPublishableKeySalesChannelsBatch(\n      publishableApiKeyId\n    )\n  // ...\n\n  const handleAdd = (salesChannelId: string) => {\n    addSalesChannels.mutate({\n      sales_channel_ids: [\n        {\n          id: salesChannelId,\n        },\n      ],\n    }, {\n      onSuccess: ({ publishable_api_key }) => {\n        console.log(publishable_api_key.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default PublishableApiKey\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2527,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The publishable API key's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2528,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
																			"qualifiedName": "AdminPublishableApiKeysRes"
																		},
																		"name": "AdminPublishableApiKeysRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/add-channels-batch.d.ts",
																	"qualifiedName": "AdminPostPublishableApiKeySalesChannelsBatchReq"
																},
																"name": "AdminPostPublishableApiKeySalesChannelsBatchReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
																	"qualifiedName": "AdminPublishableApiKeysRes"
																},
																"name": "AdminPublishableApiKeysRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/add-channels-batch.d.ts",
															"qualifiedName": "AdminPostPublishableApiKeySalesChannelsBatchReq"
														},
														"name": "AdminPostPublishableApiKeySalesChannelsBatchReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 2529,
									"name": "useAdminRemovePublishableKeySalesChannelsBatch",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2530,
											"name": "useAdminRemovePublishableKeySalesChannelsBatch",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook removes a list of sales channels from a publishable API key. This doesn't delete the sales channels and only \nremoves the association between them and the publishable API key."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminRemovePublishableKeySalesChannelsBatch,\n} from \"medusa-react\"\n\ntype Props = {\n  publishableApiKeyId: string\n}\n\nconst PublishableApiKey = ({\n  publishableApiKeyId\n}: Props) => {\n  const deleteSalesChannels = \n    useAdminRemovePublishableKeySalesChannelsBatch(\n      publishableApiKeyId\n    )\n  // ...\n\n  const handleDelete = (salesChannelId: string) => {\n    deleteSalesChannels.mutate({\n      sales_channel_ids: [\n        {\n          id: salesChannelId,\n        },\n      ],\n    }, {\n      onSuccess: ({ publishable_api_key }) => {\n        console.log(publishable_api_key.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default PublishableApiKey\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2531,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The publishable API key's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2532,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
																			"qualifiedName": "AdminPublishableApiKeysRes"
																		},
																		"name": "AdminPublishableApiKeysRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/delete-channels-batch.d.ts",
																	"qualifiedName": "AdminDeletePublishableApiKeySalesChannelsBatchReq"
																},
																"name": "AdminDeletePublishableApiKeySalesChannelsBatchReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
																	"qualifiedName": "AdminPublishableApiKeysRes"
																},
																"name": "AdminPublishableApiKeysRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/delete-channels-batch.d.ts",
															"qualifiedName": "AdminDeletePublishableApiKeySalesChannelsBatchReq"
														},
														"name": "AdminDeletePublishableApiKeySalesChannelsBatchReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 2447,
									"name": "useAdminPublishableApiKey",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2448,
											"name": "useAdminPublishableApiKey",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a publishable API key's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminPublishableApiKey,\n} from \"medusa-react\"\n\ntype Props = {\n  publishableApiKeyId: string\n}\n\nconst PublishableApiKey = ({\n  publishableApiKeyId\n}: Props) => {\n  const { publishable_api_key, isLoading } = \n    useAdminPublishableApiKey(\n      publishableApiKeyId\n    )\n \n    \n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {publishable_api_key && <span>{publishable_api_key.title}</span>}\n    </div>\n  )\n}\n\nexport default PublishableApiKey\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2449,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The publishable API key's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2450,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
																			"qualifiedName": "AdminPublishableApiKeysRes"
																		},
																		"name": "AdminPublishableApiKeysRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_publishable_api_keys"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 2451,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2453,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2452,
																	"name": "publishable_api_key",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/publishable-api-key.d.ts",
																			"qualifiedName": "PublishableApiKey"
																		},
																		"name": "PublishableApiKey",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2453,
																		2452
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2454,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2456,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2455,
																	"name": "publishable_api_key",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/publishable-api-key.d.ts",
																			"qualifiedName": "PublishableApiKey"
																		},
																		"name": "PublishableApiKey",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2456,
																		2455
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2457,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2459,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2458,
																	"name": "publishable_api_key",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/publishable-api-key.d.ts",
																			"qualifiedName": "PublishableApiKey"
																		},
																		"name": "PublishableApiKey",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2459,
																		2458
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2460,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2462,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2461,
																	"name": "publishable_api_key",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/publishable-api-key.d.ts",
																			"qualifiedName": "PublishableApiKey"
																		},
																		"name": "PublishableApiKey",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2462,
																		2461
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 2463,
									"name": "useAdminPublishableApiKeys",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2464,
											"name": "useAdminPublishableApiKeys",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of publishable API keys. The publishable API keys can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`q`"
													},
													{
														"kind": "text",
														"text": " passed in "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": ". \nThe publishable API keys can also be paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list publishable API keys:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { PublishableApiKey } from \"@medusajs/medusa\"\nimport { useAdminPublishableApiKeys } from \"medusa-react\"\n\nconst PublishableApiKeys = () => {\n  const { publishable_api_keys, isLoading } = \n    useAdminPublishableApiKeys()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {publishable_api_keys && !publishable_api_keys.length && (\n        <span>No Publishable API Keys</span>\n      )}\n      {publishable_api_keys && \n        publishable_api_keys.length > 0 && (\n        <ul>\n          {publishable_api_keys.map(\n            (publishableApiKey: PublishableApiKey) => (\n              <li key={publishableApiKey.id}>\n                {publishableApiKey.title}\n              </li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default PublishableApiKeys\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`20`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { PublishableApiKey } from \"@medusajs/medusa\"\nimport { useAdminPublishableApiKeys } from \"medusa-react\"\n\nconst PublishableApiKeys = () => {\n  const { \n    publishable_api_keys, \n    limit,\n    offset,\n    isLoading\n  } = \n    useAdminPublishableApiKeys({\n      limit: 50,\n      offset: 0\n    })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {publishable_api_keys && !publishable_api_keys.length && (\n        <span>No Publishable API Keys</span>\n      )}\n      {publishable_api_keys && \n        publishable_api_keys.length > 0 && (\n        <ul>\n          {publishable_api_keys.map(\n            (publishableApiKey: PublishableApiKey) => (\n              <li key={publishableApiKey.id}>\n                {publishableApiKey.title}\n              </li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default PublishableApiKeys\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2465,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved publishable API keys."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/list-publishable-api-keys.d.ts",
															"qualifiedName": "GetPublishableApiKeysParams"
														},
														"name": "GetPublishableApiKeysParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 2466,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
																			"qualifiedName": "AdminPublishableApiKeysListRes"
																		},
																		"name": "AdminPublishableApiKeysListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_publishable_api_keys"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 2467,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 2468,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						2468
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 2469,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2474,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2473,
																	"name": "publishable_api_keys",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/publishable-api-key.d.ts",
																				"qualifiedName": "PublishableApiKey"
																			},
																			"name": "PublishableApiKey",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 2470,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2471,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2472,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2474,
																		2473,
																		2470,
																		2471,
																		2472
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2475,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2480,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2479,
																	"name": "publishable_api_keys",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/publishable-api-key.d.ts",
																				"qualifiedName": "PublishableApiKey"
																			},
																			"name": "PublishableApiKey",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 2476,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2477,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2478,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2480,
																		2479,
																		2476,
																		2477,
																		2478
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2481,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2486,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2485,
																	"name": "publishable_api_keys",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/publishable-api-key.d.ts",
																				"qualifiedName": "PublishableApiKey"
																			},
																			"name": "PublishableApiKey",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 2482,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2483,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2484,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2486,
																		2485,
																		2482,
																		2483,
																		2484
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2487,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2492,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2491,
																	"name": "publishable_api_keys",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/publishable-api-key.d.ts",
																				"qualifiedName": "PublishableApiKey"
																			},
																			"name": "PublishableApiKey",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 2488,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2489,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2490,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2492,
																		2491,
																		2488,
																		2489,
																		2490
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 2493,
									"name": "useAdminPublishableApiKeySalesChannels",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2494,
											"name": "useAdminPublishableApiKeySalesChannels",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook lists the sales channels associated with a publishable API key. The sales channels can be \nfiltered by fields such as "
													},
													{
														"kind": "code",
														"text": "`q`"
													},
													{
														"kind": "text",
														"text": " passed in the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminPublishableApiKeySalesChannels,\n} from \"medusa-react\"\n\ntype Props = {\n  publishableApiKeyId: string\n}\n\nconst SalesChannels = ({\n  publishableApiKeyId\n}: Props) => {\n  const { sales_channels, isLoading } = \n    useAdminPublishableApiKeySalesChannels(\n      publishableApiKeyId\n    )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {sales_channels && !sales_channels.length && (\n        <span>No Sales Channels</span>\n      )}\n      {sales_channels && sales_channels.length > 0 && (\n        <ul>\n          {sales_channels.map((salesChannel) => (\n            <li key={salesChannel.id}>{salesChannel.name}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default SalesChannels\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2495,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The publishable API Key's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2496,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters to apply on the retrieved sales channels."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/list-publishable-api-key-sales-channels.d.ts",
															"qualifiedName": "GetPublishableApiKeySalesChannelsParams"
														},
														"name": "GetPublishableApiKeySalesChannelsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 2497,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
																			"qualifiedName": "AdminPublishableApiKeysListSalesChannelsRes"
																		},
																		"name": "AdminPublishableApiKeysListSalesChannelsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "typeOperator",
																"operator": "readonly",
																"target": {
																	"type": "tuple",
																	"elements": [
																		{
																			"type": "literal",
																			"value": "admin_publishable_api_keys"
																		},
																		{
																			"type": "literal",
																			"value": "detail"
																		},
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "literal",
																			"value": "sales_channels"
																		},
																		{
																			"type": "intrinsic",
																			"name": "any"
																		}
																	]
																}
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 2498,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2500,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2499,
																	"name": "sales_channels",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/sales-channel.d.ts",
																				"qualifiedName": "SalesChannel"
																			},
																			"name": "SalesChannel",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2500,
																		2499
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2501,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2503,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2502,
																	"name": "sales_channels",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/sales-channel.d.ts",
																				"qualifiedName": "SalesChannel"
																			},
																			"name": "SalesChannel",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2503,
																		2502
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2504,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2506,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2505,
																	"name": "sales_channels",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/sales-channel.d.ts",
																				"qualifiedName": "SalesChannel"
																			},
																			"name": "SalesChannel",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2506,
																		2505
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2507,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2509,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2508,
																	"name": "sales_channels",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/sales-channel.d.ts",
																				"qualifiedName": "SalesChannel"
																			},
																			"name": "SalesChannel",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2509,
																		2508
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										2510,
										2513,
										2517,
										2521,
										2525,
										2529,
										2447,
										2463,
										2493
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										2447,
										2463,
										2493
									]
								},
								{
									"title": "Mutations",
									"children": [
										2510,
										2513,
										2517,
										2521,
										2525,
										2529
									]
								}
							]
						},
						{
							"id": 33,
							"name": "Regions",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Region API Routes](https://docs.medusajs.com/api/admin#regions).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 852
									},
									{
										"kind": "text",
										"text": ".\n\nRegions are different countries or geographical regions that the commerce store serves customers in.\nAdmins can manage these regions, their providers, and more.\n\nRelated Guide: [How to manage regions](https://docs.medusajs.com/modules/regions-and-currencies/admin/manage-regions)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 2596,
									"name": "useAdminCreateRegion",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2597,
											"name": "useAdminCreateRegion",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a region."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateRegion } from \"medusa-react\"\n\ntype CreateData = {\n  name: string\n  currency_code: string\n  tax_rate: number\n  payment_providers: string[]\n  fulfillment_providers: string[]\n  countries: string[]\n}\n\nconst CreateRegion = () => {\n  const createRegion = useAdminCreateRegion()\n  // ...\n\n  const handleCreate = (regionData: CreateData) => {\n    createRegion.mutate(regionData, {\n      onSuccess: ({ region }) => {\n        console.log(region.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateRegion\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2598,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																			"qualifiedName": "AdminRegionsRes"
																		},
																		"name": "AdminRegionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/create-region.d.ts",
																	"qualifiedName": "AdminPostRegionsReq"
																},
																"name": "AdminPostRegionsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																	"qualifiedName": "AdminRegionsRes"
																},
																"name": "AdminRegionsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/create-region.d.ts",
															"qualifiedName": "AdminPostRegionsReq"
														},
														"name": "AdminPostRegionsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 2599,
									"name": "useAdminUpdateRegion",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2600,
											"name": "useAdminUpdateRegion",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a region's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateRegion } from \"medusa-react\"\n\ntype Props = {\n  regionId: string\n}\n\nconst Region = ({\n  regionId\n}: Props) => {\n  const updateRegion = useAdminUpdateRegion(regionId)\n  // ...\n\n  const handleUpdate = (\n    countries: string[]\n  ) => {\n    updateRegion.mutate({\n      countries,\n    }, {\n      onSuccess: ({ region }) => {\n        console.log(region.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Region\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2601,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The region's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2602,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																			"qualifiedName": "AdminRegionsRes"
																		},
																		"name": "AdminRegionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/update-region.d.ts",
																	"qualifiedName": "AdminPostRegionsRegionReq"
																},
																"name": "AdminPostRegionsRegionReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																	"qualifiedName": "AdminRegionsRes"
																},
																"name": "AdminRegionsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/update-region.d.ts",
															"qualifiedName": "AdminPostRegionsRegionReq"
														},
														"name": "AdminPostRegionsRegionReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 2603,
									"name": "useAdminDeleteRegion",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2604,
											"name": "useAdminDeleteRegion",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a region. Associated resources, such as providers or currencies are not deleted. Associated tax rates are deleted."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteRegion } from \"medusa-react\"\n\ntype Props = {\n  regionId: string\n}\n\nconst Region = ({\n  regionId\n}: Props) => {\n  const deleteRegion = useAdminDeleteRegion(regionId)\n  // ...\n\n  const handleDelete = () => {\n    deleteRegion.mutate(void 0, {\n      onSuccess: ({ id, object, deleted }) => {\n        console.log(id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Region\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2605,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The region's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2606,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																			"qualifiedName": "DeleteResponse"
																		},
																		"name": "DeleteResponse",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 2607,
									"name": "useAdminRegionAddCountry",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2608,
											"name": "useAdminRegionAddCountry",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook adds a country to the list of countries in a region."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminRegionAddCountry } from \"medusa-react\"\n\ntype Props = {\n  regionId: string\n}\n\nconst Region = ({\n  regionId\n}: Props) => {\n  const addCountry = useAdminRegionAddCountry(regionId)\n  // ...\n\n  const handleAddCountry = (\n    countryCode: string\n  ) => {\n    addCountry.mutate({\n      country_code: countryCode\n    }, {\n      onSuccess: ({ region }) => {\n        console.log(region.countries)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Region\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2609,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The region's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2610,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																			"qualifiedName": "AdminRegionsRes"
																		},
																		"name": "AdminRegionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/add-country.d.ts",
																	"qualifiedName": "AdminPostRegionsRegionCountriesReq"
																},
																"name": "AdminPostRegionsRegionCountriesReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																	"qualifiedName": "AdminRegionsRes"
																},
																"name": "AdminRegionsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/add-country.d.ts",
															"qualifiedName": "AdminPostRegionsRegionCountriesReq"
														},
														"name": "AdminPostRegionsRegionCountriesReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 2611,
									"name": "useAdminRegionRemoveCountry",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2612,
											"name": "useAdminRegionRemoveCountry",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a country from the list of countries in a region. The country will still be available in the system, and it can be used in other regions."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "string - The code of the country to delete from the region."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminRegionRemoveCountry } from \"medusa-react\"\n\ntype Props = {\n  regionId: string\n}\n\nconst Region = ({\n  regionId\n}: Props) => {\n  const removeCountry = useAdminRegionRemoveCountry(regionId)\n  // ...\n\n  const handleRemoveCountry = (\n    countryCode: string\n  ) => {\n    removeCountry.mutate(countryCode, {\n      onSuccess: ({ region }) => {\n        console.log(region.countries)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Region\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2613,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The region's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2614,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																			"qualifiedName": "AdminRegionsRes"
																		},
																		"name": "AdminRegionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																	"qualifiedName": "AdminRegionsRes"
																},
																"name": "AdminRegionsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 2615,
									"name": "useAdminRegionAddFulfillmentProvider",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2616,
											"name": "useAdminRegionAddFulfillmentProvider",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook adds a fulfillment provider to the list of fulfullment providers in a region."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminRegionAddFulfillmentProvider\n} from \"medusa-react\"\n\ntype Props = {\n  regionId: string\n}\n\nconst Region = ({\n  regionId\n}: Props) => {\n  const addFulfillmentProvider = \n    useAdminRegionAddFulfillmentProvider(regionId)\n  // ...\n\n  const handleAddFulfillmentProvider = (\n    providerId: string\n  ) => {\n    addFulfillmentProvider.mutate({\n      provider_id: providerId\n    }, {\n      onSuccess: ({ region }) => {\n        console.log(region.fulfillment_providers)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Region\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2617,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The region's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2618,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																			"qualifiedName": "AdminRegionsRes"
																		},
																		"name": "AdminRegionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/add-fulfillment-provider.d.ts",
																	"qualifiedName": "AdminPostRegionsRegionFulfillmentProvidersReq"
																},
																"name": "AdminPostRegionsRegionFulfillmentProvidersReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																	"qualifiedName": "AdminRegionsRes"
																},
																"name": "AdminRegionsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/add-fulfillment-provider.d.ts",
															"qualifiedName": "AdminPostRegionsRegionFulfillmentProvidersReq"
														},
														"name": "AdminPostRegionsRegionFulfillmentProvidersReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 2619,
									"name": "useAdminRegionDeleteFulfillmentProvider",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2620,
											"name": "useAdminRegionDeleteFulfillmentProvider",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a fulfillment provider from a region. The fulfillment provider will still be available for usage in other regions."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "string - The fulfillment provider's ID to delete from the region."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminRegionDeleteFulfillmentProvider\n} from \"medusa-react\"\n\ntype Props = {\n  regionId: string\n}\n\nconst Region = ({\n  regionId\n}: Props) => {\n  const removeFulfillmentProvider = \n    useAdminRegionDeleteFulfillmentProvider(regionId)\n  // ...\n\n  const handleRemoveFulfillmentProvider = (\n    providerId: string\n  ) => {\n    removeFulfillmentProvider.mutate(providerId, {\n      onSuccess: ({ region }) => {\n        console.log(region.fulfillment_providers)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Region\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2621,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The region's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2622,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																			"qualifiedName": "AdminRegionsRes"
																		},
																		"name": "AdminRegionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																	"qualifiedName": "AdminRegionsRes"
																},
																"name": "AdminRegionsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 2623,
									"name": "useAdminRegionAddPaymentProvider",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2624,
											"name": "useAdminRegionAddPaymentProvider",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook adds a payment provider to the list of payment providers in a region."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminRegionAddPaymentProvider\n} from \"medusa-react\"\n\ntype Props = {\n  regionId: string\n}\n\nconst Region = ({\n  regionId\n}: Props) => {\n  const addPaymentProvider = \n    useAdminRegionAddPaymentProvider(regionId)\n  // ...\n\n  const handleAddPaymentProvider = (\n    providerId: string\n  ) => {\n    addPaymentProvider.mutate({\n      provider_id: providerId\n    }, {\n      onSuccess: ({ region }) => {\n        console.log(region.payment_providers)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Region\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2625,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The region's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2626,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																			"qualifiedName": "AdminRegionsRes"
																		},
																		"name": "AdminRegionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/add-payment-provider.d.ts",
																	"qualifiedName": "AdminPostRegionsRegionPaymentProvidersReq"
																},
																"name": "AdminPostRegionsRegionPaymentProvidersReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																	"qualifiedName": "AdminRegionsRes"
																},
																"name": "AdminRegionsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/add-payment-provider.d.ts",
															"qualifiedName": "AdminPostRegionsRegionPaymentProvidersReq"
														},
														"name": "AdminPostRegionsRegionPaymentProvidersReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 2627,
									"name": "useAdminRegionDeletePaymentProvider",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2628,
											"name": "useAdminRegionDeletePaymentProvider",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a payment provider from a region. The payment provider will still be available for usage in other regions."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "string - The ID of the payment provider to delete from the region."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminRegionDeletePaymentProvider\n} from \"medusa-react\"\n\ntype Props = {\n  regionId: string\n}\n\nconst Region = ({\n  regionId\n}: Props) => {\n  const removePaymentProvider = \n    useAdminRegionDeletePaymentProvider(regionId)\n  // ...\n\n  const handleRemovePaymentProvider = (\n    providerId: string\n  ) => {\n    removePaymentProvider.mutate(providerId, {\n      onSuccess: ({ region }) => {\n        console.log(region.payment_providers)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Region\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2629,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The region's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2630,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																			"qualifiedName": "AdminRegionsRes"
																		},
																		"name": "AdminRegionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																	"qualifiedName": "AdminRegionsRes"
																},
																"name": "AdminRegionsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 2534,
									"name": "useAdminRegions",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2535,
											"name": "useAdminRegions",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of Regions. The regions can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`created_at`"
													},
													{
														"kind": "text",
														"text": " passed in the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter. \nThe regions can also be paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list regions:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminRegions } from \"medusa-react\"\n\nconst Regions = () => {\n  const { regions, isLoading } = useAdminRegions()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {regions && !regions.length && <span>No Regions</span>}\n      {regions && regions.length > 0 && (\n        <ul>\n          {regions.map((region) => (\n            <li key={region.id}>{region.name}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Regions\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`50`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminRegions } from \"medusa-react\"\n\nconst Regions = () => {\n  const { \n    regions, \n    limit,\n    offset,\n    isLoading\n  } = useAdminRegions({\n    limit: 20,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {regions && !regions.length && <span>No Regions</span>}\n      {regions && regions.length > 0 && (\n        <ul>\n          {regions.map((region) => (\n            <li key={region.id}>{region.name}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Regions\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2536,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved regions."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/list-regions.d.ts",
															"qualifiedName": "AdminGetRegionsParams"
														},
														"name": "AdminGetRegionsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 2537,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																			"qualifiedName": "AdminRegionsListRes"
																		},
																		"name": "AdminRegionsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_regions"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 2538,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 2539,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						2539
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 2540,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2545,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2544,
																	"name": "regions",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/region.d.ts",
																				"qualifiedName": "Region"
																			},
																			"name": "Region",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 2541,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2542,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2543,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2545,
																		2544,
																		2541,
																		2542,
																		2543
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2546,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2551,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2550,
																	"name": "regions",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/region.d.ts",
																				"qualifiedName": "Region"
																			},
																			"name": "Region",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 2547,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2548,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2549,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2551,
																		2550,
																		2547,
																		2548,
																		2549
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2552,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2557,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2556,
																	"name": "regions",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/region.d.ts",
																				"qualifiedName": "Region"
																			},
																			"name": "Region",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 2553,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2554,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2555,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2557,
																		2556,
																		2553,
																		2554,
																		2555
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2558,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2563,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2562,
																	"name": "regions",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/region.d.ts",
																				"qualifiedName": "Region"
																			},
																			"name": "Region",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 2559,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2560,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2561,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2563,
																		2562,
																		2559,
																		2560,
																		2561
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 2564,
									"name": "useAdminRegion",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2565,
											"name": "useAdminRegion",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a region's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminRegion } from \"medusa-react\"\n\ntype Props = {\n  regionId: string\n}\n\nconst Region = ({\n  regionId\n}: Props) => {\n  const { region, isLoading } = useAdminRegion(\n    regionId\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {region && <span>{region.name}</span>}\n    </div>\n  )\n}\n\nexport default Region\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2566,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The region's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2567,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																			"qualifiedName": "AdminRegionsRes"
																		},
																		"name": "AdminRegionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_regions"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 2568,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2570,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2569,
																	"name": "region",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/region.d.ts",
																			"qualifiedName": "Region"
																		},
																		"name": "Region",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2570,
																		2569
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2571,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2573,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2572,
																	"name": "region",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/region.d.ts",
																			"qualifiedName": "Region"
																		},
																		"name": "Region",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2573,
																		2572
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2574,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2576,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2575,
																	"name": "region",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/region.d.ts",
																			"qualifiedName": "Region"
																		},
																		"name": "Region",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2576,
																		2575
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2577,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2579,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2578,
																	"name": "region",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/region.d.ts",
																			"qualifiedName": "Region"
																		},
																		"name": "Region",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2579,
																		2578
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 2580,
									"name": "useAdminRegionFulfillmentOptions",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2581,
											"name": "useAdminRegionFulfillmentOptions",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of fulfillment options available in a region."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminRegionFulfillmentOptions\n} from \"medusa-react\"\n\ntype Props = {\n  regionId: string\n}\n\nconst Region = ({\n  regionId\n}: Props) => {\n  const { \n    fulfillment_options, \n    isLoading\n  } = useAdminRegionFulfillmentOptions(\n    regionId\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {fulfillment_options && !fulfillment_options.length && (\n        <span>No Regions</span>\n      )}\n      {fulfillment_options && \n        fulfillment_options.length > 0 && (\n        <ul>\n          {fulfillment_options.map((option) => (\n            <li key={option.provider_id}>\n              {option.provider_id}\n            </li>\n          ))}\n        </ul>\n          )}\n    </div>\n  )\n}\n\nexport default Region\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2582,
													"name": "regionId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The region's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2583,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																			"qualifiedName": "AdminGetRegionsRegionFulfillmentOptionsRes"
																		},
																		"name": "AdminGetRegionsRegionFulfillmentOptionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_regions"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 2584,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2586,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2585,
																	"name": "fulfillment_options",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																				"qualifiedName": "FulfillmentOption"
																			},
																			"name": "FulfillmentOption",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2586,
																		2585
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2587,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2589,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2588,
																	"name": "fulfillment_options",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																				"qualifiedName": "FulfillmentOption"
																			},
																			"name": "FulfillmentOption",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2589,
																		2588
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2590,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2592,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2591,
																	"name": "fulfillment_options",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																				"qualifiedName": "FulfillmentOption"
																			},
																			"name": "FulfillmentOption",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2592,
																		2591
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2593,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2595,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2594,
																	"name": "fulfillment_options",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
																				"qualifiedName": "FulfillmentOption"
																			},
																			"name": "FulfillmentOption",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2595,
																		2594
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										2596,
										2599,
										2603,
										2607,
										2611,
										2615,
										2619,
										2623,
										2627,
										2534,
										2564,
										2580
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										2534,
										2564,
										2580
									]
								},
								{
									"title": "Mutations",
									"children": [
										2596,
										2599,
										2603,
										2607,
										2611,
										2615,
										2619,
										2623,
										2627
									]
								}
							]
						},
						{
							"id": 34,
							"name": "Reservations",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Reservation API Routes](https://docs.medusajs.com/api/admin#reservations).\nTo use these hooks, make sure to install the\n[@medusajs/inventory](https://docs.medusajs.com/modules/multiwarehouse/install-modules#inventory-module) module in your Medusa backend.\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 852
									},
									{
										"kind": "text",
										"text": ".\n\nReservations, provided by the [Inventory Module](https://docs.medusajs.com/modules/multiwarehouse/inventory-module), \nare quantities of an item that are reserved, typically when an order is placed but not yet fulfilled.\nReservations can be associated with any resources, but commonly with line items of an order.\n\nRelated Guide: [How to manage item allocations in orders](https://docs.medusajs.com/modules/multiwarehouse/admin/manage-item-allocations-in-orders)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 2631,
									"name": "useAdminCreateReservation",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2632,
											"name": "useAdminCreateReservation",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a reservation which can be associated with any resource, such as an order's line item."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateReservation } from \"medusa-react\"\n\nconst CreateReservation = () => {\n  const createReservation = useAdminCreateReservation()\n  // ...\n\n  const handleCreate = (\n    locationId: string,\n    inventoryItemId: string,\n    quantity: number\n  ) => {\n    createReservation.mutate({\n      location_id: locationId,\n      inventory_item_id: inventoryItemId,\n      quantity,\n    }, {\n      onSuccess: ({ reservation }) => {\n        console.log(reservation.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateReservation\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2633,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/reservations/index.d.ts",
																			"qualifiedName": "AdminReservationsRes"
																		},
																		"name": "AdminReservationsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/reservations/create-reservation.d.ts",
																	"qualifiedName": "AdminPostReservationsReq"
																},
																"name": "AdminPostReservationsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/reservations/index.d.ts",
																	"qualifiedName": "AdminReservationsRes"
																},
																"name": "AdminReservationsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/reservations/create-reservation.d.ts",
															"qualifiedName": "AdminPostReservationsReq"
														},
														"name": "AdminPostReservationsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 2634,
									"name": "useAdminUpdateReservation",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2635,
											"name": "useAdminUpdateReservation",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a reservation's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateReservation } from \"medusa-react\"\n\ntype Props = {\n  reservationId: string\n}\n\nconst Reservation = ({ reservationId }: Props) => {\n  const updateReservation = useAdminUpdateReservation(\n    reservationId\n  )\n  // ...\n\n  const handleUpdate = (\n    quantity: number\n  ) => {\n    updateReservation.mutate({\n      quantity,\n    })\n  }\n\n  // ...\n}\n\nexport default Reservation\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2636,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The reservation's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2637,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/reservations/index.d.ts",
																			"qualifiedName": "AdminReservationsRes"
																		},
																		"name": "AdminReservationsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/reservations/update-reservation.d.ts",
																	"qualifiedName": "AdminPostReservationsReservationReq"
																},
																"name": "AdminPostReservationsReservationReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/reservations/index.d.ts",
																	"qualifiedName": "AdminReservationsRes"
																},
																"name": "AdminReservationsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/reservations/update-reservation.d.ts",
															"qualifiedName": "AdminPostReservationsReservationReq"
														},
														"name": "AdminPostReservationsReservationReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 2638,
									"name": "useAdminDeleteReservation",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2639,
											"name": "useAdminDeleteReservation",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a reservation. Associated resources, such as the line item, will not be deleted."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteReservation } from \"medusa-react\"\n\ntype Props = {\n  reservationId: string\n}\n\nconst Reservation = ({ reservationId }: Props) => {\n  const deleteReservation = useAdminDeleteReservation(\n    reservationId\n  )\n  // ...\n\n  const handleDelete = () => {\n    deleteReservation.mutate(void 0, {\n      onSuccess: ({ id, object, deleted }) => {\n        console.log(id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Reservation\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2640,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The reservation's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2641,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																			"qualifiedName": "DeleteResponse"
																		},
																		"name": "DeleteResponse",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 2643,
									"name": "useAdminReservations",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2644,
											"name": "useAdminReservations",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of reservations. The reservations can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`location_id`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`quantity`"
													},
													{
														"kind": "text",
														"text": " \npassed in the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter. The reservations can also be paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list reservations:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminReservations } from \"medusa-react\"\n\nconst Reservations = () => {\n  const { reservations, isLoading } = useAdminReservations()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {reservations && !reservations.length && (\n        <span>No Reservations</span>\n      )}\n      {reservations && reservations.length > 0 && (\n        <ul>\n          {reservations.map((reservation) => (\n            <li key={reservation.id}>{reservation.quantity}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Reservations\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved within the reservations:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminReservations } from \"medusa-react\"\n\nconst Reservations = () => {\n  const { \n    reservations, \n    isLoading\n  } = useAdminReservations({\n    expand: \"location\"\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {reservations && !reservations.length && (\n        <span>No Reservations</span>\n      )}\n      {reservations && reservations.length > 0 && (\n        <ul>\n          {reservations.map((reservation) => (\n            <li key={reservation.id}>{reservation.quantity}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Reservations\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`20`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminReservations } from \"medusa-react\"\n\nconst Reservations = () => {\n  const { \n    reservations,\n    limit,\n    offset, \n    isLoading\n  } = useAdminReservations({\n    expand: \"location\",\n    limit: 10,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {reservations && !reservations.length && (\n        <span>No Reservations</span>\n      )}\n      {reservations && reservations.length > 0 && (\n        <ul>\n          {reservations.map((reservation) => (\n            <li key={reservation.id}>{reservation.quantity}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Reservations\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2645,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination parameters to apply on the retrieved reservations."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/reservations/list-reservations.d.ts",
															"qualifiedName": "AdminGetReservationsParams"
														},
														"name": "AdminGetReservationsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 2646,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/reservations/index.d.ts",
																			"qualifiedName": "AdminReservationsListRes"
																		},
																		"name": "AdminReservationsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_reservations"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 2647,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 2648,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						2648
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 2649,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2654,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2653,
																	"name": "reservations",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/types/src/inventory/common.ts",
																				"qualifiedName": "ReservationItemDTO"
																			},
																			"name": "ReservationItemDTO",
																			"package": "@medusajs/types"
																		}
																	}
																},
																{
																	"id": 2650,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2651,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2652,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2654,
																		2653,
																		2650,
																		2651,
																		2652
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2655,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2660,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2659,
																	"name": "reservations",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/types/src/inventory/common.ts",
																				"qualifiedName": "ReservationItemDTO"
																			},
																			"name": "ReservationItemDTO",
																			"package": "@medusajs/types"
																		}
																	}
																},
																{
																	"id": 2656,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2657,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2658,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2660,
																		2659,
																		2656,
																		2657,
																		2658
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2661,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2666,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2665,
																	"name": "reservations",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/types/src/inventory/common.ts",
																				"qualifiedName": "ReservationItemDTO"
																			},
																			"name": "ReservationItemDTO",
																			"package": "@medusajs/types"
																		}
																	}
																},
																{
																	"id": 2662,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2663,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2664,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2666,
																		2665,
																		2662,
																		2663,
																		2664
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2667,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2672,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2671,
																	"name": "reservations",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/types/src/inventory/common.ts",
																				"qualifiedName": "ReservationItemDTO"
																			},
																			"name": "ReservationItemDTO",
																			"package": "@medusajs/types"
																		}
																	}
																},
																{
																	"id": 2668,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2669,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2670,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2672,
																		2671,
																		2668,
																		2669,
																		2670
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 2673,
									"name": "useAdminReservation",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2674,
											"name": "useAdminReservation",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a reservation's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminReservation } from \"medusa-react\"\n\ntype Props = {\n  reservationId: string\n}\n\nconst Reservation = ({ reservationId }: Props) => {\n  const { reservation, isLoading } = useAdminReservation(\n    reservationId\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {reservation && (\n        <span>{reservation.inventory_item_id}</span>\n      )}\n    </div>\n  )\n}\n\nexport default Reservation\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2675,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The reservation's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2676,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/reservations/index.d.ts",
																			"qualifiedName": "AdminReservationsRes"
																		},
																		"name": "AdminReservationsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_reservations"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 2677,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2679,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2678,
																	"name": "reservation",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
																			"qualifiedName": "ReservationItemDTO"
																		},
																		"name": "ReservationItemDTO",
																		"package": "@medusajs/types"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2679,
																		2678
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2680,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2682,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2681,
																	"name": "reservation",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
																			"qualifiedName": "ReservationItemDTO"
																		},
																		"name": "ReservationItemDTO",
																		"package": "@medusajs/types"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2682,
																		2681
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2683,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2685,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2684,
																	"name": "reservation",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
																			"qualifiedName": "ReservationItemDTO"
																		},
																		"name": "ReservationItemDTO",
																		"package": "@medusajs/types"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2685,
																		2684
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2686,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2688,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2687,
																	"name": "reservation",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
																			"qualifiedName": "ReservationItemDTO"
																		},
																		"name": "ReservationItemDTO",
																		"package": "@medusajs/types"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2688,
																		2687
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										2631,
										2634,
										2638,
										2643,
										2673
									]
								}
							],
							"categories": [
								{
									"title": "Mutations",
									"children": [
										2631,
										2634,
										2638
									]
								},
								{
									"title": "Queries",
									"children": [
										2643,
										2673
									]
								}
							]
						},
						{
							"id": 35,
							"name": "Return Reasons",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Return Reason API Routes](https://docs.medusajs.com/api/admin#return-reasons).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 852
									},
									{
										"kind": "text",
										"text": ".\n\nReturn reasons are key-value pairs that are used to specify why an order return is being created.\nAdmins can manage available return reasons, and they can be used by both admins and customers when creating a return.\n\nRelated Guide: [How to manage return reasons](https://docs.medusajs.com/modules/orders/admin/manage-returns#manage-return-reasons)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 2721,
									"name": "useAdminCreateReturnReason",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2722,
											"name": "useAdminCreateReturnReason",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a return reason."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateReturnReason } from \"medusa-react\"\n\nconst CreateReturnReason = () => {\n  const createReturnReason = useAdminCreateReturnReason()\n  // ...\n\n  const handleCreate = (\n    label: string,\n    value: string\n  ) => {\n    createReturnReason.mutate({\n      label,\n      value,\n    }, {\n      onSuccess: ({ return_reason }) => {\n        console.log(return_reason.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateReturnReason\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2723,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/return-reasons/index.d.ts",
																			"qualifiedName": "AdminReturnReasonsRes"
																		},
																		"name": "AdminReturnReasonsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/return-reasons/create-reason.d.ts",
																	"qualifiedName": "AdminPostReturnReasonsReq"
																},
																"name": "AdminPostReturnReasonsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/return-reasons/index.d.ts",
																	"qualifiedName": "AdminReturnReasonsRes"
																},
																"name": "AdminReturnReasonsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/return-reasons/create-reason.d.ts",
															"qualifiedName": "AdminPostReturnReasonsReq"
														},
														"name": "AdminPostReturnReasonsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 2724,
									"name": "useAdminUpdateReturnReason",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2725,
											"name": "useAdminUpdateReturnReason",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a return reason's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateReturnReason } from \"medusa-react\"\n\ntype Props = {\n  returnReasonId: string\n}\n\nconst ReturnReason = ({ returnReasonId }: Props) => {\n  const updateReturnReason = useAdminUpdateReturnReason(\n    returnReasonId\n  )\n  // ...\n\n  const handleUpdate = (\n    label: string\n  ) => {\n    updateReturnReason.mutate({\n      label,\n    }, {\n      onSuccess: ({ return_reason }) => {\n        console.log(return_reason.label)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default ReturnReason\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2726,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The return reason's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2727,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/return-reasons/index.d.ts",
																			"qualifiedName": "AdminReturnReasonsRes"
																		},
																		"name": "AdminReturnReasonsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/return-reasons/update-reason.d.ts",
																	"qualifiedName": "AdminPostReturnReasonsReasonReq"
																},
																"name": "AdminPostReturnReasonsReasonReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/return-reasons/index.d.ts",
																	"qualifiedName": "AdminReturnReasonsRes"
																},
																"name": "AdminReturnReasonsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/return-reasons/update-reason.d.ts",
															"qualifiedName": "AdminPostReturnReasonsReasonReq"
														},
														"name": "AdminPostReturnReasonsReasonReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 2728,
									"name": "useAdminDeleteReturnReason",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2729,
											"name": "useAdminDeleteReturnReason",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a return reason."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteReturnReason } from \"medusa-react\"\n\ntype Props = {\n  returnReasonId: string\n}\n\nconst ReturnReason = ({ returnReasonId }: Props) => {\n  const deleteReturnReason = useAdminDeleteReturnReason(\n    returnReasonId\n  )\n  // ...\n\n  const handleDelete = () => {\n    deleteReturnReason.mutate(void 0, {\n      onSuccess: ({ id, object, deleted }) => {\n        console.log(id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default ReturnReason\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2730,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The return reason's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2731,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "unknown"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 2690,
									"name": "useAdminReturnReasons",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2691,
											"name": "useAdminReturnReasons",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of return reasons."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminReturnReasons } from \"medusa-react\"\n\nconst ReturnReasons = () => {\n  const { return_reasons, isLoading } = useAdminReturnReasons()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {return_reasons && !return_reasons.length && (\n        <span>No Return Reasons</span>\n      )}\n      {return_reasons && return_reasons.length > 0 && (\n        <ul>\n          {return_reasons.map((reason) => (\n            <li key={reason.id}>\n              {reason.label}: {reason.value}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default ReturnReasons\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2692,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/return-reasons/index.d.ts",
																			"qualifiedName": "AdminReturnReasonsListRes"
																		},
																		"name": "AdminReturnReasonsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_return_reasons"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 2693,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2695,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2694,
																	"name": "return_reasons",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/return-reason.d.ts",
																				"qualifiedName": "ReturnReason"
																			},
																			"name": "ReturnReason",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2695,
																		2694
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2696,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2698,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2697,
																	"name": "return_reasons",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/return-reason.d.ts",
																				"qualifiedName": "ReturnReason"
																			},
																			"name": "ReturnReason",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2698,
																		2697
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2699,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2701,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2700,
																	"name": "return_reasons",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/return-reason.d.ts",
																				"qualifiedName": "ReturnReason"
																			},
																			"name": "ReturnReason",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2701,
																		2700
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2702,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2704,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2703,
																	"name": "return_reasons",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/return-reason.d.ts",
																				"qualifiedName": "ReturnReason"
																			},
																			"name": "ReturnReason",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2704,
																		2703
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 2705,
									"name": "useAdminReturnReason",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2706,
											"name": "useAdminReturnReason",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a return reason's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminReturnReason } from \"medusa-react\"\n\ntype Props = {\n  returnReasonId: string\n}\n\nconst ReturnReason = ({ returnReasonId }: Props) => {\n  const { return_reason, isLoading } = useAdminReturnReason(\n    returnReasonId\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {return_reason && <span>{return_reason.label}</span>}\n    </div>\n  )\n}\n\nexport default ReturnReason\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2707,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The return reason's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2708,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/return-reasons/index.d.ts",
																			"qualifiedName": "AdminReturnReasonsRes"
																		},
																		"name": "AdminReturnReasonsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_return_reasons"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 2709,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2711,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2710,
																	"name": "return_reason",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/return-reason.d.ts",
																			"qualifiedName": "ReturnReason"
																		},
																		"name": "ReturnReason",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2711,
																		2710
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2712,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2714,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2713,
																	"name": "return_reason",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/return-reason.d.ts",
																			"qualifiedName": "ReturnReason"
																		},
																		"name": "ReturnReason",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2714,
																		2713
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2715,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2717,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2716,
																	"name": "return_reason",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/return-reason.d.ts",
																			"qualifiedName": "ReturnReason"
																		},
																		"name": "ReturnReason",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2717,
																		2716
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2718,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2720,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2719,
																	"name": "return_reason",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/return-reason.d.ts",
																			"qualifiedName": "ReturnReason"
																		},
																		"name": "ReturnReason",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2720,
																		2719
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										2721,
										2724,
										2728,
										2690,
										2705
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										2690,
										2705
									]
								},
								{
									"title": "Mutations",
									"children": [
										2721,
										2724,
										2728
									]
								}
							]
						},
						{
							"id": 36,
							"name": "Returns",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Return API Routes](https://docs.medusajs.com/api/admin#returns).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 852
									},
									{
										"kind": "text",
										"text": ".\n\nA return can be created by a customer or an admin to return items in an order.\nAdmins can manage these returns and change their state.\n\nRelated Guide: [How to manage returns](https://docs.medusajs.com/modules/orders/admin/manage-returns)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 2760,
									"name": "useAdminReceiveReturn",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2761,
											"name": "useAdminReceiveReturn",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook marks a return as received. This also updates the status of associated order, claim, or swap accordingly."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminReceiveReturn } from \"medusa-react\"\n\ntype ReceiveReturnData = {\n  items: {\n    item_id: string\n    quantity: number\n  }[]\n}\n\ntype Props = {\n  returnId: string\n}\n\nconst Return = ({ returnId }: Props) => {\n  const receiveReturn = useAdminReceiveReturn(\n    returnId\n  )\n  // ...\n\n  const handleReceive = (data: ReceiveReturnData) => {\n    receiveReturn.mutate(data, {\n      onSuccess: ({ return: dataReturn }) => {\n        console.log(dataReturn.status)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Return\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2762,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The return's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2763,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/returns/index.d.ts",
																			"qualifiedName": "AdminReturnsRes"
																		},
																		"name": "AdminReturnsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/returns/receive-return.d.ts",
																	"qualifiedName": "AdminPostReturnsReturnReceiveReq"
																},
																"name": "AdminPostReturnsReturnReceiveReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/returns/index.d.ts",
																	"qualifiedName": "AdminReturnsRes"
																},
																"name": "AdminReturnsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/returns/receive-return.d.ts",
															"qualifiedName": "AdminPostReturnsReturnReceiveReq"
														},
														"name": "AdminPostReturnsReturnReceiveReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 2764,
									"name": "useAdminCancelReturn",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2765,
											"name": "useAdminCancelReturn",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook registers a return as canceled. The return can be associated with an order, claim, or swap."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCancelReturn } from \"medusa-react\"\n\ntype Props = {\n  returnId: string\n}\n\nconst Return = ({ returnId }: Props) => {\n  const cancelReturn = useAdminCancelReturn(\n    returnId\n  )\n  // ...\n\n  const handleCancel = () => {\n    cancelReturn.mutate(void 0, {\n      onSuccess: ({ order }) => {\n        console.log(order.returns)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Return\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2766,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The return's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2767,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/returns/index.d.ts",
																			"qualifiedName": "AdminReturnsCancelRes"
																		},
																		"name": "AdminReturnsCancelRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/returns/index.d.ts",
																	"qualifiedName": "AdminReturnsCancelRes"
																},
																"name": "AdminReturnsCancelRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 2733,
									"name": "useAdminReturns",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2734,
											"name": "useAdminReturns",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of Returns. The returns can be paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminReturns } from \"medusa-react\"\n\nconst Returns = () => {\n  const { returns, isLoading } = useAdminReturns()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {returns && !returns.length && (\n        <span>No Returns</span>\n      )}\n      {returns && returns.length > 0 && (\n        <ul>\n          {returns.map((returnData) => (\n            <li key={returnData.id}>\n              {returnData.status}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Returns\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2735,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/returns/index.d.ts",
																			"qualifiedName": "AdminReturnsListRes"
																		},
																		"name": "AdminReturnsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_returns"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 2736,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2741,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2740,
																	"name": "returns",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/return.d.ts",
																				"qualifiedName": "Return"
																			},
																			"name": "Return",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 2737,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2738,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2739,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2741,
																		2740,
																		2737,
																		2738,
																		2739
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2742,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2747,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2746,
																	"name": "returns",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/return.d.ts",
																				"qualifiedName": "Return"
																			},
																			"name": "Return",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 2743,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2744,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2745,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2747,
																		2746,
																		2743,
																		2744,
																		2745
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2748,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2753,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2752,
																	"name": "returns",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/return.d.ts",
																				"qualifiedName": "Return"
																			},
																			"name": "Return",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 2749,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2750,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2751,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2753,
																		2752,
																		2749,
																		2750,
																		2751
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2754,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2759,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2758,
																	"name": "returns",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/return.d.ts",
																				"qualifiedName": "Return"
																			},
																			"name": "Return",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 2755,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2756,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2757,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2759,
																		2758,
																		2755,
																		2756,
																		2757
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										2760,
										2764,
										2733
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										2733
									]
								},
								{
									"title": "Mutations",
									"children": [
										2760,
										2764
									]
								}
							]
						},
						{
							"id": 37,
							"name": "Sales Channels",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Sales Channel API Routes](https://docs.medusajs.com/api/admin#sales-channels).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 852
									},
									{
										"kind": "text",
										"text": ".\n\nA sales channel indicates a channel where products can be sold in. For example, a webshop or a mobile app.\nAdmins can manage sales channels and the products available in them.\n\nRelated Guide: [How to manage sales channels](https://docs.medusajs.com/modules/sales-channels/admin/manage)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 2815,
									"name": "useAdminCreateSalesChannel",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2816,
											"name": "useAdminCreateSalesChannel",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a sales channel."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateSalesChannel } from \"medusa-react\"\n\nconst CreateSalesChannel = () => {\n  const createSalesChannel = useAdminCreateSalesChannel()\n  // ...\n\n  const handleCreate = (name: string, description: string) => {\n    createSalesChannel.mutate({\n      name,\n      description,\n    }, {\n      onSuccess: ({ sales_channel }) => {\n        console.log(sales_channel.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateSalesChannel\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2817,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
																			"qualifiedName": "AdminSalesChannelsRes"
																		},
																		"name": "AdminSalesChannelsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/create-sales-channel.d.ts",
																	"qualifiedName": "AdminPostSalesChannelsReq"
																},
																"name": "AdminPostSalesChannelsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
																	"qualifiedName": "AdminSalesChannelsRes"
																},
																"name": "AdminSalesChannelsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/create-sales-channel.d.ts",
															"qualifiedName": "AdminPostSalesChannelsReq"
														},
														"name": "AdminPostSalesChannelsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 2818,
									"name": "useAdminUpdateSalesChannel",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2819,
											"name": "useAdminUpdateSalesChannel",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a sales channel's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateSalesChannel } from \"medusa-react\"\n\ntype Props = {\n  salesChannelId: string\n}\n\nconst SalesChannel = ({ salesChannelId }: Props) => {\n  const updateSalesChannel = useAdminUpdateSalesChannel(\n    salesChannelId\n  )\n  // ...\n\n  const handleUpdate = (\n    is_disabled: boolean\n  ) => {\n    updateSalesChannel.mutate({\n      is_disabled,\n    }, {\n      onSuccess: ({ sales_channel }) => {\n        console.log(sales_channel.is_disabled)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default SalesChannel\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2820,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The sales channel's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2821,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
																			"qualifiedName": "AdminSalesChannelsRes"
																		},
																		"name": "AdminSalesChannelsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/update-sales-channel.d.ts",
																	"qualifiedName": "AdminPostSalesChannelsSalesChannelReq"
																},
																"name": "AdminPostSalesChannelsSalesChannelReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
																	"qualifiedName": "AdminSalesChannelsRes"
																},
																"name": "AdminSalesChannelsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/update-sales-channel.d.ts",
															"qualifiedName": "AdminPostSalesChannelsSalesChannelReq"
														},
														"name": "AdminPostSalesChannelsSalesChannelReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 2822,
									"name": "useAdminDeleteSalesChannel",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2823,
											"name": "useAdminDeleteSalesChannel",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a sales channel. Associated products, stock locations, and other resources are not deleted."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteSalesChannel } from \"medusa-react\"\n\ntype Props = {\n  salesChannelId: string\n}\n\nconst SalesChannel = ({ salesChannelId }: Props) => {\n  const deleteSalesChannel = useAdminDeleteSalesChannel(\n    salesChannelId\n  )\n  // ...\n\n  const handleDelete = () => {\n    deleteSalesChannel.mutate(void 0, {\n      onSuccess: ({ id, object, deleted }) => {\n        console.log(id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default SalesChannel\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2824,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The sales channel's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2825,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																			"qualifiedName": "DeleteResponse"
																		},
																		"name": "DeleteResponse",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 2826,
									"name": "useAdminDeleteProductsFromSalesChannel",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2827,
											"name": "useAdminDeleteProductsFromSalesChannel",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook removes a list of products from a sales channel. This doesn't delete the product. It only removes the \nassociation between the product and the sales channel."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminDeleteProductsFromSalesChannel, \n} from \"medusa-react\"\n\ntype Props = {\n  salesChannelId: string\n}\n\nconst SalesChannel = ({ salesChannelId }: Props) => {\n  const deleteProducts = useAdminDeleteProductsFromSalesChannel(\n    salesChannelId\n  )\n  // ...\n\n  const handleDeleteProducts = (productId: string) => {\n    deleteProducts.mutate({\n      product_ids: [\n        {\n          id: productId,\n        },\n      ],\n    }, {\n      onSuccess: ({ sales_channel }) => {\n        console.log(sales_channel.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default SalesChannel\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2828,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The sales channel's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2829,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
																			"qualifiedName": "AdminSalesChannelsRes"
																		},
																		"name": "AdminSalesChannelsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/delete-products-batch.d.ts",
																	"qualifiedName": "AdminDeleteSalesChannelsChannelProductsBatchReq"
																},
																"name": "AdminDeleteSalesChannelsChannelProductsBatchReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
																	"qualifiedName": "AdminSalesChannelsRes"
																},
																"name": "AdminSalesChannelsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/delete-products-batch.d.ts",
															"qualifiedName": "AdminDeleteSalesChannelsChannelProductsBatchReq"
														},
														"name": "AdminDeleteSalesChannelsChannelProductsBatchReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 2830,
									"name": "useAdminAddProductsToSalesChannel",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2831,
											"name": "useAdminAddProductsToSalesChannel",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook adds a list of products to a sales channel."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminAddProductsToSalesChannel } from \"medusa-react\"\n\ntype Props = {\n  salesChannelId: string\n}\n\nconst SalesChannel = ({ salesChannelId }: Props) => {\n  const addProducts = useAdminAddProductsToSalesChannel(\n    salesChannelId\n  )\n  // ...\n\n  const handleAddProducts = (productId: string) => {\n    addProducts.mutate({\n      product_ids: [\n        {\n          id: productId,\n        },\n      ],\n    }, {\n      onSuccess: ({ sales_channel }) => {\n        console.log(sales_channel.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default SalesChannel\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2832,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The sales channel's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2833,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
																			"qualifiedName": "AdminSalesChannelsRes"
																		},
																		"name": "AdminSalesChannelsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/add-product-batch.d.ts",
																	"qualifiedName": "AdminPostSalesChannelsChannelProductsBatchReq"
																},
																"name": "AdminPostSalesChannelsChannelProductsBatchReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
																	"qualifiedName": "AdminSalesChannelsRes"
																},
																"name": "AdminSalesChannelsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/add-product-batch.d.ts",
															"qualifiedName": "AdminPostSalesChannelsChannelProductsBatchReq"
														},
														"name": "AdminPostSalesChannelsChannelProductsBatchReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 2834,
									"name": "useAdminAddLocationToSalesChannel",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2835,
											"name": "useAdminAddLocationToSalesChannel",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook associates a stock location with a sales channel. It requires the \n[@medusajs/stock-location](https://docs.medusajs.com/modules/multiwarehouse/install-modules#stock-location-module) module to be installed in\nyour Medusa backend."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminAddLocationToSalesChannel\n} from \"medusa-react\"\n\ntype Props = {\n  salesChannelId: string\n}\n\nconst SalesChannel = ({ salesChannelId }: Props) => {\n  const addLocation = useAdminAddLocationToSalesChannel()\n  // ...\n\n  const handleAddLocation = (locationId: string) => {\n    addLocation.mutate({\n      sales_channel_id: salesChannelId,\n      location_id: locationId\n    }, {\n      onSuccess: ({ sales_channel }) => {\n        console.log(sales_channel.locations)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default SalesChannel\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2836,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
																			"qualifiedName": "AdminSalesChannelsRes"
																		},
																		"name": "AdminSalesChannelsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 2837,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 2838,
																			"name": "sales_channel_id",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "The sales channel's ID."
																					}
																				]
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 2839,
																			"name": "location_id",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "The location's ID."
																					}
																				]
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				2838,
																				2839
																			]
																		}
																	]
																}
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
																	"qualifiedName": "AdminSalesChannelsRes"
																},
																"name": "AdminSalesChannelsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2840,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2841,
																	"name": "sales_channel_id",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The sales channel's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 2842,
																	"name": "location_id",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The location's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2841,
																		2842
																	]
																}
															]
														}
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 2843,
									"name": "useAdminRemoveLocationFromSalesChannel",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2844,
											"name": "useAdminRemoveLocationFromSalesChannel",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook removes a stock location from a sales channel. This only removes the association between the stock \nlocation and the sales channel. It does not delete the stock location. This hook requires the \n[@medusajs/stock-location](https://docs.medusajs.com/modules/multiwarehouse/install-modules#stock-location-module) module to be installed in\nyour Medusa backend."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminRemoveLocationFromSalesChannel\n} from \"medusa-react\"\n\ntype Props = {\n  salesChannelId: string\n}\n\nconst SalesChannel = ({ salesChannelId }: Props) => {\n  const removeLocation = useAdminRemoveLocationFromSalesChannel()\n  // ...\n\n  const handleRemoveLocation = (locationId: string) => {\n    removeLocation.mutate({\n      sales_channel_id: salesChannelId,\n      location_id: locationId\n    }, {\n      onSuccess: ({ sales_channel }) => {\n        console.log(sales_channel.locations)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default SalesChannel\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2845,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
																			"qualifiedName": "AdminSalesChannelsRes"
																		},
																		"name": "AdminSalesChannelsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 2846,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 2847,
																			"name": "sales_channel_id",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "The sales channel's ID."
																					}
																				]
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 2848,
																			"name": "location_id",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "The location's ID."
																					}
																				]
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				2847,
																				2848
																			]
																		}
																	]
																}
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
																	"qualifiedName": "AdminSalesChannelsRes"
																},
																"name": "AdminSalesChannelsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2849,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2850,
																	"name": "sales_channel_id",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The sales channel's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 2851,
																	"name": "location_id",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The location's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2850,
																		2851
																	]
																}
															]
														}
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 2769,
									"name": "useAdminSalesChannel",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2770,
											"name": "useAdminSalesChannel",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a sales channel's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminSalesChannel } from \"medusa-react\"\n\ntype Props = {\n  salesChannelId: string\n}\n\nconst SalesChannel = ({ salesChannelId }: Props) => {\n  const { \n    sales_channel, \n    isLoading, \n  } = useAdminSalesChannel(salesChannelId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {sales_channel && <span>{sales_channel.name}</span>}\n    </div>\n  )\n}\n\nexport default SalesChannel\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2771,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The sales channel's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2772,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
																			"qualifiedName": "AdminSalesChannelsRes"
																		},
																		"name": "AdminSalesChannelsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_sales_channels"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 2773,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2775,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2774,
																	"name": "sales_channel",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/sales-channel.d.ts",
																			"qualifiedName": "SalesChannel"
																		},
																		"name": "SalesChannel",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2775,
																		2774
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2776,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2778,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2777,
																	"name": "sales_channel",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/sales-channel.d.ts",
																			"qualifiedName": "SalesChannel"
																		},
																		"name": "SalesChannel",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2778,
																		2777
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2779,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2781,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2780,
																	"name": "sales_channel",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/sales-channel.d.ts",
																			"qualifiedName": "SalesChannel"
																		},
																		"name": "SalesChannel",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2781,
																		2780
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2782,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2784,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2783,
																	"name": "sales_channel",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/sales-channel.d.ts",
																			"qualifiedName": "SalesChannel"
																		},
																		"name": "SalesChannel",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2784,
																		2783
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 2785,
									"name": "useAdminSalesChannels",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2786,
											"name": "useAdminSalesChannels",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of sales channels. The sales channels can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`q`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`name`"
													},
													{
														"kind": "text",
														"text": " \npassed in the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter. The sales channels can also be sorted or paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list sales channels:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminSalesChannels } from \"medusa-react\"\n\nconst SalesChannels = () => {\n  const { sales_channels, isLoading } = useAdminSalesChannels()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {sales_channels && !sales_channels.length && (\n        <span>No Sales Channels</span>\n      )}\n      {sales_channels && sales_channels.length > 0 && (\n        <ul>\n          {sales_channels.map((salesChannel) => (\n            <li key={salesChannel.id}>{salesChannel.name}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default SalesChannels\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved within the sales channels:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminSalesChannels } from \"medusa-react\"\n\nconst SalesChannels = () => {\n  const { \n    sales_channels, \n    isLoading\n  } = useAdminSalesChannels({\n    expand: \"locations\"\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {sales_channels && !sales_channels.length && (\n        <span>No Sales Channels</span>\n      )}\n      {sales_channels && sales_channels.length > 0 && (\n        <ul>\n          {sales_channels.map((salesChannel) => (\n            <li key={salesChannel.id}>{salesChannel.name}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default SalesChannels\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`20`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminSalesChannels } from \"medusa-react\"\n\nconst SalesChannels = () => {\n  const { \n    sales_channels, \n    limit,\n    offset,\n    isLoading\n  } = useAdminSalesChannels({\n    expand: \"locations\",\n    limit: 10,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {sales_channels && !sales_channels.length && (\n        <span>No Sales Channels</span>\n      )}\n      {sales_channels && sales_channels.length > 0 && (\n        <ul>\n          {sales_channels.map((salesChannel) => (\n            <li key={salesChannel.id}>{salesChannel.name}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default SalesChannels\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2787,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations applied on the retrieved sales channels."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/list-sales-channels.d.ts",
															"qualifiedName": "AdminGetSalesChannelsParams"
														},
														"name": "AdminGetSalesChannelsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 2788,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
																			"qualifiedName": "AdminSalesChannelsListRes"
																		},
																		"name": "AdminSalesChannelsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_sales_channels"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 2789,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 2790,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						2790
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 2791,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2796,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2795,
																	"name": "sales_channels",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/sales-channel.d.ts",
																				"qualifiedName": "SalesChannel"
																			},
																			"name": "SalesChannel",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 2792,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2793,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2794,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2796,
																		2795,
																		2792,
																		2793,
																		2794
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2797,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2802,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2801,
																	"name": "sales_channels",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/sales-channel.d.ts",
																				"qualifiedName": "SalesChannel"
																			},
																			"name": "SalesChannel",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 2798,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2799,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2800,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2802,
																		2801,
																		2798,
																		2799,
																		2800
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2803,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2808,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2807,
																	"name": "sales_channels",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/sales-channel.d.ts",
																				"qualifiedName": "SalesChannel"
																			},
																			"name": "SalesChannel",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 2804,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2805,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2806,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2808,
																		2807,
																		2804,
																		2805,
																		2806
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2809,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2814,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2813,
																	"name": "sales_channels",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/sales-channel.d.ts",
																				"qualifiedName": "SalesChannel"
																			},
																			"name": "SalesChannel",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 2810,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2811,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2812,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2814,
																		2813,
																		2810,
																		2811,
																		2812
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										2815,
										2818,
										2822,
										2826,
										2830,
										2834,
										2843,
										2769,
										2785
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										2769,
										2785
									]
								},
								{
									"title": "Mutations",
									"children": [
										2815,
										2818,
										2822,
										2826,
										2830,
										2834,
										2843
									]
								}
							]
						},
						{
							"id": 38,
							"name": "Shipping Options",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Shipping Option API Routes](https://docs.medusajs.com/api/admin#shipping-options).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 852
									},
									{
										"kind": "text",
										"text": ".\n\nA shipping option is used to define the available shipping methods during checkout or when creating a return.\nAdmins can create an unlimited number of shipping options, each associated with a shipping profile and fulfillment provider, among other resources.\n\nRelated Guide: [Shipping Option architecture](https://docs.medusajs.com/modules/carts-and-checkout/shipping#shipping-option)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 2899,
									"name": "useAdminCreateShippingOption",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2900,
											"name": "useAdminCreateShippingOption",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a shipping option."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateShippingOption } from \"medusa-react\"\n\ntype CreateShippingOption = {\n  name: string\n  provider_id: string\n  data: Record<string, unknown>\n  price_type: string\n  amount: number\n}\n\ntype Props = {\n  regionId: string\n}\n\nconst Region = ({ regionId }: Props) => {\n  const createShippingOption = useAdminCreateShippingOption()\n  // ...\n\n  const handleCreate = (\n    data: CreateShippingOption\n  ) => {\n    createShippingOption.mutate({\n      ...data,\n      region_id: regionId\n    }, {\n      onSuccess: ({ shipping_option }) => {\n        console.log(shipping_option.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Region\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2901,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-options/index.d.ts",
																			"qualifiedName": "AdminShippingOptionsRes"
																		},
																		"name": "AdminShippingOptionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-options/create-shipping-option.d.ts",
																	"qualifiedName": "AdminPostShippingOptionsReq"
																},
																"name": "AdminPostShippingOptionsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-options/index.d.ts",
																	"qualifiedName": "AdminShippingOptionsRes"
																},
																"name": "AdminShippingOptionsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-options/create-shipping-option.d.ts",
															"qualifiedName": "AdminPostShippingOptionsReq"
														},
														"name": "AdminPostShippingOptionsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 2902,
									"name": "useAdminUpdateShippingOption",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2903,
											"name": "useAdminUpdateShippingOption",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a shipping option's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateShippingOption } from \"medusa-react\"\n\ntype Props = {\n  shippingOptionId: string\n}\n\nconst ShippingOption = ({ shippingOptionId }: Props) => {\n  const updateShippingOption = useAdminUpdateShippingOption(\n    shippingOptionId\n  )\n  // ...\n\n  const handleUpdate = (\n    name: string,\n    requirements: {\n      id: string,\n      type: string,\n      amount: number\n    }[]\n  ) => {\n    updateShippingOption.mutate({\n      name,\n      requirements\n    }, {\n      onSuccess: ({ shipping_option }) => {\n        console.log(shipping_option.requirements)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default ShippingOption\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2904,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The shipping option's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2905,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-options/index.d.ts",
																			"qualifiedName": "AdminShippingOptionsRes"
																		},
																		"name": "AdminShippingOptionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-options/update-shipping-option.d.ts",
																	"qualifiedName": "AdminPostShippingOptionsOptionReq"
																},
																"name": "AdminPostShippingOptionsOptionReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-options/index.d.ts",
																	"qualifiedName": "AdminShippingOptionsRes"
																},
																"name": "AdminShippingOptionsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-options/update-shipping-option.d.ts",
															"qualifiedName": "AdminPostShippingOptionsOptionReq"
														},
														"name": "AdminPostShippingOptionsOptionReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 2906,
									"name": "useAdminDeleteShippingOption",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2907,
											"name": "useAdminDeleteShippingOption",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a shipping option. Once deleted, it can't be used when creating orders or returns."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteShippingOption } from \"medusa-react\"\n\ntype Props = {\n  shippingOptionId: string\n}\n\nconst ShippingOption = ({ shippingOptionId }: Props) => {\n  const deleteShippingOption = useAdminDeleteShippingOption(\n    shippingOptionId\n  )\n  // ...\n\n  const handleDelete = () => {\n    deleteShippingOption.mutate(void 0, {\n      onSuccess: ({ id, object, deleted }) => {\n        console.log(id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default ShippingOption\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2908,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The shipping option's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2909,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "unknown"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 2853,
									"name": "useAdminShippingOptions",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2854,
											"name": "useAdminShippingOptions",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of shipping options. The shipping options can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`region_id`"
													},
													{
														"kind": "text",
														"text": " \nor "
													},
													{
														"kind": "code",
														"text": "`is_return`"
													},
													{
														"kind": "text",
														"text": " passed in the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminShippingOptions } from \"medusa-react\"\n\nconst ShippingOptions = () => {\n  const {\n    shipping_options, \n    isLoading\n  } = useAdminShippingOptions()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {shipping_options && !shipping_options.length && (\n        <span>No Shipping Options</span>\n      )}\n      {shipping_options && shipping_options.length > 0 && (\n        <ul>\n          {shipping_options.map((option) => (\n            <li key={option.id}>{option.name}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default ShippingOptions\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2855,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters to apply on the retrieved shipping options."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-options/list-shipping-options.d.ts",
															"qualifiedName": "AdminGetShippingOptionsParams"
														},
														"name": "AdminGetShippingOptionsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 2856,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-options/index.d.ts",
																			"qualifiedName": "AdminShippingOptionsListRes"
																		},
																		"name": "AdminShippingOptionsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_shipping_options"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 2857,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 2858,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						2858
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 2859,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2864,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2863,
																	"name": "shipping_options",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/shipping-option.d.ts",
																				"qualifiedName": "ShippingOption"
																			},
																			"name": "ShippingOption",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 2860,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2861,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2862,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2864,
																		2863,
																		2860,
																		2861,
																		2862
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2865,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2870,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2869,
																	"name": "shipping_options",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/shipping-option.d.ts",
																				"qualifiedName": "ShippingOption"
																			},
																			"name": "ShippingOption",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 2866,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2867,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2868,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2870,
																		2869,
																		2866,
																		2867,
																		2868
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2871,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2876,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2875,
																	"name": "shipping_options",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/shipping-option.d.ts",
																				"qualifiedName": "ShippingOption"
																			},
																			"name": "ShippingOption",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 2872,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2873,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2874,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2876,
																		2875,
																		2872,
																		2873,
																		2874
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2877,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2882,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2881,
																	"name": "shipping_options",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/shipping-option.d.ts",
																				"qualifiedName": "ShippingOption"
																			},
																			"name": "ShippingOption",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 2878,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2879,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2880,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2882,
																		2881,
																		2878,
																		2879,
																		2880
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 2883,
									"name": "useAdminShippingOption",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2884,
											"name": "useAdminShippingOption",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a shipping option's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminShippingOption } from \"medusa-react\"\n\ntype Props = {\n  shippingOptionId: string\n}\n\nconst ShippingOption = ({ shippingOptionId }: Props) => {\n  const {\n    shipping_option, \n    isLoading\n  } = useAdminShippingOption(\n    shippingOptionId\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {shipping_option && <span>{shipping_option.name}</span>}\n    </div>\n  )\n}\n\nexport default ShippingOption\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2885,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The shipping option's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2886,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-options/index.d.ts",
																			"qualifiedName": "AdminShippingOptionsRes"
																		},
																		"name": "AdminShippingOptionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_shipping_options"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 2887,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2889,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2888,
																	"name": "shipping_option",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/shipping-option.d.ts",
																			"qualifiedName": "ShippingOption"
																		},
																		"name": "ShippingOption",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2889,
																		2888
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2890,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2892,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2891,
																	"name": "shipping_option",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/shipping-option.d.ts",
																			"qualifiedName": "ShippingOption"
																		},
																		"name": "ShippingOption",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2892,
																		2891
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2893,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2895,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2894,
																	"name": "shipping_option",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/shipping-option.d.ts",
																			"qualifiedName": "ShippingOption"
																		},
																		"name": "ShippingOption",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2895,
																		2894
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2896,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2898,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2897,
																	"name": "shipping_option",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/shipping-option.d.ts",
																			"qualifiedName": "ShippingOption"
																		},
																		"name": "ShippingOption",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2898,
																		2897
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										2899,
										2902,
										2906,
										2853,
										2883
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										2853,
										2883
									]
								},
								{
									"title": "Mutations",
									"children": [
										2899,
										2902,
										2906
									]
								}
							]
						},
						{
							"id": 39,
							"name": "Shipping Profiles",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Shipping Profile API Routes](https://docs.medusajs.com/api/admin#shipping-profiles).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 852
									},
									{
										"kind": "text",
										"text": ".\n\nA shipping profile is used to group products that can be shipped in the same manner.\nThey are created by the admin and they're not associated with a fulfillment provider.\n\nRelated Guide: [Shipping Profile architecture](https://docs.medusajs.com/modules/carts-and-checkout/shipping#shipping-profile)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 2942,
									"name": "useAdminCreateShippingProfile",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2943,
											"name": "useAdminCreateShippingProfile",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a shipping profile."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { ShippingProfileType } from \"@medusajs/medusa\"\nimport { useAdminCreateShippingProfile } from \"medusa-react\"\n\nconst CreateShippingProfile = () => {\n  const createShippingProfile = useAdminCreateShippingProfile()\n  // ...\n\n  const handleCreate = (\n    name: string,\n    type: ShippingProfileType\n  ) => {\n    createShippingProfile.mutate({\n      name,\n      type\n    }, {\n      onSuccess: ({ shipping_profile }) => {\n        console.log(shipping_profile.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateShippingProfile\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2944,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-profiles/index.d.ts",
																			"qualifiedName": "AdminShippingProfilesRes"
																		},
																		"name": "AdminShippingProfilesRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-profiles/create-shipping-profile.d.ts",
																	"qualifiedName": "AdminPostShippingProfilesReq"
																},
																"name": "AdminPostShippingProfilesReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-profiles/index.d.ts",
																	"qualifiedName": "AdminShippingProfilesRes"
																},
																"name": "AdminShippingProfilesRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-profiles/create-shipping-profile.d.ts",
															"qualifiedName": "AdminPostShippingProfilesReq"
														},
														"name": "AdminPostShippingProfilesReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 2945,
									"name": "useAdminUpdateShippingProfile",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2946,
											"name": "useAdminUpdateShippingProfile",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a shipping profile's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { ShippingProfileType } from \"@medusajs/medusa\"\nimport { useAdminUpdateShippingProfile } from \"medusa-react\"\n\ntype Props = {\n  shippingProfileId: string\n}\n\nconst ShippingProfile = ({ shippingProfileId }: Props) => {\n  const updateShippingProfile = useAdminUpdateShippingProfile(\n    shippingProfileId\n  )\n  // ...\n\n  const handleUpdate = (\n    name: string,\n    type: ShippingProfileType\n  ) => {\n    updateShippingProfile.mutate({\n      name,\n      type\n    }, {\n      onSuccess: ({ shipping_profile }) => {\n        console.log(shipping_profile.name)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default ShippingProfile\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2947,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The shipping profile's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2948,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-profiles/index.d.ts",
																			"qualifiedName": "AdminShippingProfilesRes"
																		},
																		"name": "AdminShippingProfilesRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-profiles/update-shipping-profile.d.ts",
																	"qualifiedName": "AdminPostShippingProfilesProfileReq"
																},
																"name": "AdminPostShippingProfilesProfileReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-profiles/index.d.ts",
																	"qualifiedName": "AdminShippingProfilesRes"
																},
																"name": "AdminShippingProfilesRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-profiles/update-shipping-profile.d.ts",
															"qualifiedName": "AdminPostShippingProfilesProfileReq"
														},
														"name": "AdminPostShippingProfilesProfileReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 2949,
									"name": "useAdminDeleteShippingProfile",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2950,
											"name": "useAdminDeleteShippingProfile",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a shipping profile. Associated shipping options are deleted as well."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteShippingProfile } from \"medusa-react\"\n\ntype Props = {\n  shippingProfileId: string\n}\n\nconst ShippingProfile = ({ shippingProfileId }: Props) => {\n  const deleteShippingProfile = useAdminDeleteShippingProfile(\n    shippingProfileId\n  )\n  // ...\n\n  const handleDelete = () => {\n    deleteShippingProfile.mutate(void 0, {\n      onSuccess: ({ id, object, deleted }) => {\n        console.log(id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default ShippingProfile\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2951,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The shipping profile's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2952,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																			"qualifiedName": "DeleteResponse"
																		},
																		"name": "DeleteResponse",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 2911,
									"name": "useAdminShippingProfiles",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2912,
											"name": "useAdminShippingProfiles",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of shipping profiles."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminShippingProfiles } from \"medusa-react\"\n\nconst ShippingProfiles = () => {\n  const { \n    shipping_profiles, \n    isLoading\n  } = useAdminShippingProfiles()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {shipping_profiles && !shipping_profiles.length && (\n        <span>No Shipping Profiles</span>\n      )}\n      {shipping_profiles && shipping_profiles.length > 0 && (\n        <ul>\n          {shipping_profiles.map((profile) => (\n            <li key={profile.id}>{profile.name}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default ShippingProfiles\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2913,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-profiles/index.d.ts",
																			"qualifiedName": "AdminShippingProfilesListRes"
																		},
																		"name": "AdminShippingProfilesListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_shippingProfiles"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 2914,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2916,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2915,
																	"name": "shipping_profiles",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/shipping-profile.d.ts",
																				"qualifiedName": "ShippingProfile"
																			},
																			"name": "ShippingProfile",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2916,
																		2915
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2917,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2919,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2918,
																	"name": "shipping_profiles",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/shipping-profile.d.ts",
																				"qualifiedName": "ShippingProfile"
																			},
																			"name": "ShippingProfile",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2919,
																		2918
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2920,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2922,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2921,
																	"name": "shipping_profiles",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/shipping-profile.d.ts",
																				"qualifiedName": "ShippingProfile"
																			},
																			"name": "ShippingProfile",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2922,
																		2921
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2923,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2925,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2924,
																	"name": "shipping_profiles",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/shipping-profile.d.ts",
																				"qualifiedName": "ShippingProfile"
																			},
																			"name": "ShippingProfile",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2925,
																		2924
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 2926,
									"name": "useAdminShippingProfile",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2927,
											"name": "useAdminShippingProfile",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a shipping profile's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminShippingProfile } from \"medusa-react\"\n\ntype Props = {\n  shippingProfileId: string\n}\n\nconst ShippingProfile = ({ shippingProfileId }: Props) => {\n  const { \n    shipping_profile, \n    isLoading\n  } = useAdminShippingProfile(\n    shippingProfileId\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {shipping_profile && (\n        <span>{shipping_profile.name}</span>\n      )}\n    </div>\n  )\n}\n\nexport default ShippingProfile\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2928,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The shipping option's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2929,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-profiles/index.d.ts",
																			"qualifiedName": "AdminShippingProfilesRes"
																		},
																		"name": "AdminShippingProfilesRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_shippingProfiles"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 2930,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2932,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2931,
																	"name": "shipping_profile",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/shipping-profile.d.ts",
																			"qualifiedName": "ShippingProfile"
																		},
																		"name": "ShippingProfile",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2932,
																		2931
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2933,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2935,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2934,
																	"name": "shipping_profile",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/shipping-profile.d.ts",
																			"qualifiedName": "ShippingProfile"
																		},
																		"name": "ShippingProfile",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2935,
																		2934
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2936,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2938,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2937,
																	"name": "shipping_profile",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/shipping-profile.d.ts",
																			"qualifiedName": "ShippingProfile"
																		},
																		"name": "ShippingProfile",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2938,
																		2937
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2939,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2941,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2940,
																	"name": "shipping_profile",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/shipping-profile.d.ts",
																			"qualifiedName": "ShippingProfile"
																		},
																		"name": "ShippingProfile",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2941,
																		2940
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										2942,
										2945,
										2949,
										2911,
										2926
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										2911,
										2926
									]
								},
								{
									"title": "Mutations",
									"children": [
										2942,
										2945,
										2949
									]
								}
							]
						},
						{
							"id": 40,
							"name": "Stock Locations",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Stock Location API Routes](https://docs.medusajs.com/api/admin#stock-locations).\nTo use these hooks, make sure to install the\n[@medusajs/stock-location](https://docs.medusajs.com/modules/multiwarehouse/install-modules#stock-location-module) module in your Medusa backend.\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 852
									},
									{
										"kind": "text",
										"text": ".\n\nA stock location, provided by the [Stock Location module](https://docs.medusajs.com/modules/multiwarehouse/stock-location-module), \nindicates a physical address that stock-kept items, such as physical products, can be stored in.\nAn admin can create and manage available stock locations.\n\nRelated Guide: [How to manage stock locations](https://docs.medusajs.com/modules/multiwarehouse/admin/manage-stock-locations)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 3000,
									"name": "useAdminCreateStockLocation",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 3001,
											"name": "useAdminCreateStockLocation",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a stock location."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateStockLocation } from \"medusa-react\"\n\nconst CreateStockLocation = () => {\n  const createStockLocation = useAdminCreateStockLocation()\n  // ...\n\n  const handleCreate = (name: string) => {\n    createStockLocation.mutate({\n      name,\n    }, {\n      onSuccess: ({ stock_location }) => {\n        console.log(stock_location.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateStockLocation\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 3002,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/stock-locations/index.d.ts",
																			"qualifiedName": "AdminStockLocationsRes"
																		},
																		"name": "AdminStockLocationsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/stock-locations/create-stock-location.d.ts",
																	"qualifiedName": "AdminPostStockLocationsReq"
																},
																"name": "AdminPostStockLocationsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/stock-locations/index.d.ts",
																	"qualifiedName": "AdminStockLocationsRes"
																},
																"name": "AdminStockLocationsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/stock-locations/create-stock-location.d.ts",
															"qualifiedName": "AdminPostStockLocationsReq"
														},
														"name": "AdminPostStockLocationsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 3003,
									"name": "useAdminUpdateStockLocation",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 3004,
											"name": "useAdminUpdateStockLocation",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a stock location's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateStockLocation } from \"medusa-react\"\n\ntype Props = {\n  stockLocationId: string\n}\n\nconst StockLocation = ({ stockLocationId }: Props) => {\n  const updateLocation = useAdminUpdateStockLocation(\n    stockLocationId\n  )\n  // ...\n\n  const handleUpdate = (\n    name: string\n  ) => {\n    updateLocation.mutate({\n      name\n    }, {\n      onSuccess: ({ stock_location }) => {\n        console.log(stock_location.name)\n      }\n    })\n  }\n}\n\nexport default StockLocation\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 3005,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The stock location's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 3006,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/stock-locations/index.d.ts",
																			"qualifiedName": "AdminStockLocationsRes"
																		},
																		"name": "AdminStockLocationsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/stock-locations/update-stock-location.d.ts",
																	"qualifiedName": "AdminPostStockLocationsLocationReq"
																},
																"name": "AdminPostStockLocationsLocationReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/stock-locations/index.d.ts",
																	"qualifiedName": "AdminStockLocationsRes"
																},
																"name": "AdminStockLocationsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/stock-locations/update-stock-location.d.ts",
															"qualifiedName": "AdminPostStockLocationsLocationReq"
														},
														"name": "AdminPostStockLocationsLocationReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 3007,
									"name": "useAdminDeleteStockLocation",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 3008,
											"name": "useAdminDeleteStockLocation",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a stock location."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteStockLocation } from \"medusa-react\"\n\ntype Props = {\n  stockLocationId: string\n}\n\nconst StockLocation = ({ stockLocationId }: Props) => {\n  const deleteLocation = useAdminDeleteStockLocation(\n    stockLocationId\n  )\n  // ...\n\n  const handleDelete = () => {\n    deleteLocation.mutate(void 0, {\n      onSuccess: ({ id, object, deleted }) => {\n        console.log(id)\n      }\n    })\n  }\n}\n\nexport default StockLocation\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 3009,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The stock location's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 3010,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/types/src/common/common.ts",
																			"qualifiedName": "DeleteResponse"
																		},
																		"name": "DeleteResponse",
																		"package": "@medusajs/types"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/types/src/common/common.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/types"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 2954,
									"name": "useAdminStockLocations",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2955,
											"name": "useAdminStockLocations",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of stock locations. The stock locations can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`name`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`created_at`"
													},
													{
														"kind": "text",
														"text": " passed in the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter.\nThe stock locations can also be sorted or paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list stock locations:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminStockLocations } from \"medusa-react\"\n\nfunction StockLocations() {\n  const { \n    stock_locations,\n    isLoading\n  } = useAdminStockLocations()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {stock_locations && !stock_locations.length && (\n        <span>No Locations</span>\n      )}\n      {stock_locations && stock_locations.length > 0 && (\n        <ul>\n          {stock_locations.map(\n            (location) => (\n              <li key={location.id}>{location.name}</li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default StockLocations\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved within the stock locations:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminStockLocations } from \"medusa-react\"\n\nfunction StockLocations() {\n  const { \n    stock_locations,\n    isLoading\n  } = useAdminStockLocations({\n    expand: \"address\"\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {stock_locations && !stock_locations.length && (\n        <span>No Locations</span>\n      )}\n      {stock_locations && stock_locations.length > 0 && (\n        <ul>\n          {stock_locations.map(\n            (location) => (\n              <li key={location.id}>{location.name}</li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default StockLocations\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`20`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminStockLocations } from \"medusa-react\"\n\nfunction StockLocations() {\n  const { \n    stock_locations,\n    limit,\n    offset,\n    isLoading\n  } = useAdminStockLocations({\n    expand: \"address\",\n    limit: 10,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {stock_locations && !stock_locations.length && (\n        <span>No Locations</span>\n      )}\n      {stock_locations && stock_locations.length > 0 && (\n        <ul>\n          {stock_locations.map(\n            (location) => (\n              <li key={location.id}>{location.name}</li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default StockLocations\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2956,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved stock locations."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/stock-locations/list-stock-locations.d.ts",
															"qualifiedName": "AdminGetStockLocationsParams"
														},
														"name": "AdminGetStockLocationsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 2957,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/stock-locations/index.d.ts",
																			"qualifiedName": "AdminStockLocationsListRes"
																		},
																		"name": "AdminStockLocationsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_stock_locations"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 2958,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 2959,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						2959
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 2960,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2965,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2964,
																	"name": "stock_locations",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
																				"qualifiedName": "StockLocationExpandedDTO"
																			},
																			"name": "StockLocationExpandedDTO",
																			"package": "@medusajs/types"
																		}
																	}
																},
																{
																	"id": 2961,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2962,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2963,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2965,
																		2964,
																		2961,
																		2962,
																		2963
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2966,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2971,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2970,
																	"name": "stock_locations",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
																				"qualifiedName": "StockLocationExpandedDTO"
																			},
																			"name": "StockLocationExpandedDTO",
																			"package": "@medusajs/types"
																		}
																	}
																},
																{
																	"id": 2967,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2968,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2969,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2971,
																		2970,
																		2967,
																		2968,
																		2969
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2972,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2977,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2976,
																	"name": "stock_locations",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
																				"qualifiedName": "StockLocationExpandedDTO"
																			},
																			"name": "StockLocationExpandedDTO",
																			"package": "@medusajs/types"
																		}
																	}
																},
																{
																	"id": 2973,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2974,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2975,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2977,
																		2976,
																		2973,
																		2974,
																		2975
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2978,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2983,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2982,
																	"name": "stock_locations",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
																				"qualifiedName": "StockLocationExpandedDTO"
																			},
																			"name": "StockLocationExpandedDTO",
																			"package": "@medusajs/types"
																		}
																	}
																},
																{
																	"id": 2979,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2980,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 2981,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2983,
																		2982,
																		2979,
																		2980,
																		2981
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 2984,
									"name": "useAdminStockLocation",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 2985,
											"name": "useAdminStockLocation",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a stock location's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminStockLocation } from \"medusa-react\"\n\ntype Props = {\n  stockLocationId: string\n}\n\nconst StockLocation = ({ stockLocationId }: Props) => {\n  const { \n    stock_location,\n    isLoading\n  } = useAdminStockLocation(stockLocationId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {stock_location && (\n        <span>{stock_location.name}</span>\n      )}\n    </div>\n  )\n}\n\nexport default StockLocation\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 2986,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The stock location's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2987,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/stock-locations/index.d.ts",
																			"qualifiedName": "AdminStockLocationsRes"
																		},
																		"name": "AdminStockLocationsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_stock_locations"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 2988,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2990,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2989,
																	"name": "stock_location",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
																			"qualifiedName": "StockLocationExpandedDTO"
																		},
																		"name": "StockLocationExpandedDTO",
																		"package": "@medusajs/types"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2990,
																		2989
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2991,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2993,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2992,
																	"name": "stock_location",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
																			"qualifiedName": "StockLocationExpandedDTO"
																		},
																		"name": "StockLocationExpandedDTO",
																		"package": "@medusajs/types"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2993,
																		2992
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2994,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2996,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2995,
																	"name": "stock_location",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
																			"qualifiedName": "StockLocationExpandedDTO"
																		},
																		"name": "StockLocationExpandedDTO",
																		"package": "@medusajs/types"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2996,
																		2995
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2997,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2999,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 2998,
																	"name": "stock_location",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
																			"qualifiedName": "StockLocationExpandedDTO"
																		},
																		"name": "StockLocationExpandedDTO",
																		"package": "@medusajs/types"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2999,
																		2998
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										3000,
										3003,
										3007,
										2954,
										2984
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										2954,
										2984
									]
								},
								{
									"title": "Mutations",
									"children": [
										3000,
										3003,
										3007
									]
								}
							]
						},
						{
							"id": 41,
							"name": "Stores",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Store API Routes](https://docs.medusajs.com/api/admin#store).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 852
									},
									{
										"kind": "text",
										"text": ".\n\nA store indicates the general configurations and details about the commerce store. By default, there's only one store in the Medusa backend.\nAdmins can manage the store and its details or configurations."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 3057,
									"name": "useAdminUpdateStore",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 3058,
											"name": "useAdminUpdateStore",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates the store's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateStore } from \"medusa-react\"\n\nfunction Store() {\n  const updateStore = useAdminUpdateStore()\n  // ...\n\n  const handleUpdate = (\n    name: string\n  ) => {\n    updateStore.mutate({\n      name\n    }, {\n      onSuccess: ({ store }) => {\n        console.log(store.name)\n      }\n    })\n  }\n}\n\nexport default Store\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 3059,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/index.d.ts",
																			"qualifiedName": "AdminStoresRes"
																		},
																		"name": "AdminStoresRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/update-store.d.ts",
																	"qualifiedName": "AdminPostStoreReq"
																},
																"name": "AdminPostStoreReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/index.d.ts",
																	"qualifiedName": "AdminStoresRes"
																},
																"name": "AdminStoresRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/update-store.d.ts",
															"qualifiedName": "AdminPostStoreReq"
														},
														"name": "AdminPostStoreReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 3060,
									"name": "useAdminAddStoreCurrency",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 3061,
											"name": "useAdminAddStoreCurrency",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook adds a currency code to the available currencies in a store. This doesn't create new currencies, as currencies are defined within the Medusa backend. \nTo create a currency, you can [create a migration](https://docs.medusajs.com/development/entities/migrations/create) that inserts the currency into the database."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "string - The code of the currency to add to the store."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminAddStoreCurrency } from \"medusa-react\"\n\nconst Store = () => {\n  const addCurrency = useAdminAddStoreCurrency()\n  // ...\n\n  const handleAdd = (code: string) => {\n    addCurrency.mutate(code, {\n      onSuccess: ({ store }) => {\n        console.log(store.currencies)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Store\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 3062,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/index.d.ts",
																			"qualifiedName": "AdminStoresRes"
																		},
																		"name": "AdminStoresRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/index.d.ts",
																	"qualifiedName": "AdminStoresRes"
																},
																"name": "AdminStoresRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 3063,
									"name": "useAdminDeleteStoreCurrency",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 3064,
											"name": "useAdminDeleteStoreCurrency",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a currency code from the available currencies in a store. This doesn't completely \ndelete the currency and it can be added again later to the store."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "string - The code of the currency to remove from the store."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteStoreCurrency } from \"medusa-react\"\n\nconst Store = () => {\n  const deleteCurrency = useAdminDeleteStoreCurrency()\n  // ...\n\n  const handleAdd = (code: string) => {\n    deleteCurrency.mutate(code, {\n      onSuccess: ({ store }) => {\n        console.log(store.currencies)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Store\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 3065,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/index.d.ts",
																			"qualifiedName": "AdminStoresRes"
																		},
																		"name": "AdminStoresRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/index.d.ts",
																	"qualifiedName": "AdminStoresRes"
																},
																"name": "AdminStoresRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 3012,
									"name": "useAdminStorePaymentProviders",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 3013,
											"name": "useAdminStorePaymentProviders",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of available payment providers in a store."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminStorePaymentProviders } from \"medusa-react\"\n\nconst PaymentProviders = () => {\n  const { \n    payment_providers,\n    isLoading\n  } = useAdminStorePaymentProviders()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {payment_providers && !payment_providers.length && (\n        <span>No Payment Providers</span>\n      )}\n      {payment_providers && \n        payment_providers.length > 0 &&(\n          <ul>\n            {payment_providers.map((provider) => (\n              <li key={provider.id}>{provider.id}</li>\n            ))}\n          </ul>\n      )}\n    </div>\n  )\n}\n\nexport default PaymentProviders\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 3014,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/index.d.ts",
																			"qualifiedName": "AdminPaymentProvidersList"
																		},
																		"name": "AdminPaymentProvidersList",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_store"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 3015,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 3017,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 3016,
																	"name": "payment_providers",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/payment-provider.d.ts",
																				"qualifiedName": "PaymentProvider"
																			},
																			"name": "PaymentProvider",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		3017,
																		3016
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 3018,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 3020,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 3019,
																	"name": "payment_providers",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/payment-provider.d.ts",
																				"qualifiedName": "PaymentProvider"
																			},
																			"name": "PaymentProvider",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		3020,
																		3019
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 3021,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 3023,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 3022,
																	"name": "payment_providers",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/payment-provider.d.ts",
																				"qualifiedName": "PaymentProvider"
																			},
																			"name": "PaymentProvider",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		3023,
																		3022
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 3024,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 3026,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 3025,
																	"name": "payment_providers",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/payment-provider.d.ts",
																				"qualifiedName": "PaymentProvider"
																			},
																			"name": "PaymentProvider",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		3026,
																		3025
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 3027,
									"name": "useAdminStoreTaxProviders",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 3028,
											"name": "useAdminStoreTaxProviders",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of available tax providers in a store."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminStoreTaxProviders } from \"medusa-react\"\n\nconst TaxProviders = () => {\n  const { \n    tax_providers,\n    isLoading\n  } = useAdminStoreTaxProviders()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {tax_providers && !tax_providers.length && (\n        <span>No Tax Providers</span>\n      )}\n      {tax_providers && \n        tax_providers.length > 0 &&(\n          <ul>\n            {tax_providers.map((provider) => (\n              <li key={provider.id}>{provider.id}</li>\n            ))}\n          </ul>\n      )}\n    </div>\n  )\n}\n\nexport default TaxProviders\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 3029,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/index.d.ts",
																			"qualifiedName": "AdminTaxProvidersList"
																		},
																		"name": "AdminTaxProvidersList",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_store"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 3030,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 3032,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 3031,
																	"name": "tax_providers",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/tax-provider.d.ts",
																				"qualifiedName": "TaxProvider"
																			},
																			"name": "TaxProvider",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		3032,
																		3031
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 3033,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 3035,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 3034,
																	"name": "tax_providers",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/tax-provider.d.ts",
																				"qualifiedName": "TaxProvider"
																			},
																			"name": "TaxProvider",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		3035,
																		3034
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 3036,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 3038,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 3037,
																	"name": "tax_providers",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/tax-provider.d.ts",
																				"qualifiedName": "TaxProvider"
																			},
																			"name": "TaxProvider",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		3038,
																		3037
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 3039,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 3041,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 3040,
																	"name": "tax_providers",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/tax-provider.d.ts",
																				"qualifiedName": "TaxProvider"
																			},
																			"name": "TaxProvider",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		3041,
																		3040
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 3042,
									"name": "useAdminStore",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 3043,
											"name": "useAdminStore",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves the store's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminStore } from \"medusa-react\"\n\nconst Store = () => {\n  const { \n    store,\n    isLoading\n  } = useAdminStore()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {store && <span>{store.name}</span>}\n    </div>\n  )\n}\n\nexport default Store\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 3044,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/index.d.ts",
																			"qualifiedName": "AdminExtendedStoresRes"
																		},
																		"name": "AdminExtendedStoresRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_store"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 3045,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 3047,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 3046,
																	"name": "store",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/store.d.ts",
																			"qualifiedName": "ExtendedStoreDTO"
																		},
																		"name": "ExtendedStoreDTO",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		3047,
																		3046
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 3048,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 3050,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 3049,
																	"name": "store",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/store.d.ts",
																			"qualifiedName": "ExtendedStoreDTO"
																		},
																		"name": "ExtendedStoreDTO",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		3050,
																		3049
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 3051,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 3053,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 3052,
																	"name": "store",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/store.d.ts",
																			"qualifiedName": "ExtendedStoreDTO"
																		},
																		"name": "ExtendedStoreDTO",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		3053,
																		3052
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 3054,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 3056,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 3055,
																	"name": "store",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/store.d.ts",
																			"qualifiedName": "ExtendedStoreDTO"
																		},
																		"name": "ExtendedStoreDTO",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		3056,
																		3055
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										3057,
										3060,
										3063,
										3012,
										3027,
										3042
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										3012,
										3027,
										3042
									]
								},
								{
									"title": "Mutations",
									"children": [
										3057,
										3060,
										3063
									]
								}
							]
						},
						{
							"id": 42,
							"name": "Swaps",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Swap API Routes](https://docs.medusajs.com/api/admin#swaps).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 852
									},
									{
										"kind": "text",
										"text": ".\n\nA swap is created by a customer or an admin to exchange an item with a new one.\nCreating a swap implicitely includes creating a return for the item being exchanged.\n\nRelated Guide: [How to manage swaps](https://docs.medusajs.com/modules/orders/admin/manage-swaps)"
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 3113,
									"name": "useAdminCreateSwap",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 3114,
											"name": "useAdminCreateSwap",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a swap for an order. This includes creating a return that is associated with the swap."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateSwap } from \"medusa-react\"\n\ntype Props = {\n  orderId: string\n}\n\nconst CreateSwap = ({ orderId }: Props) => {\n  const createSwap = useAdminCreateSwap(orderId)\n  // ...\n\n  const handleCreate = (\n    returnItems: {\n      item_id: string,\n      quantity: number\n    }[]\n  ) => {\n    createSwap.mutate({\n      return_items: returnItems\n    }, {\n      onSuccess: ({ order }) => {\n        console.log(order.swaps)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateSwap\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 3115,
													"name": "orderId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The associated order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 3116,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/create-swap.d.ts",
																	"qualifiedName": "AdminPostOrdersOrderSwapsReq"
																},
																"name": "AdminPostOrdersOrderSwapsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/create-swap.d.ts",
															"qualifiedName": "AdminPostOrdersOrderSwapsReq"
														},
														"name": "AdminPostOrdersOrderSwapsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 3117,
									"name": "useAdminCancelSwap",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 3118,
											"name": "useAdminCancelSwap",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook cancels a swap and change its status."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "string - The swap's ID."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCancelSwap } from \"medusa-react\"\n\ntype Props = {\n  orderId: string,\n  swapId: string\n}\n\nconst Swap = ({\n  orderId,\n  swapId\n}: Props) => {\n  const cancelSwap = useAdminCancelSwap(\n    orderId\n  )\n  // ...\n\n  const handleCancel = () => {\n    cancelSwap.mutate(swapId, {\n      onSuccess: ({ order }) => {\n        console.log(order.swaps)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Swap\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 3119,
													"name": "orderId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The associated order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 3120,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 3124,
									"name": "useAdminFulfillSwap",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 3125,
											"name": "useAdminFulfillSwap",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a Fulfillment for a Swap and change its fulfillment status to "
													},
													{
														"kind": "code",
														"text": "`fulfilled`"
													},
													{
														"kind": "text",
														"text": ". If it requires any additional actions,\nits fulfillment status may change to "
													},
													{
														"kind": "code",
														"text": "`requires_action`"
													},
													{
														"kind": "text",
														"text": "."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminFulfillSwap } from \"medusa-react\"\n\ntype Props = {\n  orderId: string,\n  swapId: string\n}\n\nconst Swap = ({\n  orderId,\n  swapId\n}: Props) => {\n  const fulfillSwap = useAdminFulfillSwap(\n    orderId\n  )\n  // ...\n\n  const handleFulfill = () => {\n    fulfillSwap.mutate({\n      swap_id: swapId,\n    }, {\n      onSuccess: ({ order }) => {\n        console.log(order.swaps)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Swap\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 3126,
													"name": "orderId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The associated order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 3127,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": 3121,
																"name": "AdminFulfillSwapReq",
																"package": "medusa-react"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": 3121,
														"name": "AdminFulfillSwapReq",
														"package": "medusa-react"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 3131,
									"name": "useAdminCreateSwapShipment",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 3132,
											"name": "useAdminCreateSwapShipment",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a shipment for a swap and mark its fulfillment as shipped. This changes the swap's fulfillment status\nto either "
													},
													{
														"kind": "code",
														"text": "`shipped`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`partially_shipped`"
													},
													{
														"kind": "text",
														"text": ", depending on whether all the items were shipped."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateSwapShipment } from \"medusa-react\"\n\ntype Props = {\n  orderId: string,\n  swapId: string\n}\n\nconst Swap = ({\n  orderId,\n  swapId\n}: Props) => {\n  const createShipment = useAdminCreateSwapShipment(\n    orderId\n  )\n  // ...\n\n  const handleCreateShipment = (\n    fulfillmentId: string\n  ) => {\n    createShipment.mutate({\n      swap_id: swapId,\n      fulfillment_id: fulfillmentId,\n    }, {\n      onSuccess: ({ order }) => {\n        console.log(order.swaps)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Swap\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 3133,
													"name": "orderId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The associated order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 3134,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": 3128,
																"name": "AdminCreateSwapShipmentReq",
																"package": "medusa-react"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": 3128,
														"name": "AdminCreateSwapShipmentReq",
														"package": "medusa-react"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 3135,
									"name": "useAdminProcessSwapPayment",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 3136,
											"name": "useAdminProcessSwapPayment",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook process a swap's payment either by refunding or issuing a payment. This depends on the "
													},
													{
														"kind": "code",
														"text": "`difference_due`"
													},
													{
														"kind": "text",
														"text": " \nof the swap. If "
													},
													{
														"kind": "code",
														"text": "`difference_due`"
													},
													{
														"kind": "text",
														"text": " is negative, the amount is refunded. If "
													},
													{
														"kind": "code",
														"text": "`difference_due`"
													},
													{
														"kind": "text",
														"text": " is positive, the amount is captured."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "string - The swap's ID."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminProcessSwapPayment } from \"medusa-react\"\n\ntype Props = {\n  orderId: string,\n  swapId: string\n}\n\nconst Swap = ({\n  orderId,\n  swapId\n}: Props) => {\n  const processPayment = useAdminProcessSwapPayment(\n    orderId\n  )\n  // ...\n\n  const handleProcessPayment = () => {\n    processPayment.mutate(swapId, {\n      onSuccess: ({ order }) => {\n        console.log(order.swaps)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Swap\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 3137,
													"name": "orderId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The associated order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 3138,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 3143,
									"name": "useAdminCancelSwapFulfillment",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 3144,
											"name": "useAdminCancelSwapFulfillment",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook cancels a swap's fulfillment and change its fulfillment status to "
													},
													{
														"kind": "code",
														"text": "`canceled`"
													},
													{
														"kind": "text",
														"text": "."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCancelSwapFulfillment } from \"medusa-react\"\n\ntype Props = {\n  orderId: string,\n  swapId: string\n}\n\nconst Swap = ({\n  orderId,\n  swapId\n}: Props) => {\n  const cancelFulfillment = useAdminCancelSwapFulfillment(\n    orderId\n  )\n  // ...\n\n  const handleCancelFulfillment = (\n    fulfillmentId: string\n  ) => {\n    cancelFulfillment.mutate({\n      swap_id: swapId,\n      fulfillment_id: fulfillmentId,\n    })\n  }\n\n  // ...\n}\n\nexport default Swap\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 3145,
													"name": "orderId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The associated order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 3146,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																			"qualifiedName": "AdminOrdersRes"
																		},
																		"name": "AdminOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 3147,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 3148,
																			"name": "swap_id",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 3149,
																			"name": "fulfillment_id",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				3148,
																				3149
																			]
																		}
																	]
																}
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
																	"qualifiedName": "AdminOrdersRes"
																},
																"name": "AdminOrdersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 3150,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 3151,
																	"name": "swap_id",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 3152,
																	"name": "fulfillment_id",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		3151,
																		3152
																	]
																}
															]
														}
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 3067,
									"name": "useAdminSwaps",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 3068,
											"name": "useAdminSwaps",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of swaps. The swaps can be paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list swaps:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminSwaps } from \"medusa-react\"\n\nconst Swaps = () => {\n  const { swaps, isLoading } = useAdminSwaps()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {swaps && !swaps.length && <span>No Swaps</span>}\n      {swaps && swaps.length > 0 && (\n        <ul>\n          {swaps.map((swap) => (\n            <li key={swap.id}>{swap.payment_status}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Swaps\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`50`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminSwaps } from \"medusa-react\"\n\nconst Swaps = () => {\n  const { \n    swaps, \n    limit,\n    offset,\n    isLoading\n  } = useAdminSwaps({\n    limit: 10,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {swaps && !swaps.length && <span>No Swaps</span>}\n      {swaps && swaps.length > 0 && (\n        <ul>\n          {swaps.map((swap) => (\n            <li key={swap.id}>{swap.payment_status}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Swaps\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 3069,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Pagination configurations to apply on the retrieved swaps."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/swaps/list-swaps.d.ts",
															"qualifiedName": "AdminGetSwapsParams"
														},
														"name": "AdminGetSwapsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 3070,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/swaps/index.d.ts",
																			"qualifiedName": "AdminSwapsListRes"
																		},
																		"name": "AdminSwapsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_swaps"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 3071,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 3072,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						3072
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 3073,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 3078,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 3077,
																	"name": "swaps",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/swap.d.ts",
																				"qualifiedName": "Swap"
																			},
																			"name": "Swap",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 3074,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 3075,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 3076,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		3078,
																		3077,
																		3074,
																		3075,
																		3076
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 3079,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 3084,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 3083,
																	"name": "swaps",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/swap.d.ts",
																				"qualifiedName": "Swap"
																			},
																			"name": "Swap",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 3080,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 3081,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 3082,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		3084,
																		3083,
																		3080,
																		3081,
																		3082
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 3085,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 3090,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 3089,
																	"name": "swaps",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/swap.d.ts",
																				"qualifiedName": "Swap"
																			},
																			"name": "Swap",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 3086,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 3087,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 3088,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		3090,
																		3089,
																		3086,
																		3087,
																		3088
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 3091,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 3096,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 3095,
																	"name": "swaps",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/swap.d.ts",
																				"qualifiedName": "Swap"
																			},
																			"name": "Swap",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 3092,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 3093,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 3094,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		3096,
																		3095,
																		3092,
																		3093,
																		3094
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 3097,
									"name": "useAdminSwap",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 3098,
											"name": "useAdminSwap",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a swap's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminSwap } from \"medusa-react\"\n\ntype Props = {\n  swapId: string\n}\n\nconst Swap = ({ swapId }: Props) => {\n  const { swap, isLoading } = useAdminSwap(swapId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {swap && <span>{swap.id}</span>}\n    </div>\n  )\n}\n\nexport default Swap\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 3099,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The swap's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 3100,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/swaps/index.d.ts",
																			"qualifiedName": "AdminSwapsRes"
																		},
																		"name": "AdminSwapsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_swaps"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 3101,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 3103,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 3102,
																	"name": "swap",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/swap.d.ts",
																			"qualifiedName": "Swap"
																		},
																		"name": "Swap",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		3103,
																		3102
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 3104,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 3106,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 3105,
																	"name": "swap",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/swap.d.ts",
																			"qualifiedName": "Swap"
																		},
																		"name": "Swap",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		3106,
																		3105
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 3107,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 3109,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 3108,
																	"name": "swap",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/swap.d.ts",
																			"qualifiedName": "Swap"
																		},
																		"name": "Swap",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		3109,
																		3108
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 3110,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 3112,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 3111,
																	"name": "swap",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/swap.d.ts",
																			"qualifiedName": "Swap"
																		},
																		"name": "Swap",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		3112,
																		3111
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										3113,
										3117,
										3124,
										3131,
										3135,
										3143,
										3067,
										3097
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										3067,
										3097
									]
								},
								{
									"title": "Mutations",
									"children": [
										3113,
										3117,
										3124,
										3131,
										3135,
										3143
									]
								}
							]
						},
						{
							"id": 43,
							"name": "Tax Rates",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin Tax Rate API Routes](https://docs.medusajs.com/api/admin#tax-rates).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 852
									},
									{
										"kind": "text",
										"text": ".\n\nEach region has at least a default tax rate. Admins can create and manage additional tax rates that can be applied for certain conditions, such as for specific product types.\n\nRelated Guide: [How to manage tax rates](https://docs.medusajs.com/modules/taxes/admin/manage-tax-rates)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 3201,
									"name": "useAdminCreateTaxRate",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 3202,
											"name": "useAdminCreateTaxRate",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a tax rate."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateTaxRate } from \"medusa-react\"\n\ntype Props = {\n  regionId: string\n}\n\nconst CreateTaxRate = ({ regionId }: Props) => {\n  const createTaxRate = useAdminCreateTaxRate()\n  // ...\n\n  const handleCreate = (\n    code: string,\n    name: string,\n    rate: number\n  ) => {\n    createTaxRate.mutate({\n      code,\n      name,\n      region_id: regionId,\n      rate,\n    }, {\n      onSuccess: ({ tax_rate }) => {\n        console.log(tax_rate.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateTaxRate\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 3203,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
																			"qualifiedName": "AdminTaxRatesRes"
																		},
																		"name": "AdminTaxRatesRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/create-tax-rate.d.ts",
																	"qualifiedName": "AdminPostTaxRatesReq"
																},
																"name": "AdminPostTaxRatesReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
																	"qualifiedName": "AdminTaxRatesRes"
																},
																"name": "AdminTaxRatesRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/create-tax-rate.d.ts",
															"qualifiedName": "AdminPostTaxRatesReq"
														},
														"name": "AdminPostTaxRatesReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 3204,
									"name": "useAdminUpdateTaxRate",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 3205,
											"name": "useAdminUpdateTaxRate",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a tax rate's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateTaxRate } from \"medusa-react\"\n\ntype Props = {\n  taxRateId: string\n}\n\nconst TaxRate = ({ taxRateId }: Props) => {\n  const updateTaxRate = useAdminUpdateTaxRate(taxRateId)\n  // ...\n\n  const handleUpdate = (\n    name: string\n  ) => {\n    updateTaxRate.mutate({\n      name\n    }, {\n      onSuccess: ({ tax_rate }) => {\n        console.log(tax_rate.name)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default TaxRate\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 3206,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The tax rate's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 3207,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
																			"qualifiedName": "AdminTaxRatesRes"
																		},
																		"name": "AdminTaxRatesRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/update-tax-rate.d.ts",
																	"qualifiedName": "AdminPostTaxRatesTaxRateReq"
																},
																"name": "AdminPostTaxRatesTaxRateReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
																	"qualifiedName": "AdminTaxRatesRes"
																},
																"name": "AdminTaxRatesRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/update-tax-rate.d.ts",
															"qualifiedName": "AdminPostTaxRatesTaxRateReq"
														},
														"name": "AdminPostTaxRatesTaxRateReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 3208,
									"name": "useAdminDeleteTaxRate",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 3209,
											"name": "useAdminDeleteTaxRate",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a tax rate. Resources associated with the tax rate, such as products or product types, are not deleted."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteTaxRate } from \"medusa-react\"\n\ntype Props = {\n  taxRateId: string\n}\n\nconst TaxRate = ({ taxRateId }: Props) => {\n  const deleteTaxRate = useAdminDeleteTaxRate(taxRateId)\n  // ...\n\n  const handleDelete = () => {\n    deleteTaxRate.mutate(void 0, {\n      onSuccess: ({ id, object, deleted }) => {\n        console.log(id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default TaxRate\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 3210,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The tax rate's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 3211,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																			"qualifiedName": "DeleteResponse"
																		},
																		"name": "DeleteResponse",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 3212,
									"name": "useAdminCreateProductTaxRates",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 3213,
											"name": "useAdminCreateProductTaxRates",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook adds products to a tax rate."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateProductTaxRates } from \"medusa-react\"\n\ntype Props = {\n  taxRateId: string\n}\n\nconst TaxRate = ({ taxRateId }: Props) => {\n  const addProduct = useAdminCreateProductTaxRates(taxRateId)\n  // ...\n\n  const handleAddProduct = (productIds: string[]) => {\n    addProduct.mutate({\n      products: productIds,\n    }, {\n      onSuccess: ({ tax_rate }) => {\n        console.log(tax_rate.products)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default TaxRate\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 3214,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The tax rate's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 3215,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
																			"qualifiedName": "AdminTaxRatesRes"
																		},
																		"name": "AdminTaxRatesRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/add-to-products.d.ts",
																	"qualifiedName": "AdminPostTaxRatesTaxRateProductsReq"
																},
																"name": "AdminPostTaxRatesTaxRateProductsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
																	"qualifiedName": "AdminTaxRatesRes"
																},
																"name": "AdminTaxRatesRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/add-to-products.d.ts",
															"qualifiedName": "AdminPostTaxRatesTaxRateProductsReq"
														},
														"name": "AdminPostTaxRatesTaxRateProductsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 3216,
									"name": "useAdminDeleteProductTaxRates",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 3217,
											"name": "useAdminDeleteProductTaxRates",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook removes products from a tax rate. This only removes the association between the products and the tax rate. It does not delete the products."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteProductTaxRates } from \"medusa-react\"\n\ntype Props = {\n  taxRateId: string\n}\n\nconst TaxRate = ({ taxRateId }: Props) => {\n  const removeProduct = useAdminDeleteProductTaxRates(taxRateId)\n  // ...\n\n  const handleRemoveProduct = (productIds: string[]) => {\n    removeProduct.mutate({\n      products: productIds,\n    }, {\n      onSuccess: ({ tax_rate }) => {\n        console.log(tax_rate.products)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default TaxRate\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 3218,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The tax rate's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 3219,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
																			"qualifiedName": "AdminTaxRatesRes"
																		},
																		"name": "AdminTaxRatesRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/remove-from-products.d.ts",
																	"qualifiedName": "AdminDeleteTaxRatesTaxRateProductsReq"
																},
																"name": "AdminDeleteTaxRatesTaxRateProductsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
																	"qualifiedName": "AdminTaxRatesRes"
																},
																"name": "AdminTaxRatesRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/remove-from-products.d.ts",
															"qualifiedName": "AdminDeleteTaxRatesTaxRateProductsReq"
														},
														"name": "AdminDeleteTaxRatesTaxRateProductsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 3220,
									"name": "useAdminCreateProductTypeTaxRates",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 3221,
											"name": "useAdminCreateProductTypeTaxRates",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook adds product types to a tax rate."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminCreateProductTypeTaxRates,\n} from \"medusa-react\"\n\ntype Props = {\n  taxRateId: string\n}\n\nconst TaxRate = ({ taxRateId }: Props) => {\n  const addProductTypes = useAdminCreateProductTypeTaxRates(\n    taxRateId\n  )\n  // ...\n\n  const handleAddProductTypes = (productTypeIds: string[]) => {\n    addProductTypes.mutate({\n      product_types: productTypeIds,\n    }, {\n      onSuccess: ({ tax_rate }) => {\n        console.log(tax_rate.product_types)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default TaxRate\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 3222,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The tax rate's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 3223,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
																			"qualifiedName": "AdminTaxRatesRes"
																		},
																		"name": "AdminTaxRatesRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/add-to-product-types.d.ts",
																	"qualifiedName": "AdminPostTaxRatesTaxRateProductTypesReq"
																},
																"name": "AdminPostTaxRatesTaxRateProductTypesReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
																	"qualifiedName": "AdminTaxRatesRes"
																},
																"name": "AdminTaxRatesRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/add-to-product-types.d.ts",
															"qualifiedName": "AdminPostTaxRatesTaxRateProductTypesReq"
														},
														"name": "AdminPostTaxRatesTaxRateProductTypesReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 3224,
									"name": "useAdminDeleteProductTypeTaxRates",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 3225,
											"name": "useAdminDeleteProductTypeTaxRates",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook removes product types from a tax rate. This only removes the association between the \nproduct types and the tax rate. It does not delete the product types."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { \n  useAdminDeleteProductTypeTaxRates,\n} from \"medusa-react\"\n\ntype Props = {\n  taxRateId: string\n}\n\nconst TaxRate = ({ taxRateId }: Props) => {\n  const removeProductTypes = useAdminDeleteProductTypeTaxRates(\n    taxRateId\n  )\n  // ...\n\n  const handleRemoveProductTypes = (\n    productTypeIds: string[]\n  ) => {\n    removeProductTypes.mutate({\n      product_types: productTypeIds,\n    }, {\n      onSuccess: ({ tax_rate }) => {\n        console.log(tax_rate.product_types)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default TaxRate\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 3226,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The tax rate's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 3227,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
																			"qualifiedName": "AdminTaxRatesRes"
																		},
																		"name": "AdminTaxRatesRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/remove-from-product-types.d.ts",
																	"qualifiedName": "AdminDeleteTaxRatesTaxRateProductTypesReq"
																},
																"name": "AdminDeleteTaxRatesTaxRateProductTypesReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
																	"qualifiedName": "AdminTaxRatesRes"
																},
																"name": "AdminTaxRatesRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/remove-from-product-types.d.ts",
															"qualifiedName": "AdminDeleteTaxRatesTaxRateProductTypesReq"
														},
														"name": "AdminDeleteTaxRatesTaxRateProductTypesReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 3228,
									"name": "useAdminCreateShippingTaxRates",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 3229,
											"name": "useAdminCreateShippingTaxRates",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook adds shipping options to a tax rate."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateShippingTaxRates } from \"medusa-react\"\n\ntype Props = {\n  taxRateId: string\n}\n\nconst TaxRate = ({ taxRateId }: Props) => {\n  const addShippingOption = useAdminCreateShippingTaxRates(\n    taxRateId\n  )\n  // ...\n\n  const handleAddShippingOptions = (\n    shippingOptionIds: string[]\n  ) => {\n    addShippingOption.mutate({\n      shipping_options: shippingOptionIds,\n    }, {\n      onSuccess: ({ tax_rate }) => {\n        console.log(tax_rate.shipping_options)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default TaxRate\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 3230,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The tax rate's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 3231,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
																			"qualifiedName": "AdminTaxRatesRes"
																		},
																		"name": "AdminTaxRatesRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/add-to-shipping-options.d.ts",
																	"qualifiedName": "AdminPostTaxRatesTaxRateShippingOptionsReq"
																},
																"name": "AdminPostTaxRatesTaxRateShippingOptionsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
																	"qualifiedName": "AdminTaxRatesRes"
																},
																"name": "AdminTaxRatesRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/add-to-shipping-options.d.ts",
															"qualifiedName": "AdminPostTaxRatesTaxRateShippingOptionsReq"
														},
														"name": "AdminPostTaxRatesTaxRateShippingOptionsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 3232,
									"name": "useAdminDeleteShippingTaxRates",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 3233,
											"name": "useAdminDeleteShippingTaxRates",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook removes shipping options from a tax rate. This only removes the association between \nthe shipping options and the tax rate. It does not delete the shipping options."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteShippingTaxRates } from \"medusa-react\"\n\ntype Props = {\n  taxRateId: string\n}\n\nconst TaxRate = ({ taxRateId }: Props) => {\n  const removeShippingOptions = useAdminDeleteShippingTaxRates(\n    taxRateId\n  )\n  // ...\n\n  const handleRemoveShippingOptions = (\n    shippingOptionIds: string[]\n  ) => {\n    removeShippingOptions.mutate({\n      shipping_options: shippingOptionIds,\n    }, {\n      onSuccess: ({ tax_rate }) => {\n        console.log(tax_rate.shipping_options)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default TaxRate\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 3234,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The tax rate's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 3235,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
																			"qualifiedName": "AdminTaxRatesRes"
																		},
																		"name": "AdminTaxRatesRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/remove-from-shipping-options.d.ts",
																	"qualifiedName": "AdminDeleteTaxRatesTaxRateShippingOptionsReq"
																},
																"name": "AdminDeleteTaxRatesTaxRateShippingOptionsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
																	"qualifiedName": "AdminTaxRatesRes"
																},
																"name": "AdminTaxRatesRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/remove-from-shipping-options.d.ts",
															"qualifiedName": "AdminDeleteTaxRatesTaxRateShippingOptionsReq"
														},
														"name": "AdminDeleteTaxRatesTaxRateShippingOptionsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 3154,
									"name": "useAdminTaxRates",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 3155,
											"name": "useAdminTaxRates",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of tax rates. The tax rates can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`name`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`rate`"
													},
													{
														"kind": "text",
														"text": " \npassed in the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter. The tax rates can also be paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list tax rates:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminTaxRates } from \"medusa-react\"\n\nconst TaxRates = () => {\n  const { \n    tax_rates, \n    isLoading\n  } = useAdminTaxRates()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {tax_rates && !tax_rates.length && (\n        <span>No Tax Rates</span>\n      )}\n      {tax_rates && tax_rates.length > 0 && (\n        <ul>\n          {tax_rates.map((tax_rate) => (\n            <li key={tax_rate.id}>{tax_rate.code}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default TaxRates\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved within the tax rates:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminTaxRates } from \"medusa-react\"\n\nconst TaxRates = () => {\n  const { \n    tax_rates, \n    isLoading\n  } = useAdminTaxRates({\n    expand: [\"shipping_options\"]\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {tax_rates && !tax_rates.length && (\n        <span>No Tax Rates</span>\n      )}\n      {tax_rates && tax_rates.length > 0 && (\n        <ul>\n          {tax_rates.map((tax_rate) => (\n            <li key={tax_rate.id}>{tax_rate.code}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default TaxRates\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`50`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminTaxRates } from \"medusa-react\"\n\nconst TaxRates = () => {\n  const { \n    tax_rates, \n    limit,\n    offset,\n    isLoading\n  } = useAdminTaxRates({\n    expand: [\"shipping_options\"],\n    limit: 10,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {tax_rates && !tax_rates.length && (\n        <span>No Tax Rates</span>\n      )}\n      {tax_rates && tax_rates.length > 0 && (\n        <ul>\n          {tax_rates.map((tax_rate) => (\n            <li key={tax_rate.id}>{tax_rate.code}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default TaxRates\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 3156,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations applied to the retrieved tax rates."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/list-tax-rates.d.ts",
															"qualifiedName": "AdminGetTaxRatesParams"
														},
														"name": "AdminGetTaxRatesParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 3157,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
																			"qualifiedName": "AdminTaxRatesListRes"
																		},
																		"name": "AdminTaxRatesListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_tax_rates"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 3158,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 3159,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						3159
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 3160,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 3165,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 3164,
																	"name": "tax_rates",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/tax-rate.d.ts",
																				"qualifiedName": "TaxRate"
																			},
																			"name": "TaxRate",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 3161,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 3162,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 3163,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		3165,
																		3164,
																		3161,
																		3162,
																		3163
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 3166,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 3171,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 3170,
																	"name": "tax_rates",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/tax-rate.d.ts",
																				"qualifiedName": "TaxRate"
																			},
																			"name": "TaxRate",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 3167,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 3168,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 3169,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		3171,
																		3170,
																		3167,
																		3168,
																		3169
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 3172,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 3177,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 3176,
																	"name": "tax_rates",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/tax-rate.d.ts",
																				"qualifiedName": "TaxRate"
																			},
																			"name": "TaxRate",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 3173,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 3174,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 3175,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		3177,
																		3176,
																		3173,
																		3174,
																		3175
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 3178,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 3183,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 3182,
																	"name": "tax_rates",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/tax-rate.d.ts",
																				"qualifiedName": "TaxRate"
																			},
																			"name": "TaxRate",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 3179,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 3180,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 3181,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		3183,
																		3182,
																		3179,
																		3180,
																		3181
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 3184,
									"name": "useAdminTaxRate",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 3185,
											"name": "useAdminTaxRate",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a tax rate's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "A simple example that retrieves a tax rate by its ID:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminTaxRate } from \"medusa-react\"\n\ntype Props = {\n  taxRateId: string\n}\n\nconst TaxRate = ({ taxRateId }: Props) => {\n  const { tax_rate, isLoading } = useAdminTaxRate(taxRateId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {tax_rate && <span>{tax_rate.code}</span>}\n    </div>\n  )\n}\n\nexport default TaxRate\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminTaxRate } from \"medusa-react\"\n\nconst TaxRate = (taxRateId: string) => {\n  const { tax_rate, isLoading } = useAdminTaxRate(taxRateId, {\n    expand: [\"shipping_options\"]\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {tax_rate && <span>{tax_rate.code}</span>}\n    </div>\n  )\n}\n\nexport default TaxRate\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 3186,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The tax rate's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 3187,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Configurations to apply on retrieved tax rates."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/list-tax-rates.d.ts",
															"qualifiedName": "AdminGetTaxRatesParams"
														},
														"name": "AdminGetTaxRatesParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 3188,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
																			"qualifiedName": "AdminTaxRatesRes"
																		},
																		"name": "AdminTaxRatesRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_tax_rates"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 3189,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 3191,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 3190,
																	"name": "tax_rate",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/tax-rate.d.ts",
																			"qualifiedName": "TaxRate"
																		},
																		"name": "TaxRate",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		3191,
																		3190
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 3192,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 3194,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 3193,
																	"name": "tax_rate",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/tax-rate.d.ts",
																			"qualifiedName": "TaxRate"
																		},
																		"name": "TaxRate",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		3194,
																		3193
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 3195,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 3197,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 3196,
																	"name": "tax_rate",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/tax-rate.d.ts",
																			"qualifiedName": "TaxRate"
																		},
																		"name": "TaxRate",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		3197,
																		3196
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 3198,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 3200,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 3199,
																	"name": "tax_rate",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/tax-rate.d.ts",
																			"qualifiedName": "TaxRate"
																		},
																		"name": "TaxRate",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		3200,
																		3199
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										3201,
										3204,
										3208,
										3212,
										3216,
										3220,
										3224,
										3228,
										3232,
										3154,
										3184
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										3154,
										3184
									]
								},
								{
									"title": "Mutations",
									"children": [
										3201,
										3204,
										3208,
										3212,
										3216,
										3220,
										3224,
										3228,
										3232
									]
								}
							]
						},
						{
							"id": 44,
							"name": "Uploads",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Mutations listed here are used to send requests to the [Admin Upload API Routes](https://docs.medusajs.com/api/admin#uploads).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 852
									},
									{
										"kind": "text",
										"text": ".\n\nThe methods in this class are used to upload any type of resources. For example, they can be used to upload CSV files that are used to import products into the store.\n\nRelated Guide: [How to upload CSV file when importing a product](https://docs.medusajs.com/modules/products/admin/import-products#1-upload-csv-file)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 3236,
									"name": "useAdminUploadFile",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 3237,
											"name": "useAdminUploadFile",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook uploads a file to a public bucket or storage. The file upload is handled by the file service installed on the Medusa backend."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUploadFile } from \"medusa-react\"\n\nconst UploadFile = () => {\n  const uploadFile = useAdminUploadFile()\n  // ...\n\n  const handleFileUpload = (file: File) => {\n    uploadFile.mutate(file, {\n      onSuccess: ({ uploads }) => {\n        console.log(uploads[0].key)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default UploadFile\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 3238,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/uploads/index.d.ts",
																			"qualifiedName": "AdminUploadsRes"
																		},
																		"name": "AdminUploadsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "AdminCreateUploadPayload"
																},
																"name": "AdminCreateUploadPayload",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/uploads/index.d.ts",
																	"qualifiedName": "AdminUploadsRes"
																},
																"name": "AdminUploadsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "AdminCreateUploadPayload"
														},
														"name": "AdminCreateUploadPayload",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 3239,
									"name": "useAdminUploadProtectedFile",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 3240,
											"name": "useAdminUploadProtectedFile",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook uploads a file to an ACL or a non-public bucket. The file upload is handled by the file service installed on the Medusa backend."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUploadProtectedFile } from \"medusa-react\"\n\nconst UploadFile = () => {\n  const uploadFile = useAdminUploadProtectedFile()\n  // ...\n\n  const handleFileUpload = (file: File) => {\n    uploadFile.mutate(file, {\n      onSuccess: ({ uploads }) => {\n        console.log(uploads[0].key)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default UploadFile\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 3241,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/uploads/index.d.ts",
																			"qualifiedName": "AdminUploadsRes"
																		},
																		"name": "AdminUploadsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "AdminCreateUploadPayload"
																},
																"name": "AdminCreateUploadPayload",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/uploads/index.d.ts",
																	"qualifiedName": "AdminUploadsRes"
																},
																"name": "AdminUploadsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "AdminCreateUploadPayload"
														},
														"name": "AdminCreateUploadPayload",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 3242,
									"name": "useAdminCreatePresignedDownloadUrl",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 3243,
											"name": "useAdminCreatePresignedDownloadUrl",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates and retrieve a presigned or public download URL for a file. The URL creation is handled by the file service installed on the Medusa backend."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreatePresignedDownloadUrl } from \"medusa-react\"\n\nconst Image = () => {\n  const createPresignedUrl = useAdminCreatePresignedDownloadUrl()\n  // ...\n\n  const handlePresignedUrl = (fileKey: string) => {\n    createPresignedUrl.mutate({\n      file_key: fileKey\n    }, {\n      onSuccess: ({ download_url }) => {\n        console.log(download_url)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Image\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 3244,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/uploads/index.d.ts",
																			"qualifiedName": "AdminUploadsDownloadUrlRes"
																		},
																		"name": "AdminUploadsDownloadUrlRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/uploads/get-download-url.d.ts",
																	"qualifiedName": "AdminPostUploadsDownloadUrlReq"
																},
																"name": "AdminPostUploadsDownloadUrlReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/uploads/index.d.ts",
																	"qualifiedName": "AdminUploadsDownloadUrlRes"
																},
																"name": "AdminUploadsDownloadUrlRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/uploads/get-download-url.d.ts",
															"qualifiedName": "AdminPostUploadsDownloadUrlReq"
														},
														"name": "AdminPostUploadsDownloadUrlReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 3245,
									"name": "useAdminDeleteFile",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 3246,
											"name": "useAdminDeleteFile",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes an uploaded file from storage. The file is deleted using the installed file service on the Medusa backend."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteFile } from \"medusa-react\"\n\nconst Image = () => {\n  const deleteFile = useAdminDeleteFile()\n  // ...\n\n  const handleDeleteFile = (fileKey: string) => {\n    deleteFile.mutate({\n      file_key: fileKey\n    }, {\n      onSuccess: ({ id, object, deleted }) => {\n        console.log(id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Image\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 3247,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																			"qualifiedName": "DeleteResponse"
																		},
																		"name": "DeleteResponse",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/uploads/delete-upload.d.ts",
																	"qualifiedName": "AdminDeleteUploadsReq"
																},
																"name": "AdminDeleteUploadsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/uploads/delete-upload.d.ts",
															"qualifiedName": "AdminDeleteUploadsReq"
														},
														"name": "AdminDeleteUploadsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										3236,
										3239,
										3242,
										3245
									]
								}
							],
							"categories": [
								{
									"title": "Mutations",
									"children": [
										3236,
										3239,
										3242,
										3245
									]
								}
							]
						},
						{
							"id": 45,
							"name": "Users",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Admin User API Routes](https://docs.medusajs.com/api/admin#users).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 852
									},
									{
										"kind": "text",
										"text": ".\n\nA store can have more than one user, each having the same privileges. Admins can manage users, their passwords, and more.\n\nRelated Guide: [How to manage users](https://docs.medusajs.com/modules/users/admin/manage-users)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 3283,
									"name": "useAdminCreateUser",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 3284,
											"name": "useAdminCreateUser",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates an admin user. The user has the same privileges as all admin users, and will be able to \nauthenticate and perform admin functionalities right after creation."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminCreateUser } from \"medusa-react\"\n\nconst CreateUser = () => {\n  const createUser = useAdminCreateUser()\n  // ...\n\n  const handleCreateUser = () => {\n    createUser.mutate({\n      email: \"user@example.com\",\n      password: \"supersecret\",\n    }, {\n      onSuccess: ({ user }) => {\n        console.log(user.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateUser\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 3285,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/users/index.d.ts",
																			"qualifiedName": "AdminUserRes"
																		},
																		"name": "AdminUserRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "AdminCreateUserPayload"
																},
																"name": "AdminCreateUserPayload",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/users/index.d.ts",
																	"qualifiedName": "AdminUserRes"
																},
																"name": "AdminUserRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "AdminCreateUserPayload"
														},
														"name": "AdminCreateUserPayload",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 3286,
									"name": "useAdminUpdateUser",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 3287,
											"name": "useAdminUpdateUser",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates an admin user's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUpdateUser } from \"medusa-react\"\n\ntype Props = {\n  userId: string\n}\n\nconst User = ({ userId }: Props) => {\n  const updateUser = useAdminUpdateUser(userId)\n  // ...\n\n  const handleUpdateUser = (\n    firstName: string\n  ) => {\n    updateUser.mutate({\n      first_name: firstName,\n    }, {\n      onSuccess: ({ user }) => {\n        console.log(user.first_name)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default User\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 3288,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The user's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 3289,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/users/index.d.ts",
																			"qualifiedName": "AdminUserRes"
																		},
																		"name": "AdminUserRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "AdminUpdateUserPayload"
																},
																"name": "AdminUpdateUserPayload",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/users/index.d.ts",
																	"qualifiedName": "AdminUserRes"
																},
																"name": "AdminUserRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "AdminUpdateUserPayload"
														},
														"name": "AdminUpdateUserPayload",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 3290,
									"name": "useAdminDeleteUser",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 3291,
											"name": "useAdminDeleteUser",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a user. Once deleted, the user will not be able to authenticate or perform admin functionalities."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminDeleteUser } from \"medusa-react\"\n\ntype Props = {\n  userId: string\n}\n\nconst User = ({ userId }: Props) => {\n  const deleteUser = useAdminDeleteUser(userId)\n  // ...\n\n  const handleDeleteUser = () => {\n    deleteUser.mutate(void 0, {\n      onSuccess: ({ id, object, deleted }) => {\n        console.log(id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default User\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 3292,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The user's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 3293,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																			"qualifiedName": "DeleteResponse"
																		},
																		"name": "DeleteResponse",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
																	"qualifiedName": "DeleteResponse"
																},
																"name": "DeleteResponse",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 3294,
									"name": "useAdminResetPassword",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 3295,
											"name": "useAdminResetPassword",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook resets the password of an admin user using their reset password token. You must generate a reset password token first \nfor the user using the "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "useAdminSendResetPasswordToken",
														"target": 3297,
														"tsLinkText": ""
													},
													{
														"kind": "text",
														"text": " hook, then use that token to reset the password in this hook."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminResetPassword } from \"medusa-react\"\n\nconst ResetPassword = () => {\n  const resetPassword = useAdminResetPassword()\n  // ...\n\n  const handleResetPassword = (\n    token: string,\n    password: string\n  ) => {\n    resetPassword.mutate({\n      token,\n      password,\n    }, {\n      onSuccess: ({ user }) => {\n        console.log(user.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default ResetPassword\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 3296,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/users/index.d.ts",
																			"qualifiedName": "AdminUserRes"
																		},
																		"name": "AdminUserRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/users/reset-password.d.ts",
																	"qualifiedName": "AdminResetPasswordRequest"
																},
																"name": "AdminResetPasswordRequest",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/users/index.d.ts",
																	"qualifiedName": "AdminUserRes"
																},
																"name": "AdminUserRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/users/reset-password.d.ts",
															"qualifiedName": "AdminResetPasswordRequest"
														},
														"name": "AdminResetPasswordRequest",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 3297,
									"name": "useAdminSendResetPasswordToken",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 3298,
											"name": "useAdminSendResetPasswordToken",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook generates a password token for an admin user with a given email. This also triggers the "
													},
													{
														"kind": "code",
														"text": "`user.password_reset`"
													},
													{
														"kind": "text",
														"text": " event. So, if you have a Notification Service installed\nthat can handle this event, a notification, such as an email, will be sent to the user. The token is triggered as part of the "
													},
													{
														"kind": "code",
														"text": "`user.password_reset`"
													},
													{
														"kind": "text",
														"text": " event's payload. \nThat token must be used later to reset the password using the "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "useAdminResetPassword",
														"target": 3294,
														"tsLinkText": ""
													},
													{
														"kind": "text",
														"text": " hook."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminSendResetPasswordToken } from \"medusa-react\"\n\nconst Login = () => {\n  const requestPasswordReset = useAdminSendResetPasswordToken()\n  // ...\n\n  const handleResetPassword = (\n    email: string\n  ) => {\n    requestPasswordReset.mutate({\n      email\n    }, {\n      onSuccess: () => {\n        // successful\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Login\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 3299,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/users/reset-password-token.d.ts",
																	"qualifiedName": "AdminResetPasswordTokenRequest"
																},
																"name": "AdminResetPasswordTokenRequest",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/users/reset-password-token.d.ts",
															"qualifiedName": "AdminResetPasswordTokenRequest"
														},
														"name": "AdminResetPasswordTokenRequest",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 3249,
									"name": "useAdminUsers",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 3250,
											"name": "useAdminUsers",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves all admin users."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list users:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminUsers } from \"medusa-react\"\n\nconst Users = () => {\n  const { users, isLoading } = useAdminUsers()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {users && !users.length && <span>No Users</span>}\n      {users && users.length > 0 && (\n        <ul>\n          {users.map((user) => (\n            <li key={user.id}>{user.email}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Users\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`20`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminUsers } from \"medusa-react\"\n\nconst Users = () => {\n  const {\n    users,\n    limit,\n    offset,\n    isLoading\n  } = useAdminUsers({\n    limit: 20,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {users && !users.length && <span>No Users</span>}\n      {users && users.length > 0 && (\n        <ul>\n          {users.map((user) => (\n            <li key={user.id}>{user.email}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Users\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 3251,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/users/list-users.d.ts",
															"qualifiedName": "AdminGetUsersParams"
														},
														"name": "AdminGetUsersParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 3252,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/users/index.d.ts",
																			"qualifiedName": "AdminUsersListRes"
																		},
																		"name": "AdminUsersListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_users"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 3253,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 3254,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						3254
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 3255,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 3257,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 3256,
																	"name": "users",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																				"qualifiedName": "Omit"
																			},
																			"typeArguments": [
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/medusa/dist/models/user.d.ts",
																						"qualifiedName": "User"
																					},
																					"name": "User",
																					"package": "@medusajs/medusa"
																				},
																				{
																					"type": "literal",
																					"value": "password_hash"
																				}
																			],
																			"name": "Omit",
																			"package": "typescript"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		3257,
																		3256
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 3258,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 3260,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 3259,
																	"name": "users",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																				"qualifiedName": "Omit"
																			},
																			"typeArguments": [
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/medusa/dist/models/user.d.ts",
																						"qualifiedName": "User"
																					},
																					"name": "User",
																					"package": "@medusajs/medusa"
																				},
																				{
																					"type": "literal",
																					"value": "password_hash"
																				}
																			],
																			"name": "Omit",
																			"package": "typescript"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		3260,
																		3259
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 3261,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 3263,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 3262,
																	"name": "users",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																				"qualifiedName": "Omit"
																			},
																			"typeArguments": [
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/medusa/dist/models/user.d.ts",
																						"qualifiedName": "User"
																					},
																					"name": "User",
																					"package": "@medusajs/medusa"
																				},
																				{
																					"type": "literal",
																					"value": "password_hash"
																				}
																			],
																			"name": "Omit",
																			"package": "typescript"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		3263,
																		3262
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 3264,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 3266,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 3265,
																	"name": "users",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																				"qualifiedName": "Omit"
																			},
																			"typeArguments": [
																				{
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../packages/medusa/dist/models/user.d.ts",
																						"qualifiedName": "User"
																					},
																					"name": "User",
																					"package": "@medusajs/medusa"
																				},
																				{
																					"type": "literal",
																					"value": "password_hash"
																				}
																			],
																			"name": "Omit",
																			"package": "typescript"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		3266,
																		3265
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 3267,
									"name": "useAdminUser",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 3268,
											"name": "useAdminUser",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves an admin user's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminUser } from \"medusa-react\"\n\ntype Props = {\n  userId: string\n}\n\nconst User = ({ userId }: Props) => {\n  const { user, isLoading } = useAdminUser(\n    userId\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {user && <span>{user.first_name} {user.last_name}</span>}\n    </div>\n  )\n}\n\nexport default User\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 3269,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The user's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 3270,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/users/index.d.ts",
																			"qualifiedName": "AdminUserRes"
																		},
																		"name": "AdminUserRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_users"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 3271,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 3273,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 3272,
																	"name": "user",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa/dist/models/user.d.ts",
																					"qualifiedName": "User"
																				},
																				"name": "User",
																				"package": "@medusajs/medusa"
																			},
																			{
																				"type": "literal",
																				"value": "password_hash"
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		3273,
																		3272
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 3274,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 3276,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 3275,
																	"name": "user",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa/dist/models/user.d.ts",
																					"qualifiedName": "User"
																				},
																				"name": "User",
																				"package": "@medusajs/medusa"
																			},
																			{
																				"type": "literal",
																				"value": "password_hash"
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		3276,
																		3275
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 3277,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 3279,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 3278,
																	"name": "user",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa/dist/models/user.d.ts",
																					"qualifiedName": "User"
																				},
																				"name": "User",
																				"package": "@medusajs/medusa"
																			},
																			{
																				"type": "literal",
																				"value": "password_hash"
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		3279,
																		3278
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 3280,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 3282,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 3281,
																	"name": "user",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa/dist/models/user.d.ts",
																					"qualifiedName": "User"
																				},
																				"name": "User",
																				"package": "@medusajs/medusa"
																			},
																			{
																				"type": "literal",
																				"value": "password_hash"
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		3282,
																		3281
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										3283,
										3286,
										3290,
										3294,
										3297,
										3249,
										3267
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										3249,
										3267
									]
								},
								{
									"title": "Mutations",
									"children": [
										3283,
										3286,
										3290,
										3294,
										3297
									]
								}
							]
						},
						{
							"id": 46,
							"name": "Product Variants",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries listed here are used to send requests to the [Admin Product Variant API Routes](https://docs.medusajs.com/api/admin#product-variants).\n\nAll hooks listed require "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "user authentication",
										"target": 852
									},
									{
										"kind": "text",
										"text": ".\n\nProduct variants are the actual salable item in your store. Each variant is a combination of the different option values available on the product.\n\nRelated Guide: [How to manage product variants](https://docs.medusajs.com/modules/products/admin/manage-products#manage-product-variants)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 3301,
									"name": "useAdminVariants",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 3302,
											"name": "useAdminVariants",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of product variants. The product variant can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`id`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`title`"
													},
													{
														"kind": "text",
														"text": " \npassed in the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter. The product variant can also be paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list product variants:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminVariants } from \"medusa-react\"\n\nconst Variants = () => {\n  const { variants, isLoading } = useAdminVariants()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {variants && !variants.length && (\n        <span>No Variants</span>\n      )}\n      {variants && variants.length > 0 && (\n        <ul>\n          {variants.map((variant) => (\n            <li key={variant.id}>{variant.title}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Variants\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved within the product variants:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminVariants } from \"medusa-react\"\n\nconst Variants = () => {\n  const { variants, isLoading } = useAdminVariants({\n    expand: \"options\"\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {variants && !variants.length && (\n        <span>No Variants</span>\n      )}\n      {variants && variants.length > 0 && (\n        <ul>\n          {variants.map((variant) => (\n            <li key={variant.id}>{variant.title}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Variants\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`100`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminVariants } from \"medusa-react\"\n\nconst Variants = () => {\n  const { \n    variants, \n    limit,\n    offset,\n    isLoading\n  } = useAdminVariants({\n    expand: \"options\",\n    limit: 50,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {variants && !variants.length && (\n        <span>No Variants</span>\n      )}\n      {variants && variants.length > 0 && (\n        <ul>\n          {variants.map((variant) => (\n            <li key={variant.id}>{variant.title}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Variants\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 3303,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved product variants."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/variants/list-variants.d.ts",
															"qualifiedName": "AdminGetVariantsParams"
														},
														"name": "AdminGetVariantsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 3304,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/variants/index.d.ts",
																			"qualifiedName": "AdminVariantsListRes"
																		},
																		"name": "AdminVariantsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_variants"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 3305,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 3306,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						3306
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 3307,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 3312,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 3311,
																	"name": "variants",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																				"qualifiedName": "PricedVariant"
																			},
																			"name": "PricedVariant",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 3308,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 3309,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 3310,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		3312,
																		3311,
																		3308,
																		3309,
																		3310
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 3313,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 3318,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 3317,
																	"name": "variants",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																				"qualifiedName": "PricedVariant"
																			},
																			"name": "PricedVariant",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 3314,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 3315,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 3316,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		3318,
																		3317,
																		3314,
																		3315,
																		3316
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 3319,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 3324,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 3323,
																	"name": "variants",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																				"qualifiedName": "PricedVariant"
																			},
																			"name": "PricedVariant",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 3320,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 3321,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 3322,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		3324,
																		3323,
																		3320,
																		3321,
																		3322
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 3325,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 3330,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 3329,
																	"name": "variants",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																				"qualifiedName": "PricedVariant"
																			},
																			"name": "PricedVariant",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 3326,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 3327,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 3328,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		3330,
																		3329,
																		3326,
																		3327,
																		3328
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 3331,
									"name": "useAdminVariant",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 3332,
											"name": "useAdminVariant",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a product variant's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "A simple example that retrieves a product variant by its ID:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminVariant } from \"medusa-react\"\n\ntype Props = {\n  variantId: string\n}\n\nconst Variant = ({ variantId }: Props) => {\n  const { variant, isLoading } = useAdminVariant(\n    variantId\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {variant && <span>{variant.title}</span>}\n    </div>\n  )\n}\n\nexport default Variant\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useAdminVariant } from \"medusa-react\"\n\ntype Props = {\n  variantId: string\n}\n\nconst Variant = ({ variantId }: Props) => {\n  const { variant, isLoading } = useAdminVariant(\n    variantId, {\n      expand: \"options\"\n    }\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {variant && <span>{variant.title}</span>}\n    </div>\n  )\n}\n\nexport default Variant\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 3333,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product variant's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 3334,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Configurations to apply on the retrieved product variant."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/variants/get-variant.d.ts",
															"qualifiedName": "AdminGetVariantParams"
														},
														"name": "AdminGetVariantParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 3335,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/variants/index.d.ts",
																			"qualifiedName": "AdminVariantsRes"
																		},
																		"name": "AdminVariantsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_variants"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 3336,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 3338,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 3337,
																	"name": "variant",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																			"qualifiedName": "PricedVariant"
																		},
																		"name": "PricedVariant",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		3338,
																		3337
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 3339,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 3341,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 3340,
																	"name": "variant",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																			"qualifiedName": "PricedVariant"
																		},
																		"name": "PricedVariant",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		3341,
																		3340
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 3342,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 3344,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 3343,
																	"name": "variant",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																			"qualifiedName": "PricedVariant"
																		},
																		"name": "PricedVariant",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		3344,
																		3343
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 3345,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 3347,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 3346,
																	"name": "variant",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																			"qualifiedName": "PricedVariant"
																		},
																		"name": "PricedVariant",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		3347,
																		3346
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 3348,
									"name": "useAdminVariantsInventory",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 3349,
											"name": "useAdminVariantsInventory",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves the available inventory of a product variant."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAdminVariantsInventory } from \"medusa-react\"\n\ntype Props = {\n  variantId: string\n}\n\nconst VariantInventory = ({ variantId }: Props) => {\n  const { variant, isLoading } = useAdminVariantsInventory(\n    variantId\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {variant && variant.inventory.length === 0 && (\n        <span>Variant doesn't have inventory details</span>\n      )}\n      {variant && variant.inventory.length > 0 && (\n        <ul>\n          {variant.inventory.map((inventory) => (\n            <li key={inventory.id}>{inventory.title}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default VariantInventory\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 3350,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product variant's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 3351,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/variants/get-inventory.d.ts",
																			"qualifiedName": "AdminGetVariantsVariantInventoryRes"
																		},
																		"name": "AdminGetVariantsVariantInventoryRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "admin_variants"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 3352,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 3354,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 3353,
																	"name": "variant",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/variants/get-inventory.d.ts",
																			"qualifiedName": "VariantInventory"
																		},
																		"name": "VariantInventory",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		3354,
																		3353
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 3355,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 3357,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 3356,
																	"name": "variant",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/variants/get-inventory.d.ts",
																			"qualifiedName": "VariantInventory"
																		},
																		"name": "VariantInventory",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		3357,
																		3356
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 3358,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 3360,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 3359,
																	"name": "variant",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/variants/get-inventory.d.ts",
																			"qualifiedName": "VariantInventory"
																		},
																		"name": "VariantInventory",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		3360,
																		3359
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 3361,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 3363,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 3362,
																	"name": "variant",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/variants/get-inventory.d.ts",
																			"qualifiedName": "VariantInventory"
																		},
																		"name": "VariantInventory",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		3363,
																		3362
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										3301,
										3331,
										3348
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										3301,
										3331,
										3348
									]
								}
							]
						}
					],
					"groups": [
						{
							"title": "Namespaces",
							"children": [
								8,
								9,
								10,
								11,
								12,
								13,
								14,
								15,
								16,
								17,
								18,
								19,
								20,
								21,
								22,
								23,
								24,
								25,
								26,
								27,
								28,
								29,
								30,
								31,
								32,
								33,
								34,
								35,
								36,
								37,
								38,
								39,
								40,
								41,
								42,
								43,
								44,
								45,
								46
							]
						}
					]
				},
				{
					"id": 47,
					"name": "Store",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@namespaceMember"
						]
					},
					"children": [
						{
							"id": 48,
							"name": "Carts",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Store Cart API Routes](https://docs.medusajs.com/api/store#carts).\n\nA cart is a virtual shopping bag that customers can use to add items they want to purchase.\nA cart is then used to checkout and place an order.\n\nThe hooks listed have general examples on how to use them, but it's highly recommended to use the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "CartProvider",
										"target": 174
									},
									{
										"kind": "text",
										"text": " provider and\nthe "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "useCart",
										"target": 169
									},
									{
										"kind": "text",
										"text": " hook to manage your cart and access the current cart across your application.\n\nRelated Guide: [How to implement cart functionality in your storefront](https://docs.medusajs.com/modules/carts-and-checkout/storefront/implement-cart)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 195,
									"name": "useCreateCart",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 196,
											"name": "useCreateCart",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a Cart. Although optional, specifying the cart's region and sales channel can affect the cart's pricing and\nthe products that can be added to the cart respectively.\n\nSo, make sure to set those early on and change them if necessary, such as when the customer changes their region.\n\nIf a customer is logged in, make sure to pass its ID or email within the cart's details so that the cart is attached to the customer."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useCreateCart } from \"medusa-react\"\n\ntype Props = {\n  regionId: string\n}\n\nconst Cart = ({ regionId }: Props) => {\n  const createCart = useCreateCart()\n\n  const handleCreate = () => {\n    createCart.mutate({\n      region_id: regionId\n      // creates an empty cart\n    }, {\n      onSuccess: ({ cart }) => {\n        console.log(cart.items)\n      }\n    })\n  }\n  \n  // ...\n}\n\nexport default Cart\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 197,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/create-cart.d.ts",
																			"qualifiedName": "StorePostCartReq"
																		},
																		"name": "StorePostCartReq",
																		"package": "@medusajs/medusa"
																	}
																]
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/create-cart.d.ts",
																	"qualifiedName": "StorePostCartReq"
																},
																"name": "StorePostCartReq",
																"package": "@medusajs/medusa"
															}
														]
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 198,
									"name": "useUpdateCart",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 199,
											"name": "useUpdateCart",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a Cart's details. If the cart has payment sessions and the region was not changed, \nthe payment sessions are updated. The cart's totals are also recalculated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useUpdateCart } from \"medusa-react\"\n\ntype Props = {\n  cartId: string\n}\n\nconst Cart = ({ cartId }: Props) => {\n  const updateCart = useUpdateCart(cartId)\n\n  const handleUpdate = (\n    email: string\n  ) => {\n    updateCart.mutate({\n      email\n    }, {\n      onSuccess: ({ cart }) => {\n        console.log(cart.email)\n      }\n    })\n  }\n  \n  // ...\n}\n\nexport default Cart\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 200,
													"name": "cartId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The cart's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 201,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/update-cart.d.ts",
																	"qualifiedName": "StorePostCartsCartReq"
																},
																"name": "StorePostCartsCartReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/update-cart.d.ts",
															"qualifiedName": "StorePostCartsCartReq"
														},
														"name": "StorePostCartsCartReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 202,
									"name": "useCompleteCart",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 203,
											"name": "useCompleteCart",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook completes a cart and place an order or create a swap, based on the cart's type. This includes attempting to authorize the cart's payment.\nIf authorizing the payment requires more action, the cart will not be completed and the order will not be placed or the swap will not be created.\nAn idempotency key will be generated if none is provided in the header "
													},
													{
														"kind": "code",
														"text": "`Idempotency-Key`"
													},
													{
														"kind": "text",
														"text": " and added to\nthe response. If an error occurs during cart completion or the request is interrupted for any reason, the cart completion can be retried by passing the idempotency\nkey in the "
													},
													{
														"kind": "code",
														"text": "`Idempotency-Key`"
													},
													{
														"kind": "text",
														"text": " header."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useCompleteCart } from \"medusa-react\"\n\ntype Props = {\n  cartId: string\n}\n\nconst Cart = ({ cartId }: Props) => {\n  const completeCart = useCompleteCart(cartId)\n\n  const handleComplete = () => {\n    completeCart.mutate(void 0, {\n      onSuccess: ({ data, type }) => {\n        console.log(data.id, type)\n      }\n    })\n  }\n  \n  // ...\n}\n\nexport default Cart\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 204,
													"name": "cartId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The cart's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 205,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCompleteCartRes"
																},
																"name": "StoreCompleteCartRes",
																"package": "@medusajs/medusa"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCompleteCartRes"
																},
																"name": "StoreCompleteCartRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 206,
									"name": "useCreatePaymentSession",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 207,
											"name": "useCreatePaymentSession",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates Payment Sessions for each of the available Payment Providers in the Cart's Region. If there's only one payment session created,\nit will be selected by default. The creation of the payment session uses the payment provider and may require sending requests to third-party services."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useCreatePaymentSession } from \"medusa-react\"\n\ntype Props = {\n  cartId: string\n}\n\nconst Cart = ({ cartId }: Props) => {\n  const createPaymentSession = useCreatePaymentSession(cartId)\n\n  const handleComplete = () => {\n    createPaymentSession.mutate(void 0, {\n      onSuccess: ({ cart }) => {\n        console.log(cart.payment_sessions)\n      }\n    })\n  }\n  \n  // ...\n}\n\nexport default Cart\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 208,
													"name": "cartId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The cart's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 209,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 213,
									"name": "useUpdatePaymentSession",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 214,
											"name": "useUpdatePaymentSession",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a Payment Session with additional data. This can be useful depending on the payment provider used.\nAll payment sessions are updated and cart totals are recalculated afterwards."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useUpdatePaymentSession } from \"medusa-react\"\n\ntype Props = {\n  cartId: string\n}\n\nconst Cart = ({ cartId }: Props) => {\n  const updatePaymentSession = useUpdatePaymentSession(cartId)\n\n  const handleUpdate = (\n    providerId: string,\n    data: Record<string, unknown>\n  ) => {\n    updatePaymentSession.mutate({\n      provider_id: providerId,\n      data\n    }, {\n      onSuccess: ({ cart }) => {\n        console.log(cart.payment_session)\n      }\n    })\n  }\n  \n  // ...\n}\n\nexport default Cart\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 215,
													"name": "cartId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The cart's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 216,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": 210,
																"name": "UpdatePaymentSessionReq",
																"package": "medusa-react"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": 210,
														"name": "UpdatePaymentSessionReq",
														"package": "medusa-react"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 220,
									"name": "useRefreshPaymentSession",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 221,
											"name": "useRefreshPaymentSession",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook refreshes a Payment Session to ensure that it is in sync with the Cart. This is usually not necessary, but is provided for edge cases."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useRefreshPaymentSession } from \"medusa-react\"\n\ntype Props = {\n  cartId: string\n}\n\nconst Cart = ({ cartId }: Props) => {\n  const refreshPaymentSession = useRefreshPaymentSession(cartId)\n\n  const handleRefresh = (\n    providerId: string\n  ) => {\n    refreshPaymentSession.mutate({\n      provider_id: providerId,\n    }, {\n      onSuccess: ({ cart }) => {\n        console.log(cart.payment_sessions)\n      }\n    })\n  }\n  \n  // ...\n}\n\nexport default Cart\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 222,
													"name": "cartId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The cart's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 223,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": 217,
																"name": "RefreshPaymentSessionMutationData",
																"package": "medusa-react"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": 217,
														"name": "RefreshPaymentSessionMutationData",
														"package": "medusa-react"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 224,
									"name": "useSetPaymentSession",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 225,
											"name": "useSetPaymentSession",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook selects the Payment Session that will be used to complete the cart. This is typically used when the customer chooses their preferred payment method during checkout.\nThe totals of the cart will be recalculated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useSetPaymentSession } from \"medusa-react\"\n\ntype Props = {\n  cartId: string\n}\n\nconst Cart = ({ cartId }: Props) => {\n  const setPaymentSession = useSetPaymentSession(cartId)\n\n  const handleSetPaymentSession = (\n    providerId: string\n  ) => {\n    setPaymentSession.mutate({\n      provider_id: providerId,\n    }, {\n      onSuccess: ({ cart }) => {\n        console.log(cart.payment_session)\n      }\n    })\n  }\n  \n  // ...\n}\n\nexport default Cart\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 226,
													"name": "cartId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The cart's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 227,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/set-payment-session.d.ts",
																	"qualifiedName": "StorePostCartsCartPaymentSessionReq"
																},
																"name": "StorePostCartsCartPaymentSessionReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/set-payment-session.d.ts",
															"qualifiedName": "StorePostCartsCartPaymentSessionReq"
														},
														"name": "StorePostCartsCartPaymentSessionReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 228,
									"name": "useAddShippingMethodToCart",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 229,
											"name": "useAddShippingMethodToCart",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook adds a shipping method to the cart. The validation of the "
													},
													{
														"kind": "code",
														"text": "`data`"
													},
													{
														"kind": "text",
														"text": " field is handled by the fulfillment provider of the chosen shipping option."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAddShippingMethodToCart } from \"medusa-react\"\n\ntype Props = {\n  cartId: string\n}\n\nconst Cart = ({ cartId }: Props) => {\n  const addShippingMethod = useAddShippingMethodToCart(cartId)\n\n  const handleAddShippingMethod = (\n    optionId: string\n  ) => {\n    addShippingMethod.mutate({\n      option_id: optionId,\n    }, {\n      onSuccess: ({ cart }) => {\n        console.log(cart.shipping_methods)\n      }\n    })\n  }\n  \n  // ...\n}\n\nexport default Cart\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 230,
													"name": "cartId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The cart's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 231,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/add-shipping-method.d.ts",
																	"qualifiedName": "StorePostCartsCartShippingMethodReq"
																},
																"name": "StorePostCartsCartShippingMethodReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/add-shipping-method.d.ts",
															"qualifiedName": "StorePostCartsCartShippingMethodReq"
														},
														"name": "StorePostCartsCartShippingMethodReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 235,
									"name": "useDeletePaymentSession",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 236,
											"name": "useDeletePaymentSession",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a Payment Session in a Cart. May be useful if a payment has failed. The totals will be recalculated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useDeletePaymentSession } from \"medusa-react\"\n\ntype Props = {\n  cartId: string\n}\n\nconst Cart = ({ cartId }: Props) => {\n  const deletePaymentSession = useDeletePaymentSession(cartId)\n\n  const handleDeletePaymentSession = (\n    providerId: string\n  ) => {\n    deletePaymentSession.mutate({\n      provider_id: providerId,\n    }, {\n      onSuccess: ({ cart }) => {\n        console.log(cart.payment_sessions)\n      }\n    })\n  }\n  \n  // ...\n}\n\nexport default Cart\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 237,
													"name": "cartId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The cart's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 238,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": 232,
																"name": "DeletePaymentSessionMutationData",
																"package": "medusa-react"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": 232,
														"name": "DeletePaymentSessionMutationData",
														"package": "medusa-react"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 239,
									"name": "useStartCheckout",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 240,
											"name": "useStartCheckout",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook allows you to create a cart and set its payment session as a preparation for checkout.\nIt performs the same actions as the "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "useCreateCart",
														"target": 195,
														"tsLinkText": ""
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "useCreatePaymentSession",
														"target": 206,
														"tsLinkText": ""
													},
													{
														"kind": "text",
														"text": " hooks."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useStartCheckout } from \"medusa-react\"\n\ntype Props = {\n  regionId: string\n}\n\nconst Checkout = ({ regionId }: Props) => {\n  const startCheckout = useStartCheckout()\n\n  const handleCheckout = () => {\n    startCheckout.mutate({\n      region_id: regionId,\n    }, {\n      onSuccess: (cart) => {\n        console.log(cart.payment_sessions)\n      }\n    })\n  }\n  \n  // ...\n}\n\nexport default Checkout\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 241,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Omit"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/cart.d.ts",
																			"qualifiedName": "Cart"
																		},
																		"name": "Cart",
																		"package": "@medusajs/medusa"
																	},
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": "refundable_amount"
																			},
																			{
																				"type": "literal",
																				"value": "refunded_total"
																			}
																		]
																	}
																],
																"name": "Omit",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/create-cart.d.ts",
																	"qualifiedName": "StorePostCartReq"
																},
																"name": "StorePostCartReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Omit"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/models/cart.d.ts",
																	"qualifiedName": "Cart"
																},
																"name": "Cart",
																"package": "@medusajs/medusa"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "refundable_amount"
																	},
																	{
																		"type": "literal",
																		"value": "refunded_total"
																	}
																]
															}
														],
														"name": "Omit",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/create-cart.d.ts",
															"qualifiedName": "StorePostCartReq"
														},
														"name": "StorePostCartReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 178,
									"name": "useGetCart",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 179,
											"name": "useGetCart",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a Cart's details. This includes recalculating its totals."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useGetCart } from \"medusa-react\"\n\ntype Props = {\n  cartId: string\n}\n\nconst Cart = ({ cartId }: Props) => {\n  const { cart, isLoading } = useGetCart(cartId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {cart && cart.items.length === 0 && (\n        <span>Cart is empty</span>\n      )}\n      {cart && cart.items.length > 0 && (\n        <ul>\n          {cart.items.map((item) => (\n            <li key={item.id}>{item.title}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Cart\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 180,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The cart's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 181,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																			"qualifiedName": "StoreCartsRes"
																		},
																		"name": "StoreCartsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "carts"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 182,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 184,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 183,
																	"name": "cart",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa/dist/models/cart.d.ts",
																					"qualifiedName": "Cart"
																				},
																				"name": "Cart",
																				"package": "@medusajs/medusa"
																			},
																			{
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": "refundable_amount"
																					},
																					{
																						"type": "literal",
																						"value": "refunded_total"
																					}
																				]
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		184,
																		183
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 185,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 187,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 186,
																	"name": "cart",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa/dist/models/cart.d.ts",
																					"qualifiedName": "Cart"
																				},
																				"name": "Cart",
																				"package": "@medusajs/medusa"
																			},
																			{
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": "refundable_amount"
																					},
																					{
																						"type": "literal",
																						"value": "refunded_total"
																					}
																				]
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		187,
																		186
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 188,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 190,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 189,
																	"name": "cart",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa/dist/models/cart.d.ts",
																					"qualifiedName": "Cart"
																				},
																				"name": "Cart",
																				"package": "@medusajs/medusa"
																			},
																			{
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": "refundable_amount"
																					},
																					{
																						"type": "literal",
																						"value": "refunded_total"
																					}
																				]
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		190,
																		189
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 191,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 193,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 192,
																	"name": "cart",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa/dist/models/cart.d.ts",
																					"qualifiedName": "Cart"
																				},
																				"name": "Cart",
																				"package": "@medusajs/medusa"
																			},
																			{
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": "refundable_amount"
																					},
																					{
																						"type": "literal",
																						"value": "refunded_total"
																					}
																				]
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		193,
																		192
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										195,
										198,
										202,
										206,
										213,
										220,
										224,
										228,
										235,
										239,
										178
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										178
									]
								},
								{
									"title": "Mutations",
									"children": [
										195,
										198,
										202,
										206,
										213,
										220,
										224,
										228,
										235,
										239
									]
								}
							]
						},
						{
							"id": 49,
							"name": "Product Collections",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries listed here are used to send requests to the [Store Product Collection API Routes](https://docs.medusajs.com/api/store#product-collections).\n\nA product collection is used to organize products for different purposes such as marketing or discount purposes. For example, you can create a Summer Collection.\nUsing the methods in this class, you can list or retrieve a collection's details and products."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 243,
									"name": "useCollection",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 244,
											"name": "useCollection",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a product collection's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useCollection } from \"medusa-react\"\n\ntype Props = {\n  collectionId: string\n}\n\nconst ProductCollection = ({ collectionId }: Props) => {\n  const { collection, isLoading } = useCollection(collectionId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {collection && <span>{collection.title}</span>}\n    </div>\n  )\n}\n\nexport default ProductCollection\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 245,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product collection's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 246,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/collections/index.d.ts",
																			"qualifiedName": "StoreCollectionsRes"
																		},
																		"name": "StoreCollectionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "collections"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 247,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 249,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 248,
																	"name": "collection",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/product-collection.d.ts",
																			"qualifiedName": "ProductCollection"
																		},
																		"name": "ProductCollection",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		249,
																		248
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 250,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 252,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 251,
																	"name": "collection",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/product-collection.d.ts",
																			"qualifiedName": "ProductCollection"
																		},
																		"name": "ProductCollection",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		252,
																		251
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 253,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 255,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 254,
																	"name": "collection",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/product-collection.d.ts",
																			"qualifiedName": "ProductCollection"
																		},
																		"name": "ProductCollection",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		255,
																		254
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 256,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 258,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 257,
																	"name": "collection",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/product-collection.d.ts",
																			"qualifiedName": "ProductCollection"
																		},
																		"name": "ProductCollection",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		258,
																		257
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 259,
									"name": "useCollections",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 260,
											"name": "useCollections",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of product collections. The product collections can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`handle`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`created_at`"
													},
													{
														"kind": "text",
														"text": " passed in the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter. \nThe product collections can also be paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list product collections:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useCollections } from \"medusa-react\"\n\nconst ProductCollections = () => {\n  const { collections, isLoading } = useCollections()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {collections && collections.length === 0 && (\n        <span>No Product Collections</span>\n      )}\n      {collections && collections.length > 0 && (\n        <ul>\n          {collections.map((collection) => (\n            <li key={collection.id}>{collection.title}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default ProductCollections\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`10`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useCollections } from \"medusa-react\"\n\nconst ProductCollections = () => {\n  const { \n    collections, \n    limit,\n    offset,\n    isLoading\n  } = useCollections({\n    limit: 20,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {collections && collections.length === 0 && (\n        <span>No Product Collections</span>\n      )}\n      {collections && collections.length > 0 && (\n        <ul>\n          {collections.map((collection) => (\n            <li key={collection.id}>{collection.title}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default ProductCollections\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 261,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved product collections."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/collections/list-collections.d.ts",
															"qualifiedName": "StoreGetCollectionsParams"
														},
														"name": "StoreGetCollectionsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 262,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/collections/index.d.ts",
																			"qualifiedName": "StoreCollectionsListRes"
																		},
																		"name": "StoreCollectionsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "collections"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 263,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 264,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						264
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 265,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 270,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 269,
																	"name": "collections",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-collection.d.ts",
																				"qualifiedName": "ProductCollection"
																			},
																			"name": "ProductCollection",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 266,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 267,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 268,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		270,
																		269,
																		266,
																		267,
																		268
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 271,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 276,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 275,
																	"name": "collections",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-collection.d.ts",
																				"qualifiedName": "ProductCollection"
																			},
																			"name": "ProductCollection",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 272,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 273,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 274,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		276,
																		275,
																		272,
																		273,
																		274
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 277,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 282,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 281,
																	"name": "collections",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-collection.d.ts",
																				"qualifiedName": "ProductCollection"
																			},
																			"name": "ProductCollection",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 278,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 279,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 280,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		282,
																		281,
																		278,
																		279,
																		280
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 283,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 288,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 287,
																	"name": "collections",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-collection.d.ts",
																				"qualifiedName": "ProductCollection"
																			},
																			"name": "ProductCollection",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 284,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 285,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 286,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		288,
																		287,
																		284,
																		285,
																		286
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										243,
										259
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										243,
										259
									]
								}
							]
						},
						{
							"id": 50,
							"name": "Customers",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Store Customer API Routes](https://docs.medusajs.com/api/store#customers_postcustomers).\n\nA customer can register and manage their information such as addresses, orders, payment methods, and more.\n\nRelated Guide: [How to implement customer profiles in your storefront](https://docs.medusajs.com/modules/customers/storefront/implement-customer-profiles)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 355,
									"name": "useCreateCustomer",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 356,
											"name": "useCreateCustomer",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook registers a new customer. This will also automatically authenticate the customer and set their login session in the response Cookie header.\nSubsequent requests sent with other hooks are sent with the Cookie session automatically."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useCreateCustomer } from \"medusa-react\"\n\nconst RegisterCustomer = () => {\n  const createCustomer = useCreateCustomer()\n  // ...\n\n  const handleCreate = (\n    customerData: {\n      first_name: string\n      last_name: string\n      email: string\n      password: string\n    }\n  ) => {\n    // ...\n    createCustomer.mutate(customerData, {\n      onSuccess: ({ customer }) => {\n        console.log(customer.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default RegisterCustomer\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 357,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/customers/index.d.ts",
																	"qualifiedName": "StoreCustomersRes"
																},
																"name": "StoreCustomersRes",
																"package": "@medusajs/medusa"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/customers/create-customer.d.ts",
																	"qualifiedName": "StorePostCustomersReq"
																},
																"name": "StorePostCustomersReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/customers/index.d.ts",
																	"qualifiedName": "StoreCustomersRes"
																},
																"name": "StoreCustomersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/customers/create-customer.d.ts",
															"qualifiedName": "StorePostCustomersReq"
														},
														"name": "StorePostCustomersReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 361,
									"name": "useUpdateMe",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 362,
											"name": "useUpdateMe",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates the logged-in customer's details. This hook requires [customer authentication](https://docs.medusajs.com/medusa-react/overview#customer-authentication)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useUpdateMe } from \"medusa-react\"\n\ntype Props = {\n  customerId: string\n}\n\nconst Customer = ({ customerId }: Props) => {\n  const updateCustomer = useUpdateMe()\n  // ...\n\n  const handleUpdate = (\n    firstName: string\n  ) => {\n    // ...\n    updateCustomer.mutate({\n      id: customerId,\n      first_name: firstName,\n    }, {\n      onSuccess: ({ customer }) => {\n        console.log(customer.first_name)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Customer\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 363,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/customers/index.d.ts",
																	"qualifiedName": "StoreCustomersRes"
																},
																"name": "StoreCustomersRes",
																"package": "@medusajs/medusa"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": 358,
																"name": "UpdateMeReq",
																"package": "medusa-react"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/customers/index.d.ts",
																	"qualifiedName": "StoreCustomersRes"
																},
																"name": "StoreCustomersRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": 358,
														"name": "UpdateMeReq",
														"package": "medusa-react"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 312,
									"name": "useMeCustomer",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 313,
											"name": "useMeCustomer",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves the logged-in customer's details. It requires [customer authentication](https://docs.medusajs.com/medusa-react/overview#customer-authentication)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useMeCustomer } from \"medusa-react\"\n\nconst Customer = () => {\n  const { customer, isLoading } = useMeCustomer()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {customer && (\n        <span>{customer.first_name} {customer.last_name}</span>\n      )}\n    </div>\n  )\n}\n\nexport default Customer\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 314,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/customers/index.d.ts",
																			"qualifiedName": "StoreCustomersRes"
																		},
																		"name": "StoreCustomersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "customers"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 315,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 317,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 316,
																	"name": "customer",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa/dist/models/customer.d.ts",
																					"qualifiedName": "Customer"
																				},
																				"name": "Customer",
																				"package": "@medusajs/medusa"
																			},
																			{
																				"type": "literal",
																				"value": "password_hash"
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		317,
																		316
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 318,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 320,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 319,
																	"name": "customer",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa/dist/models/customer.d.ts",
																					"qualifiedName": "Customer"
																				},
																				"name": "Customer",
																				"package": "@medusajs/medusa"
																			},
																			{
																				"type": "literal",
																				"value": "password_hash"
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		320,
																		319
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 321,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 323,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 322,
																	"name": "customer",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa/dist/models/customer.d.ts",
																					"qualifiedName": "Customer"
																				},
																				"name": "Customer",
																				"package": "@medusajs/medusa"
																			},
																			{
																				"type": "literal",
																				"value": "password_hash"
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		323,
																		322
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 324,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 326,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 325,
																	"name": "customer",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa/dist/models/customer.d.ts",
																					"qualifiedName": "Customer"
																				},
																				"name": "Customer",
																				"package": "@medusajs/medusa"
																			},
																			{
																				"type": "literal",
																				"value": "password_hash"
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		326,
																		325
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 327,
									"name": "useCustomerOrders",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 328,
											"name": "useCustomerOrders",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of the logged-in customer's orders. The orders can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`status`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`fulfillment_status`"
													},
													{
														"kind": "text",
														"text": ". The orders can also be paginated.\nThis hook requires [customer authentication](https://docs.medusajs.com/medusa-react/overview#customer-authentication)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useCustomerOrders } from \"medusa-react\"\n\nconst Orders = () => {\n  // refetch a function that can be used to\n  // re-retrieve orders after the customer logs in\n  const { orders, isLoading } = useCustomerOrders()\n\n  return (\n    <div>\n      {isLoading && <span>Loading orders...</span>}\n      {orders?.length && (\n        <ul>\n          {orders.map((order) => (\n            <li key={order.id}>{order.display_id}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Orders\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 329,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved orders."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/customers/list-orders.d.ts",
															"qualifiedName": "StoreGetCustomersCustomerOrdersParams"
														},
														"name": "StoreGetCustomersCustomerOrdersParams",
														"package": "@medusajs/medusa"
													},
													"defaultValue": "..."
												},
												{
													"id": 330,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/customers/index.d.ts",
																			"qualifiedName": "StoreCustomersListOrdersRes"
																		},
																		"name": "StoreCustomersListOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "typeOperator",
																"operator": "readonly",
																"target": {
																	"type": "tuple",
																	"elements": [
																		{
																			"type": "literal",
																			"value": "customers"
																		},
																		{
																			"type": "literal",
																			"value": "detail"
																		},
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "literal",
																			"value": "orders"
																		}
																	]
																}
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 331,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 336,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 335,
																	"name": "orders",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																				"qualifiedName": "Order"
																			},
																			"name": "Order",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 332,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 333,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 334,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		336,
																		335,
																		332,
																		333,
																		334
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 337,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 342,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 341,
																	"name": "orders",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																				"qualifiedName": "Order"
																			},
																			"name": "Order",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 338,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 339,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 340,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		342,
																		341,
																		338,
																		339,
																		340
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 343,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 348,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 347,
																	"name": "orders",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																				"qualifiedName": "Order"
																			},
																			"name": "Order",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 344,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 345,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 346,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		348,
																		347,
																		344,
																		345,
																		346
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 349,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 354,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 353,
																	"name": "orders",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																				"qualifiedName": "Order"
																			},
																			"name": "Order",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 350,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 351,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 352,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		354,
																		353,
																		350,
																		351,
																		352
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										355,
										361,
										312,
										327
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										312,
										327
									]
								},
								{
									"title": "Mutations",
									"children": [
										355,
										361
									]
								}
							]
						},
						{
							"id": 51,
							"name": "Gift Cards",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries listed here are used to send requests to the [Store Gift Card API Routes](https://docs.medusajs.com/api/store#gift-cards).\n\nCustomers can use gift cards during checkout to deduct the gift card's balance from the checkout total.\n\nRelated Guide: [How to use gift cards in a storefront](https://docs.medusajs.com/modules/gift-cards/storefront/use-gift-cards)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 365,
									"name": "useGiftCard",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 366,
											"name": "useGiftCard",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a Gift Card's details by its associated unique code."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useGiftCard } from \"medusa-react\"\n\ntype Props = {\n  giftCardCode: string\n}\n\nconst GiftCard = ({ giftCardCode }: Props) => {\n  const { gift_card, isLoading, isError } = useGiftCard(\n    giftCardCode\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {gift_card && <span>{gift_card.value}</span>}\n      {isError && <span>Gift Card does not exist</span>}\n    </div>\n  )\n}\n\nexport default GiftCard\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 367,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The gift card's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 368,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/gift-cards/index.d.ts",
																			"qualifiedName": "StoreGiftCardsRes"
																		},
																		"name": "StoreGiftCardsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "gift_cards"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 369,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 371,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 370,
																	"name": "gift_card",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/gift-card.d.ts",
																			"qualifiedName": "GiftCard"
																		},
																		"name": "GiftCard",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		371,
																		370
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 372,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 374,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 373,
																	"name": "gift_card",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/gift-card.d.ts",
																			"qualifiedName": "GiftCard"
																		},
																		"name": "GiftCard",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		374,
																		373
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 375,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 377,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 376,
																	"name": "gift_card",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/gift-card.d.ts",
																			"qualifiedName": "GiftCard"
																		},
																		"name": "GiftCard",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		377,
																		376
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 378,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 380,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 379,
																	"name": "gift_card",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/gift-card.d.ts",
																			"qualifiedName": "GiftCard"
																		},
																		"name": "GiftCard",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		380,
																		379
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										365
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										365
									]
								}
							]
						},
						{
							"id": 52,
							"name": "Line Items",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Mutations listed here are used to send requests to the Line Item API Routes part of the [Store Cart API Routes](https://docs.medusajs.com/api/store#carts).\n\nThe hooks listed have general examples on how to use them, but it's highly recommended to use the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "CartProvider",
										"target": 174
									},
									{
										"kind": "text",
										"text": " provider and\nthe "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "useCart",
										"target": 169
									},
									{
										"kind": "text",
										"text": " hook to manage your cart and access the current cart across your application."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 381,
									"name": "useCreateLineItem",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 382,
											"name": "useCreateLineItem",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook generates a Line Item with a given Product Variant and adds it to the Cart."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useCreateLineItem } from \"medusa-react\"\n\ntype Props = {\n  cartId: string\n}\n\nconst Cart = ({ cartId }: Props) => {\n  const createLineItem = useCreateLineItem(cartId)\n\n  const handleAddItem = (\n    variantId: string,\n    quantity: number\n  ) => {\n    createLineItem.mutate({\n      variant_id: variantId,\n      quantity,\n    }, {\n      onSuccess: ({ cart }) => {\n        console.log(cart.items)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Cart\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 383,
													"name": "cartId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The cart's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 384,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/create-line-item/index.d.ts",
																	"qualifiedName": "StorePostCartsCartLineItemsReq"
																},
																"name": "StorePostCartsCartLineItemsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/create-line-item/index.d.ts",
															"qualifiedName": "StorePostCartsCartLineItemsReq"
														},
														"name": "StorePostCartsCartLineItemsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 388,
									"name": "useUpdateLineItem",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 389,
											"name": "useUpdateLineItem",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook updates a line item's data."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useUpdateLineItem } from \"medusa-react\"\n\ntype Props = {\n  cartId: string\n}\n\nconst Cart = ({ cartId }: Props) => {\n  const updateLineItem = useUpdateLineItem(cartId)\n\n  const handleUpdateItem = (\n    lineItemId: string,\n    quantity: number\n  ) => {\n    updateLineItem.mutate({\n      lineId: lineItemId,\n      quantity,\n    }, {\n      onSuccess: ({ cart }) => {\n        console.log(cart.items)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Cart\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 390,
													"name": "cartId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The cart's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 391,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": 385,
																"name": "UpdateLineItemReq",
																"package": "medusa-react"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": 385,
														"name": "UpdateLineItemReq",
														"package": "medusa-react"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 392,
									"name": "useDeleteLineItem",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 393,
											"name": "useDeleteLineItem",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook deletes a line item from a cart. The payment sessions will be updated and the totals will be recalculated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useDeleteLineItem } from \"medusa-react\"\n\ntype Props = {\n  cartId: string\n}\n\nconst Cart = ({ cartId }: Props) => {\n  const deleteLineItem = useDeleteLineItem(cartId)\n\n  const handleDeleteItem = (\n    lineItemId: string\n  ) => {\n    deleteLineItem.mutate({\n      lineId: lineItemId,\n    }, {\n      onSuccess: ({ cart }) => {\n        console.log(cart.items)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default Cart\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 394,
													"name": "cartId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The cart's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 395,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 396,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 397,
																			"name": "lineId",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "The line item's ID."
																					}
																				]
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				397
																			]
																		}
																	]
																}
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
																	"qualifiedName": "StoreCartsRes"
																},
																"name": "StoreCartsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 398,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 399,
																	"name": "lineId",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The line item's ID."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		399
																	]
																}
															]
														}
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										381,
										388,
										392
									]
								}
							],
							"categories": [
								{
									"title": "Mutations",
									"children": [
										381,
										388,
										392
									]
								}
							]
						},
						{
							"id": 53,
							"name": "Order Edits",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Store Order Edits API Routes](https://docs.medusajs.com/api/store#order-edits).\n\nOrder edits are changes made to items in an order such as adding, updating their quantity, or deleting them. Order edits are created by the admin.\nA customer can review order edit requests created by an admin and confirm or decline them.\n\nRelated Guide: [How to handle order edits in a storefront](https://docs.medusajs.com/modules/orders/storefront/handle-order-edits)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 417,
									"name": "useDeclineOrderEdit",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 418,
											"name": "useDeclineOrderEdit",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook declines an Order Edit. The changes are not reflected on the original order."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useDeclineOrderEdit } from \"medusa-react\"\n\ntype Props = {\n  orderEditId: string\n}\n\nconst OrderEdit = ({ orderEditId }: Props) => {\n  const declineOrderEdit = useDeclineOrderEdit(orderEditId)\n  // ...\n\n  const handleDeclineOrderEdit = (\n    declinedReason: string\n  ) => {\n    declineOrderEdit.mutate({\n      declined_reason: declinedReason,\n    }, {\n      onSuccess: ({ order_edit }) => {\n        console.log(order_edit.declined_at)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default OrderEdit\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 419,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order edit's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 420,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/order-edits/index.d.ts",
																			"qualifiedName": "StoreOrderEditsRes"
																		},
																		"name": "StoreOrderEditsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/order-edits/decline-order-edit.d.ts",
																	"qualifiedName": "StorePostOrderEditsOrderEditDecline"
																},
																"name": "StorePostOrderEditsOrderEditDecline",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/order-edits/index.d.ts",
																	"qualifiedName": "StoreOrderEditsRes"
																},
																"name": "StoreOrderEditsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/order-edits/decline-order-edit.d.ts",
															"qualifiedName": "StorePostOrderEditsOrderEditDecline"
														},
														"name": "StorePostOrderEditsOrderEditDecline",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 421,
									"name": "useCompleteOrderEdit",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 422,
											"name": "useCompleteOrderEdit",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook completes and confirms an Order Edit and reflect its changes on the original order. Any additional payment required must \nbe authorized first using the "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "useAuthorizePaymentSession",
														"target": 537
													},
													{
														"kind": "text",
														"text": " hook."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useCompleteOrderEdit } from \"medusa-react\"\n\ntype Props = {\n  orderEditId: string\n}\n\nconst OrderEdit = ({ orderEditId }: Props) => {\n  const completeOrderEdit = useCompleteOrderEdit(\n    orderEditId\n  )\n  // ...\n\n  const handleCompleteOrderEdit = () => {\n    completeOrderEdit.mutate(void 0, {\n      onSuccess: ({ order_edit }) => {\n        console.log(order_edit.confirmed_at)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default OrderEdit\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 423,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order edit's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 424,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/order-edits/index.d.ts",
																			"qualifiedName": "StoreOrderEditsRes"
																		},
																		"name": "StoreOrderEditsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "void"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/order-edits/index.d.ts",
																	"qualifiedName": "StoreOrderEditsRes"
																},
																"name": "StoreOrderEditsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 401,
									"name": "useOrderEdit",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 402,
											"name": "useOrderEdit",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves an Order Edit's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useOrderEdit } from \"medusa-react\"\n\ntype Props = {\n  orderEditId: string\n}\n\nconst OrderEdit = ({ orderEditId }: Props) => {\n  const { order_edit, isLoading } = useOrderEdit(orderEditId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {order_edit && (\n        <ul>\n          {order_edit.changes.map((change) => (\n            <li key={change.id}>{change.type}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default OrderEdit\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 403,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order edit's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 404,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/order-edits/index.d.ts",
																			"qualifiedName": "StoreOrderEditsRes"
																		},
																		"name": "StoreOrderEditsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "orderEdit"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 405,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 407,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 406,
																	"name": "order_edit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa/dist/models/order-edit.d.ts",
																					"qualifiedName": "OrderEdit"
																				},
																				"name": "OrderEdit",
																				"package": "@medusajs/medusa"
																			},
																			{
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": "internal_note"
																					},
																					{
																						"type": "literal",
																						"value": "created_by"
																					},
																					{
																						"type": "literal",
																						"value": "confirmed_by"
																					},
																					{
																						"type": "literal",
																						"value": "canceled_by"
																					}
																				]
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		407,
																		406
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 408,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 410,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 409,
																	"name": "order_edit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa/dist/models/order-edit.d.ts",
																					"qualifiedName": "OrderEdit"
																				},
																				"name": "OrderEdit",
																				"package": "@medusajs/medusa"
																			},
																			{
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": "internal_note"
																					},
																					{
																						"type": "literal",
																						"value": "created_by"
																					},
																					{
																						"type": "literal",
																						"value": "confirmed_by"
																					},
																					{
																						"type": "literal",
																						"value": "canceled_by"
																					}
																				]
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		410,
																		409
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 411,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 413,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 412,
																	"name": "order_edit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa/dist/models/order-edit.d.ts",
																					"qualifiedName": "OrderEdit"
																				},
																				"name": "OrderEdit",
																				"package": "@medusajs/medusa"
																			},
																			{
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": "internal_note"
																					},
																					{
																						"type": "literal",
																						"value": "created_by"
																					},
																					{
																						"type": "literal",
																						"value": "confirmed_by"
																					},
																					{
																						"type": "literal",
																						"value": "canceled_by"
																					}
																				]
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		413,
																		412
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 414,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 416,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 415,
																	"name": "order_edit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa/dist/models/order-edit.d.ts",
																					"qualifiedName": "OrderEdit"
																				},
																				"name": "OrderEdit",
																				"package": "@medusajs/medusa"
																			},
																			{
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": "internal_note"
																					},
																					{
																						"type": "literal",
																						"value": "created_by"
																					},
																					{
																						"type": "literal",
																						"value": "confirmed_by"
																					},
																					{
																						"type": "literal",
																						"value": "canceled_by"
																					}
																				]
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		416,
																		415
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										417,
										421,
										401
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										401
									]
								},
								{
									"title": "Mutations",
									"children": [
										417,
										421
									]
								}
							]
						},
						{
							"id": 54,
							"name": "Orders",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Store Order API Routes](https://docs.medusajs.com/api/store#orders).\n\nOrders are purchases made by customers, typically through a storefront.\nOrders are placed and created using "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "cart",
										"target": 48
									},
									{
										"kind": "text",
										"text": " hooks. The listed hooks allow retrieving and claiming orders.\n\nRelated Guide: [How to retrieve order details in a storefront](https://docs.medusajs.com/modules/orders/storefront/retrieve-order-details)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 498,
									"name": "useRequestOrderAccess",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 499,
											"name": "useRequestOrderAccess",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook allows the logged-in customer to claim ownership of one or more orders. This generates a token that can be used later on to verify the claim \nusing the "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "useGrantOrderAccess",
														"target": 505,
														"tsLinkText": ""
													},
													{
														"kind": "text",
														"text": " hook. This also emits the event "
													},
													{
														"kind": "code",
														"text": "`order-update-token.created`"
													},
													{
														"kind": "text",
														"text": ". So, if you have a notification provider installed \nthat handles this event and sends the customer a notification, such as an email, the customer should receive instructions on how to \nfinalize their claim ownership."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useRequestOrderAccess } from \"medusa-react\"\n\nconst ClaimOrder = () => {\n  const claimOrder = useRequestOrderAccess()\n\n  const handleClaimOrder = (\n    orderIds: string[]\n  ) => {\n    claimOrder.mutate({\n      order_ids: orderIds\n    }, {\n      onSuccess: () => {\n        // successful\n      },\n      onError: () => {\n        // an error occurred.\n      }\n    })\n  }\n  \n  // ...\n}\n\nexport default ClaimOrder\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 500,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reflection",
																"declaration": {
																	"id": 501,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 502,
																			"name": "response",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																					"qualifiedName": "HTTPResponse"
																				},
																				"name": "HTTPResponse",
																				"package": "@medusajs/medusa-js"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				502
																			]
																		}
																	]
																}
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/request-order.d.ts",
																	"qualifiedName": "StorePostCustomersCustomerOrderClaimReq"
																},
																"name": "StorePostCustomersCustomerOrderClaimReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reflection",
														"declaration": {
															"id": 503,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 504,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		504
																	]
																}
															]
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/request-order.d.ts",
															"qualifiedName": "StorePostCustomersCustomerOrderClaimReq"
														},
														"name": "StorePostCustomersCustomerOrderClaimReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 505,
									"name": "useGrantOrderAccess",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 506,
											"name": "useGrantOrderAccess",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook verifies the claim order token provided to the customer when they request ownership of an order."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useGrantOrderAccess } from \"medusa-react\"\n\nconst ClaimOrder = () => {\n  const confirmOrderRequest = useGrantOrderAccess()\n\n  const handleOrderRequestConfirmation = (\n    token: string\n  ) => {\n    confirmOrderRequest.mutate({\n      token\n    }, {\n      onSuccess: () => {\n        // successful\n      },\n      onError: () => {\n        // an error occurred.\n      }\n    })\n  }\n  \n  // ...\n}\n\nexport default ClaimOrder\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 507,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reflection",
																"declaration": {
																	"id": 508,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 509,
																			"name": "response",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																					"qualifiedName": "HTTPResponse"
																				},
																				"name": "HTTPResponse",
																				"package": "@medusajs/medusa-js"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				509
																			]
																		}
																	]
																}
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/confirm-order-request.d.ts",
																	"qualifiedName": "StorePostCustomersCustomerAcceptClaimReq"
																},
																"name": "StorePostCustomersCustomerAcceptClaimReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reflection",
														"declaration": {
															"id": 510,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 511,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		511
																	]
																}
															]
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/confirm-order-request.d.ts",
															"qualifiedName": "StorePostCustomersCustomerAcceptClaimReq"
														},
														"name": "StorePostCustomersCustomerAcceptClaimReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 448,
									"name": "useOrder",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 449,
											"name": "useOrder",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves an Order's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useOrder } from \"medusa-react\"\n\ntype Props = {\n  orderId: string\n}\n\nconst Order = ({ orderId }: Props) => {\n  const { \n    order, \n    isLoading, \n  } = useOrder(orderId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {order && <span>{order.display_id}</span>}\n      \n    </div>\n  )\n}\n\nexport default Order\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 450,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The order's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 451,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/index.d.ts",
																			"qualifiedName": "StoreOrdersRes"
																		},
																		"name": "StoreOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "orders"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 452,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 454,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 453,
																	"name": "order",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																			"qualifiedName": "Order"
																		},
																		"name": "Order",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		454,
																		453
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 455,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 457,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 456,
																	"name": "order",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																			"qualifiedName": "Order"
																		},
																		"name": "Order",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		457,
																		456
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 458,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 460,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 459,
																	"name": "order",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																			"qualifiedName": "Order"
																		},
																		"name": "Order",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		460,
																		459
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 461,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 463,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 462,
																	"name": "order",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																			"qualifiedName": "Order"
																		},
																		"name": "Order",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		463,
																		462
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 464,
									"name": "useCartOrder",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 465,
											"name": "useCartOrder",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves an order's details by the ID of the cart that was used to create the order."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useCartOrder } from \"medusa-react\"\n\ntype Props = {\n  cartId: string\n}\n\nconst Order = ({ cartId }: Props) => {\n  const { \n    order, \n    isLoading, \n  } = useCartOrder(cartId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {order && <span>{order.display_id}</span>}\n      \n    </div>\n  )\n}\n\nexport default Order\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 466,
													"name": "cartId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The cart's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 467,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/index.d.ts",
																			"qualifiedName": "StoreOrdersRes"
																		},
																		"name": "StoreOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "typeOperator",
																"operator": "readonly",
																"target": {
																	"type": "tuple",
																	"elements": [
																		{
																			"type": "literal",
																			"value": "orders"
																		},
																		{
																			"type": "literal",
																			"value": "detail"
																		},
																		{
																			"type": "literal",
																			"value": "cart"
																		},
																		{
																			"type": "intrinsic",
																			"name": "string"
																		}
																	]
																}
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 468,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 470,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 469,
																	"name": "order",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																			"qualifiedName": "Order"
																		},
																		"name": "Order",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		470,
																		469
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 471,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 473,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 472,
																	"name": "order",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																			"qualifiedName": "Order"
																		},
																		"name": "Order",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		473,
																		472
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 474,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 476,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 475,
																	"name": "order",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																			"qualifiedName": "Order"
																		},
																		"name": "Order",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		476,
																		475
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 477,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 479,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 478,
																	"name": "order",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																			"qualifiedName": "Order"
																		},
																		"name": "Order",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		479,
																		478
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 480,
									"name": "useOrders",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 481,
											"name": "useOrders",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook looks up an order using filters. If the filters don't narrow down the results to a single order, a "
													},
													{
														"kind": "code",
														"text": "`404`"
													},
													{
														"kind": "text",
														"text": " response is returned with no orders."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useOrders } from \"medusa-react\"\n\ntype Props = {\n  displayId: number\n  email: string\n}\n\nconst Order = ({\n  displayId,\n  email\n}: Props) => {\n  const { \n    order, \n    isLoading, \n  } = useOrders({\n    display_id: displayId,\n    email,\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {order && <span>{order.display_id}</span>}\n      \n    </div>\n  )\n}\n\nexport default Order\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 482,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters used to retrieve the order."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/lookup-order.d.ts",
															"qualifiedName": "StoreGetOrdersParams"
														},
														"name": "StoreGetOrdersParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 483,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/index.d.ts",
																			"qualifiedName": "StoreOrdersRes"
																		},
																		"name": "StoreOrdersRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "orders"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 484,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 485,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "union",
																						"types": [
																							{
																								"type": "intrinsic",
																								"name": "undefined"
																							},
																							{
																								"type": "reference",
																								"target": {
																									"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/lookup-order.d.ts",
																									"qualifiedName": "StoreGetOrdersParams"
																								},
																								"name": "StoreGetOrdersParams",
																								"package": "@medusajs/medusa"
																							}
																						]
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						485
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 486,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 488,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 487,
																	"name": "order",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																			"qualifiedName": "Order"
																		},
																		"name": "Order",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		488,
																		487
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 489,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 491,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 490,
																	"name": "order",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																			"qualifiedName": "Order"
																		},
																		"name": "Order",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		491,
																		490
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 492,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 494,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 493,
																	"name": "order",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																			"qualifiedName": "Order"
																		},
																		"name": "Order",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		494,
																		493
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 495,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 497,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 496,
																	"name": "order",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/order.d.ts",
																			"qualifiedName": "Order"
																		},
																		"name": "Order",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		497,
																		496
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										498,
										505,
										448,
										464,
										480
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										448,
										464,
										480
									]
								},
								{
									"title": "Mutations",
									"children": [
										498,
										505
									]
								}
							]
						},
						{
							"id": 55,
							"name": "Payment Collections",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Store Payment Collection API Routes](https://docs.medusajs.com/api/store#payment-collections).\n\nA payment collection is useful for managing additional payments, such as for Order Edits, or installment payments."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 529,
									"name": "useManageMultiplePaymentSessions",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 530,
											"name": "useManageMultiplePaymentSessions",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates, updates, or deletes a list of payment sessions of a Payment Collections. If a payment session is not provided in the "
													},
													{
														"kind": "code",
														"text": "`sessions`"
													},
													{
														"kind": "text",
														"text": " array, it's deleted."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To add two new payment sessions:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useManageMultiplePaymentSessions } from \"medusa-react\"\n\ntype Props = {\n  paymentCollectionId: string\n}\n\nconst PaymentCollection = ({\n  paymentCollectionId\n}: Props) => {\n  const managePaymentSessions = useManageMultiplePaymentSessions(\n    paymentCollectionId\n  )\n\n  const handleManagePaymentSessions = () => {\n    managePaymentSessions.mutate({\n      // Total amount = 10000\n      sessions: [\n        {\n          provider_id: \"stripe\",\n          amount: 5000,\n        },\n        {\n          provider_id: \"manual\",\n          amount: 5000,\n        },\n      ]\n    }, {\n      onSuccess: ({ payment_collection }) => {\n        console.log(payment_collection.payment_sessions)\n      }\n    })\n  }\n  \n  // ...\n}\n\nexport default PaymentCollection\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo update a payment session and another one by not including it in the payload:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useManageMultiplePaymentSessions } from \"medusa-react\"\n\ntype Props = {\n  paymentCollectionId: string\n}\n\nconst PaymentCollection = ({\n  paymentCollectionId\n}: Props) => {\n  const managePaymentSessions = useManageMultiplePaymentSessions(\n    paymentCollectionId\n  )\n\n  const handleManagePaymentSessions = () => {\n    managePaymentSessions.mutate({\n      // Total amount = 10000\n      sessions: [\n        {\n          provider_id: \"stripe\",\n          amount: 10000,\n          session_id: \"ps_123456\"\n        },\n      ]\n    }, {\n      onSuccess: ({ payment_collection }) => {\n        console.log(payment_collection.payment_sessions)\n      }\n    })\n  }\n  \n  // ...\n}\n\nexport default PaymentCollection\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 531,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The payment collection's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 532,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/payment-collections/index.d.ts",
																			"qualifiedName": "StorePaymentCollectionsRes"
																		},
																		"name": "StorePaymentCollectionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/payment-collections/manage-batch-payment-sessions.d.ts",
																	"qualifiedName": "StorePostPaymentCollectionsBatchSessionsReq"
																},
																"name": "StorePostPaymentCollectionsBatchSessionsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/payment-collections/index.d.ts",
																	"qualifiedName": "StorePaymentCollectionsRes"
																},
																"name": "StorePaymentCollectionsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/payment-collections/manage-batch-payment-sessions.d.ts",
															"qualifiedName": "StorePostPaymentCollectionsBatchSessionsReq"
														},
														"name": "StorePostPaymentCollectionsBatchSessionsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 533,
									"name": "useManagePaymentSession",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 534,
											"name": "useManagePaymentSession",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a Payment Session for a payment provider in a Payment Collection."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useManagePaymentSession } from \"medusa-react\"\n\ntype Props = {\n  paymentCollectionId: string\n}\n\nconst PaymentCollection = ({\n  paymentCollectionId\n}: Props) => {\n  const managePaymentSession = useManagePaymentSession(\n    paymentCollectionId\n  )\n\n  const handleManagePaymentSession = (\n    providerId: string\n  ) => {\n    managePaymentSession.mutate({\n      provider_id: providerId\n    }, {\n      onSuccess: ({ payment_collection }) => {\n        console.log(payment_collection.payment_sessions)\n      }\n    })\n  }\n  \n  // ...\n}\n\nexport default PaymentCollection\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 535,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The payment collection's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 536,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/payment-collections/index.d.ts",
																			"qualifiedName": "StorePaymentCollectionsRes"
																		},
																		"name": "StorePaymentCollectionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/payment-collections/manage-payment-session.d.ts",
																	"qualifiedName": "StorePaymentCollectionSessionsReq"
																},
																"name": "StorePaymentCollectionSessionsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/payment-collections/index.d.ts",
																	"qualifiedName": "StorePaymentCollectionsRes"
																},
																"name": "StorePaymentCollectionsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/payment-collections/manage-payment-session.d.ts",
															"qualifiedName": "StorePaymentCollectionSessionsReq"
														},
														"name": "StorePaymentCollectionSessionsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 537,
									"name": "useAuthorizePaymentSession",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 538,
											"name": "useAuthorizePaymentSession",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook authorizes a Payment Session of a Payment Collection."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "string - The payment session's ID."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAuthorizePaymentSession } from \"medusa-react\"\n\ntype Props = {\n  paymentCollectionId: string\n}\n\nconst PaymentCollection = ({\n  paymentCollectionId\n}: Props) => {\n  const authorizePaymentSession = useAuthorizePaymentSession(\n    paymentCollectionId\n  )\n  // ...\n\n  const handleAuthorizePayment = (paymentSessionId: string) => {\n    authorizePaymentSession.mutate(paymentSessionId, {\n      onSuccess: ({ payment_collection }) => {\n        console.log(payment_collection.payment_sessions)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default PaymentCollection\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 539,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The payment collection's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 540,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/payment-collections/index.d.ts",
																			"qualifiedName": "StorePaymentCollectionsRes"
																		},
																		"name": "StorePaymentCollectionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/payment-collections/index.d.ts",
																	"qualifiedName": "StorePaymentCollectionsRes"
																},
																"name": "StorePaymentCollectionsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 541,
									"name": "useAuthorizePaymentSessionsBatch",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 542,
											"name": "useAuthorizePaymentSessionsBatch",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook authorize the Payment Sessions of a Payment Collection."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useAuthorizePaymentSessionsBatch } from \"medusa-react\"\n\ntype Props = {\n  paymentCollectionId: string\n}\n\nconst PaymentCollection = ({\n  paymentCollectionId\n}: Props) => {\n  const authorizePaymentSessions = useAuthorizePaymentSessionsBatch(\n    paymentCollectionId\n  )\n  // ...\n\n  const handleAuthorizePayments = (paymentSessionIds: string[]) => {\n    authorizePaymentSessions.mutate({\n      session_ids: paymentSessionIds\n    }, {\n      onSuccess: ({ payment_collection }) => {\n        console.log(payment_collection.payment_sessions)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default PaymentCollection\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 543,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The payment collection's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 544,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/payment-collections/index.d.ts",
																			"qualifiedName": "StorePaymentCollectionsRes"
																		},
																		"name": "StorePaymentCollectionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/payment-collections/authorize-batch-payment-sessions.d.ts",
																	"qualifiedName": "StorePostPaymentCollectionsBatchSessionsAuthorizeReq"
																},
																"name": "StorePostPaymentCollectionsBatchSessionsAuthorizeReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/payment-collections/index.d.ts",
																	"qualifiedName": "StorePaymentCollectionsRes"
																},
																"name": "StorePaymentCollectionsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/payment-collections/authorize-batch-payment-sessions.d.ts",
															"qualifiedName": "StorePostPaymentCollectionsBatchSessionsAuthorizeReq"
														},
														"name": "StorePostPaymentCollectionsBatchSessionsAuthorizeReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 545,
									"name": "usePaymentCollectionRefreshPaymentSession",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 546,
											"name": "usePaymentCollectionRefreshPaymentSession",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook refreshes a Payment Session's data to ensure that it is in sync with the Payment Collection."
													}
												],
												"blockTags": [
													{
														"tag": "@typeParamDefinition",
														"content": [
															{
																"kind": "text",
																"text": "string - The payment session's ID."
															}
														]
													},
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { usePaymentCollectionRefreshPaymentSession } from \"medusa-react\"\n\ntype Props = {\n  paymentCollectionId: string\n}\n\nconst PaymentCollection = ({\n  paymentCollectionId\n}: Props) => {\n  const refreshPaymentSession = usePaymentCollectionRefreshPaymentSession(\n    paymentCollectionId\n  )\n  // ...\n\n  const handleRefreshPaymentSession = (paymentSessionId: string) => {\n    refreshPaymentSession.mutate(paymentSessionId, {\n      onSuccess: ({ payment_session }) => {\n        console.log(payment_session.status)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default PaymentCollection\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 547,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The payment collection's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 548,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/payment-collections/index.d.ts",
																			"qualifiedName": "StorePaymentCollectionsSessionRes"
																		},
																		"name": "StorePaymentCollectionsSessionRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/payment-collections/index.d.ts",
																	"qualifiedName": "StorePaymentCollectionsSessionRes"
																},
																"name": "StorePaymentCollectionsSessionRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 513,
									"name": "usePaymentCollection",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 514,
											"name": "usePaymentCollection",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a Payment Collection's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { usePaymentCollection } from \"medusa-react\"\n\ntype Props = {\n  paymentCollectionId: string\n}\n\nconst PaymentCollection = ({\n  paymentCollectionId\n}: Props) => {\n  const { \n    payment_collection, \n    isLoading\n  } = usePaymentCollection(\n    paymentCollectionId\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {payment_collection && (\n        <span>{payment_collection.status}</span>\n      )}\n    </div>\n  )\n}\n\nexport default PaymentCollection\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 515,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The payment collection's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 516,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/payment-collections/index.d.ts",
																			"qualifiedName": "StorePaymentCollectionsRes"
																		},
																		"name": "StorePaymentCollectionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "paymentCollection"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 517,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 519,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 518,
																	"name": "payment_collection",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/payment-collection.d.ts",
																			"qualifiedName": "PaymentCollection"
																		},
																		"name": "PaymentCollection",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		519,
																		518
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 520,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 522,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 521,
																	"name": "payment_collection",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/payment-collection.d.ts",
																			"qualifiedName": "PaymentCollection"
																		},
																		"name": "PaymentCollection",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		522,
																		521
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 523,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 525,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 524,
																	"name": "payment_collection",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/payment-collection.d.ts",
																			"qualifiedName": "PaymentCollection"
																		},
																		"name": "PaymentCollection",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		525,
																		524
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 526,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 528,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 527,
																	"name": "payment_collection",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/payment-collection.d.ts",
																			"qualifiedName": "PaymentCollection"
																		},
																		"name": "PaymentCollection",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		528,
																		527
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										529,
										533,
										537,
										541,
										545,
										513
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										513
									]
								},
								{
									"title": "Mutations",
									"children": [
										529,
										533,
										537,
										541,
										545
									]
								}
							]
						},
						{
							"id": 56,
							"name": "Product Categories",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries listed here are used to send requests to the [Store Product Category API Routes](https://docs.medusajs.com/api/store#product-categories_getproductcategories).\n\nProducts can be categoriezed into categories. A product can be associated more than one category.\n\nRelated Guide: [How to use product categories in a storefront](https://docs.medusajs.com/modules/products/storefront/use-categories)."
									}
								],
								"blockTags": [
									{
										"tag": "@featureFlag",
										"content": [
											{
												"kind": "text",
												"text": "product_categories"
											}
										]
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 550,
									"name": "useProductCategories",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 551,
											"name": "useProductCategories",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of product categories. The product categories can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`handle`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`q`"
													},
													{
														"kind": "text",
														"text": " passed in the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter. \nThe product categories can also be paginated. This hook can also be used to retrieve a product category by its handle."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list product categories:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useProductCategories } from \"medusa-react\"\n\nfunction Categories() {\n  const { \n    product_categories, \n    isLoading,\n  } = useProductCategories()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {product_categories && !product_categories.length && (\n        <span>No Categories</span>\n      )}\n      {product_categories && product_categories.length > 0 && (\n        <ul>\n          {product_categories.map(\n            (category) => (\n              <li key={category.id}>{category.name}</li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Categories\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo retrieve a product category by its handle:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useProductCategories } from \"medusa-react\"\n\nfunction Categories(\n  handle: string\n) {\n  const { \n    product_categories, \n    isLoading,\n  } = useProductCategories({\n    handle\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {product_categories && !product_categories.length && (\n        <span>No Categories</span>\n      )}\n      {product_categories && product_categories.length > 0 && (\n        <ul>\n          {product_categories.map(\n            (category) => (\n              <li key={category.id}>{category.name}</li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Categories\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved within the product categories:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useProductCategories } from \"medusa-react\"\n\nfunction Categories(\n  handle: string\n) {\n  const { \n    product_categories, \n    isLoading,\n  } = useProductCategories({\n    handle,\n    expand: \"products\"\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {product_categories && !product_categories.length && (\n        <span>No Categories</span>\n      )}\n      {product_categories && product_categories.length > 0 && (\n        <ul>\n          {product_categories.map(\n            (category) => (\n              <li key={category.id}>{category.name}</li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Categories\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`100`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport { useProductCategories } from \"medusa-react\"\n\nfunction Categories(\n  handle: string\n) {\n  const { \n    product_categories,\n    limit,\n    offset, \n    isLoading,\n  } = useProductCategories({\n    handle,\n    expand: \"products\",\n    limit: 50,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {product_categories && !product_categories.length && (\n        <span>No Categories</span>\n      )}\n      {product_categories && product_categories.length > 0 && (\n        <ul>\n          {product_categories.map(\n            (category) => (\n              <li key={category.id}>{category.name}</li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Categories\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 552,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved product categories."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-categories/list-product-categories.d.ts",
															"qualifiedName": "StoreGetProductCategoriesParams"
														},
														"name": "StoreGetProductCategoriesParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 553,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-categories/index.d.ts",
																			"qualifiedName": "StoreGetProductCategoriesRes"
																		},
																		"name": "StoreGetProductCategoriesRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "product_categories"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 554,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 555,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						555
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 556,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 561,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 560,
																	"name": "product_categories",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-category.d.ts",
																				"qualifiedName": "ProductCategory"
																			},
																			"name": "ProductCategory",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 557,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 558,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 559,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		561,
																		560,
																		557,
																		558,
																		559
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 562,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 567,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 566,
																	"name": "product_categories",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-category.d.ts",
																				"qualifiedName": "ProductCategory"
																			},
																			"name": "ProductCategory",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 563,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 564,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 565,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		567,
																		566,
																		563,
																		564,
																		565
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 568,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 573,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 572,
																	"name": "product_categories",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-category.d.ts",
																				"qualifiedName": "ProductCategory"
																			},
																			"name": "ProductCategory",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 569,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 570,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 571,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		573,
																		572,
																		569,
																		570,
																		571
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 574,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 579,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 578,
																	"name": "product_categories",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-category.d.ts",
																				"qualifiedName": "ProductCategory"
																			},
																			"name": "ProductCategory",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 575,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 576,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 577,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		579,
																		578,
																		575,
																		576,
																		577
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 580,
									"name": "useProductCategory",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 581,
											"name": "useProductCategory",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a Product Category's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "A simple example that retrieves a product category by its ID:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useProductCategory } from \"medusa-react\"\n\ntype Props = {\n  categoryId: string\n}\n\nconst Category = ({ categoryId }: Props) => {\n  const { product_category, isLoading } = useProductCategory(\n    categoryId\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {product_category && <span>{product_category.name}</span>}\n    </div>\n  )\n}\n\nexport default Category\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useProductCategory } from \"medusa-react\"\n\ntype Props = {\n  categoryId: string\n}\n\nconst Category = ({ categoryId }: Props) => {\n  const { product_category, isLoading } = useProductCategory(\n    categoryId,\n    {\n      expand: \"products\"\n    }\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {product_category && <span>{product_category.name}</span>}\n    </div>\n  )\n}\n\nexport default Category\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 582,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product category's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 583,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Configurations to apply on the retrieved product categories."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-categories/get-product-category.d.ts",
															"qualifiedName": "StoreGetProductCategoriesCategoryParams"
														},
														"name": "StoreGetProductCategoriesCategoryParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 584,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-categories/index.d.ts",
																			"qualifiedName": "StoreGetProductCategoriesCategoryRes"
																		},
																		"name": "StoreGetProductCategoriesCategoryRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "product_categories"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 585,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 587,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 586,
																	"name": "product_category",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/product-category.d.ts",
																			"qualifiedName": "ProductCategory"
																		},
																		"name": "ProductCategory",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		587,
																		586
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 588,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 590,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 589,
																	"name": "product_category",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/product-category.d.ts",
																			"qualifiedName": "ProductCategory"
																		},
																		"name": "ProductCategory",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		590,
																		589
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 591,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 593,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 592,
																	"name": "product_category",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/product-category.d.ts",
																			"qualifiedName": "ProductCategory"
																		},
																		"name": "ProductCategory",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		593,
																		592
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 594,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 596,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 595,
																	"name": "product_category",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/product-category.d.ts",
																			"qualifiedName": "ProductCategory"
																		},
																		"name": "ProductCategory",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		596,
																		595
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										550,
										580
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										550,
										580
									]
								}
							]
						},
						{
							"id": 57,
							"name": "Product Tags",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries listed here are used to send requests to the [Store Product Tag API Routes](https://docs.medusajs.com/api/store#product-tags).\n\nProduct tags are string values that can be used to filter products by.\nProducts can have more than one tag, and products can share tags."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 598,
									"name": "useProductTags",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 599,
											"name": "useProductTags",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of product tags. The product tags can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`id`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`q`"
													},
													{
														"kind": "text",
														"text": " \npassed in the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter. The product tags can also be sorted or paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list product tags:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useProductTags } from \"medusa-react\"\n\nfunction Tags() {\n  const { \n    product_tags, \n    isLoading,\n  } = useProductTags()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {product_tags && !product_tags.length && (\n        <span>No Product Tags</span>\n      )}\n      {product_tags && product_tags.length > 0 && (\n        <ul>\n          {product_tags.map(\n            (tag) => (\n              <li key={tag.id}>{tag.value}</li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Tags\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`20`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useProductTags } from \"medusa-react\"\n\nfunction Tags() {\n  const { \n    product_tags, \n    limit,\n    offset,\n    isLoading,\n  } = useProductTags({\n    limit: 10,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {product_tags && !product_tags.length && (\n        <span>No Product Tags</span>\n      )}\n      {product_tags && product_tags.length > 0 && (\n        <ul>\n          {product_tags.map(\n            (tag) => (\n              <li key={tag.id}>{tag.value}</li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Tags\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 600,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved product tags."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-tags/list-product-tags.d.ts",
															"qualifiedName": "StoreGetProductTagsParams"
														},
														"name": "StoreGetProductTagsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 601,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-tags/index.d.ts",
																			"qualifiedName": "StoreProductTagsListRes"
																		},
																		"name": "StoreProductTagsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "product_tags"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 602,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 603,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						603
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 604,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 609,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 608,
																	"name": "product_tags",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-tag.d.ts",
																				"qualifiedName": "ProductTag"
																			},
																			"name": "ProductTag",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 605,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 606,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 607,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		609,
																		608,
																		605,
																		606,
																		607
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 610,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 615,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 614,
																	"name": "product_tags",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-tag.d.ts",
																				"qualifiedName": "ProductTag"
																			},
																			"name": "ProductTag",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 611,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 612,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 613,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		615,
																		614,
																		611,
																		612,
																		613
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 616,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 621,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 620,
																	"name": "product_tags",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-tag.d.ts",
																				"qualifiedName": "ProductTag"
																			},
																			"name": "ProductTag",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 617,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 618,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 619,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		621,
																		620,
																		617,
																		618,
																		619
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 622,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 627,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 626,
																	"name": "product_tags",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-tag.d.ts",
																				"qualifiedName": "ProductTag"
																			},
																			"name": "ProductTag",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 623,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 624,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 625,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		627,
																		626,
																		623,
																		624,
																		625
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										598
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										598
									]
								}
							]
						},
						{
							"id": 58,
							"name": "Product Types",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries listed here are used to send requests to the [Store Product Type API Routes](https://docs.medusajs.com/api/store#product-types).\n\nProduct types are string values that can be used to filter products by.\nProducts can have more than one tag, and products can share types."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 629,
									"name": "useProductTypes",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 630,
											"name": "useProductTypes",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of product types. The product types can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`value`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`q`"
													},
													{
														"kind": "text",
														"text": " passed \nin the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter. The product types can also be sorted or paginated."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list product types:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useProductTypes } from \"medusa-react\"\n\nfunction Types() {\n  const { \n    product_types, \n    isLoading,\n  } = useProductTypes()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {product_types && !product_types.length && (\n        <span>No Product Types</span>\n      )}\n      {product_types && product_types.length > 0 && (\n        <ul>\n          {product_types.map(\n            (type) => (\n              <li key={type.id}>{type.value}</li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Types\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`20`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useProductTypes } from \"medusa-react\"\n\nfunction Types() {\n  const { \n    product_types,\n    limit,\n    offset, \n    isLoading,\n  } = useProductTypes({\n    limit: 10,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {product_types && !product_types.length && (\n        <span>No Product Types</span>\n      )}\n      {product_types && product_types.length > 0 && (\n        <ul>\n          {product_types.map(\n            (type) => (\n              <li key={type.id}>{type.value}</li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Types\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 631,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on retrieved product types."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-types/list-product-types.d.ts",
															"qualifiedName": "StoreGetProductTypesParams"
														},
														"name": "StoreGetProductTypesParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 632,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-types/index.d.ts",
																			"qualifiedName": "StoreProductTypesListRes"
																		},
																		"name": "StoreProductTypesListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "product_types"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 633,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 634,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						634
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 635,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 640,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 639,
																	"name": "product_types",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-type.d.ts",
																				"qualifiedName": "ProductType"
																			},
																			"name": "ProductType",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 636,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 637,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 638,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		640,
																		639,
																		636,
																		637,
																		638
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 641,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 646,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 645,
																	"name": "product_types",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-type.d.ts",
																				"qualifiedName": "ProductType"
																			},
																			"name": "ProductType",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 642,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 643,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 644,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		646,
																		645,
																		642,
																		643,
																		644
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 647,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 652,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 651,
																	"name": "product_types",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-type.d.ts",
																				"qualifiedName": "ProductType"
																			},
																			"name": "ProductType",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 648,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 649,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 650,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		652,
																		651,
																		648,
																		649,
																		650
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 653,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 658,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 657,
																	"name": "product_types",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/product-type.d.ts",
																				"qualifiedName": "ProductType"
																			},
																			"name": "ProductType",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 654,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 655,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 656,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		658,
																		657,
																		654,
																		655,
																		656
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										629
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										629
									]
								}
							]
						},
						{
							"id": 59,
							"name": "Products",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries listed here are used to send requests to the [Store Product API Routes](https://docs.medusajs.com/api/store#products).\n\nProducts are saleable items in a store. This also includes [saleable gift cards](https://docs.medusajs.com/modules/gift-cards/storefront/use-gift-cards) in a store.\nUsing the methods in this class, you can filter products by categories, collections, sales channels, and more.\n\nRelated Guide: [How to show products in a storefront](https://docs.medusajs.com/modules/products/storefront/show-products)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 660,
									"name": "useProducts",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 661,
											"name": "useProducts",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of products. The products can be filtered by fields such as "
													},
													{
														"kind": "code",
														"text": "`id`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`q`"
													},
													{
														"kind": "text",
														"text": " passed in the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter. The products can also be sorted or paginated.\nThis hook can also be used to retrieve a product by its handle.\n\nFor accurate and correct pricing of the products based on the customer's context, it's highly recommended to pass fields such as\n"
													},
													{
														"kind": "code",
														"text": "`region_id`"
													},
													{
														"kind": "text",
														"text": ", "
													},
													{
														"kind": "code",
														"text": "`currency_code`"
													},
													{
														"kind": "text",
														"text": ", and "
													},
													{
														"kind": "code",
														"text": "`cart_id`"
													},
													{
														"kind": "text",
														"text": " when available.\n\nPassing "
													},
													{
														"kind": "code",
														"text": "`sales_channel_id`"
													},
													{
														"kind": "text",
														"text": " ensures retrieving only products available in the specified sales channel.\nYou can alternatively use a publishable API key in the request header instead of passing a "
													},
													{
														"kind": "code",
														"text": "`sales_channel_id`"
													},
													{
														"kind": "text",
														"text": "."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "To list products:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useProducts } from \"medusa-react\"\n\nconst Products = () => {\n  const { products, isLoading } = useProducts()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {products && !products.length && <span>No Products</span>}\n      {products && products.length > 0 && (\n        <ul>\n          {products.map((product) => (\n            <li key={product.id}>{product.title}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Products\n```"
															},
															{
																"kind": "text",
																"text": "\n\nTo specify relations that should be retrieved within the products:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useProducts } from \"medusa-react\"\n\nconst Products = () => {\n  const { products, isLoading } = useProducts({\n    expand: \"variants\"\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {products && !products.length && <span>No Products</span>}\n      {products && products.length > 0 && (\n        <ul>\n          {products.map((product) => (\n            <li key={product.id}>{product.title}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Products\n```"
															},
															{
																"kind": "text",
																"text": "\n\nBy default, only the first "
															},
															{
																"kind": "code",
																"text": "`100`"
															},
															{
																"kind": "text",
																"text": " records are retrieved. You can control pagination by specifying the "
															},
															{
																"kind": "code",
																"text": "`limit`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`offset`"
															},
															{
																"kind": "text",
																"text": " properties:\n\n"
															},
															{
																"kind": "code",
																"text": "```tsx\nimport React from \"react\"\nimport { useProducts } from \"medusa-react\"\n\nconst Products = () => {\n  const { \n    products,\n    limit,\n    offset, \n    isLoading\n  } = useProducts({\n    expand: \"variants\",\n    limit: 50,\n    offset: 0\n  })\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {products && !products.length && <span>No Products</span>}\n      {products && products.length > 0 && (\n        <ul>\n          {products.map((product) => (\n            <li key={product.id}>{product.title}</li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Products\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 662,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Filters and pagination configurations to apply on the retrieved products."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/products/list-products.d.ts",
															"qualifiedName": "StoreGetProductsParams"
														},
														"name": "StoreGetProductsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 663,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/products/index.d.ts",
																			"qualifiedName": "StoreProductsListRes"
																		},
																		"name": "StoreProductsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "products"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 664,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 665,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "union",
																						"types": [
																							{
																								"type": "intrinsic",
																								"name": "undefined"
																							},
																							{
																								"type": "reference",
																								"target": {
																									"sourceFileName": "../../../packages/medusa/dist/api/routes/store/products/list-products.d.ts",
																									"qualifiedName": "StoreGetProductsParams"
																								},
																								"name": "StoreGetProductsParams",
																								"package": "@medusajs/medusa"
																							}
																						]
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						665
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 666,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 671,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 670,
																	"name": "products",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																				"qualifiedName": "PricedProduct"
																			},
																			"name": "PricedProduct",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 667,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 668,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 669,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		671,
																		670,
																		667,
																		668,
																		669
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 672,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 677,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 676,
																	"name": "products",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																				"qualifiedName": "PricedProduct"
																			},
																			"name": "PricedProduct",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 673,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 674,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 675,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		677,
																		676,
																		673,
																		674,
																		675
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 678,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 683,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 682,
																	"name": "products",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																				"qualifiedName": "PricedProduct"
																			},
																			"name": "PricedProduct",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 679,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 680,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 681,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		683,
																		682,
																		679,
																		680,
																		681
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 684,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 689,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 688,
																	"name": "products",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																				"qualifiedName": "PricedProduct"
																			},
																			"name": "PricedProduct",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 685,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The maximum number of items that can be returned in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 686,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The number of items skipped before the returned items in the list."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 687,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "The total number of items available."
																			}
																		]
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		689,
																		688,
																		685,
																		686,
																		687
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 690,
									"name": "useProduct",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 691,
											"name": "useProduct",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a Product's details. For accurate and correct pricing of the product based on the customer's context, it's highly recommended to pass fields such as\n"
													},
													{
														"kind": "code",
														"text": "`region_id`"
													},
													{
														"kind": "text",
														"text": ", "
													},
													{
														"kind": "code",
														"text": "`currency_code`"
													},
													{
														"kind": "text",
														"text": ", and "
													},
													{
														"kind": "code",
														"text": "`cart_id`"
													},
													{
														"kind": "text",
														"text": " when available.\n\nPassing "
													},
													{
														"kind": "code",
														"text": "`sales_channel_id`"
													},
													{
														"kind": "text",
														"text": " ensures retrieving only products available in the current sales channel.\nYou can alternatively use a publishable API key in the request header instead of passing a "
													},
													{
														"kind": "code",
														"text": "`sales_channel_id`"
													},
													{
														"kind": "text",
														"text": "."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useProduct } from \"medusa-react\"\n\ntype Props = {\n  productId: string\n}\n\nconst Product = ({ productId }: Props) => {\n  const { product, isLoading } = useProduct(productId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {product && <span>{product.title}</span>}\n    </div>\n  )\n}\n\nexport default Product\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 692,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The product's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 693,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/products/index.d.ts",
																			"qualifiedName": "StoreProductsRes"
																		},
																		"name": "StoreProductsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "products"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 694,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 696,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 695,
																	"name": "product",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																			"qualifiedName": "PricedProduct"
																		},
																		"name": "PricedProduct",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		696,
																		695
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 697,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 699,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 698,
																	"name": "product",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																			"qualifiedName": "PricedProduct"
																		},
																		"name": "PricedProduct",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		699,
																		698
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 700,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 702,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 701,
																	"name": "product",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																			"qualifiedName": "PricedProduct"
																		},
																		"name": "PricedProduct",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		702,
																		701
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 703,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 705,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 704,
																	"name": "product",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																			"qualifiedName": "PricedProduct"
																		},
																		"name": "PricedProduct",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		705,
																		704
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										660,
										690
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										660,
										690
									]
								}
							]
						},
						{
							"id": 60,
							"name": "Regions",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries listed here are used to send requests to the [Store Region API Routes](https://docs.medusajs.com/api/store#regions_getregions).\n\nRegions are different countries or geographical regions that the commerce store serves customers in.\nCustomers can choose what region they're in, which can be used to change the prices shown based on the region and its currency.\n\nRelated Guide: [How to use regions in a storefront](https://docs.medusajs.com/modules/regions-and-currencies/storefront/use-regions)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 706,
									"name": "useRegions",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 707,
											"name": "useRegions",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of regions. This hook is useful to show the customer all available regions to choose from."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useRegions } from \"medusa-react\"\n\nconst Regions = () => {\n  const { regions, isLoading } = useRegions()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {regions?.length && (\n        <ul>\n          {regions.map((region) => (\n            <li key={region.id}>\n              {region.name}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default Regions\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 708,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/regions/index.d.ts",
																			"qualifiedName": "StoreRegionsListRes"
																		},
																		"name": "StoreRegionsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "regions"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 709,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 714,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 713,
																	"name": "regions",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/region.d.ts",
																				"qualifiedName": "Region"
																			},
																			"name": "Region",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 710,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 711,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 712,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		714,
																		713,
																		710,
																		711,
																		712
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 715,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 720,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 719,
																	"name": "regions",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/region.d.ts",
																				"qualifiedName": "Region"
																			},
																			"name": "Region",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 716,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 717,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 718,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		720,
																		719,
																		716,
																		717,
																		718
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 721,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 726,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 725,
																	"name": "regions",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/region.d.ts",
																				"qualifiedName": "Region"
																			},
																			"name": "Region",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 722,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 723,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 724,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		726,
																		725,
																		722,
																		723,
																		724
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 727,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 732,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 731,
																	"name": "regions",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/region.d.ts",
																				"qualifiedName": "Region"
																			},
																			"name": "Region",
																			"package": "@medusajs/medusa"
																		}
																	}
																},
																{
																	"id": 728,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 729,
																	"name": "offset",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 730,
																	"name": "count",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		732,
																		731,
																		728,
																		729,
																		730
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 733,
									"name": "useRegion",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 734,
											"name": "useRegion",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a Region's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useRegion } from \"medusa-react\"\n\ntype Props = {\n  regionId: string\n}\n\nconst Region = ({ regionId }: Props) => {\n  const { region, isLoading } = useRegion(\n    regionId\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {region && <span>{region.name}</span>}\n    </div>\n  )\n}\n\nexport default Region\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 735,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The region's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 736,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/regions/index.d.ts",
																			"qualifiedName": "StoreRegionsRes"
																		},
																		"name": "StoreRegionsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "regions"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 737,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 739,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 738,
																	"name": "region",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/region.d.ts",
																			"qualifiedName": "Region"
																		},
																		"name": "Region",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		739,
																		738
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 740,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 742,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 741,
																	"name": "region",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/region.d.ts",
																			"qualifiedName": "Region"
																		},
																		"name": "Region",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		742,
																		741
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 743,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 745,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 744,
																	"name": "region",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/region.d.ts",
																			"qualifiedName": "Region"
																		},
																		"name": "Region",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		745,
																		744
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 746,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 748,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 747,
																	"name": "region",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/region.d.ts",
																			"qualifiedName": "Region"
																		},
																		"name": "Region",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		748,
																		747
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										706,
										733
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										706,
										733
									]
								}
							]
						},
						{
							"id": 61,
							"name": "Return Reasons",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries listed here are used to send requests to the [Store Return Reason API Routes](https://docs.medusajs.com/api/store#return-reasons).\n\nReturn reasons are key-value pairs that are used to specify why an order return is being created."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 749,
									"name": "useReturnReasons",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 750,
											"name": "useReturnReasons",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of Return Reasons. This is useful when implementing a Create Return flow in the storefront."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useReturnReasons } from \"medusa-react\"\n\nconst ReturnReasons = () => {\n  const { \n    return_reasons, \n    isLoading\n  } = useReturnReasons()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {return_reasons?.length && (\n        <ul>\n          {return_reasons.map((returnReason) => (\n            <li key={returnReason.id}>\n              {returnReason.label}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default ReturnReasons\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 751,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/return-reasons/index.d.ts",
																			"qualifiedName": "StoreReturnReasonsListRes"
																		},
																		"name": "StoreReturnReasonsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "return_reasons"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 752,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 754,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 753,
																	"name": "return_reasons",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/return-reason.d.ts",
																				"qualifiedName": "ReturnReason"
																			},
																			"name": "ReturnReason",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		754,
																		753
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 755,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 757,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 756,
																	"name": "return_reasons",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/return-reason.d.ts",
																				"qualifiedName": "ReturnReason"
																			},
																			"name": "ReturnReason",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		757,
																		756
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 758,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 760,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 759,
																	"name": "return_reasons",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/return-reason.d.ts",
																				"qualifiedName": "ReturnReason"
																			},
																			"name": "ReturnReason",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		760,
																		759
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 761,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 763,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 762,
																	"name": "return_reasons",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/models/return-reason.d.ts",
																				"qualifiedName": "ReturnReason"
																			},
																			"name": "ReturnReason",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		763,
																		762
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 764,
									"name": "useReturnReason",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 765,
											"name": "useReturnReason",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a Return Reason's details."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useReturnReason } from \"medusa-react\"\n\ntype Props = {\n  returnReasonId: string\n}\n\nconst ReturnReason = ({ returnReasonId }: Props) => {\n  const { \n    return_reason, \n    isLoading\n  } = useReturnReason(\n    returnReasonId\n  )\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {return_reason && <span>{return_reason.label}</span>}\n    </div>\n  )\n}\n\nexport default ReturnReason\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 766,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The return reason's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 767,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/return-reasons/index.d.ts",
																			"qualifiedName": "StoreReturnReasonsRes"
																		},
																		"name": "StoreReturnReasonsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "return_reasons"
																	},
																	{
																		"type": "literal",
																		"value": "detail"
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 768,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 770,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 769,
																	"name": "return_reason",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/return-reason.d.ts",
																			"qualifiedName": "ReturnReason"
																		},
																		"name": "ReturnReason",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		770,
																		769
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 771,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 773,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 772,
																	"name": "return_reason",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/return-reason.d.ts",
																			"qualifiedName": "ReturnReason"
																		},
																		"name": "ReturnReason",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		773,
																		772
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 774,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 776,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 775,
																	"name": "return_reason",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/return-reason.d.ts",
																			"qualifiedName": "ReturnReason"
																		},
																		"name": "ReturnReason",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		776,
																		775
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 777,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 779,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 778,
																	"name": "return_reason",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/return-reason.d.ts",
																			"qualifiedName": "ReturnReason"
																		},
																		"name": "ReturnReason",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		779,
																		778
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										749,
										764
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										749,
										764
									]
								}
							]
						},
						{
							"id": 62,
							"name": "Returns",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Mutations listed here are used to send requests to the [Store Return API Routes](https://docs.medusajs.com/api/store#returns).\n\nA return can be created by a customer to return items in an order.\n\nRelated Guide: [How to create a return in a storefront](https://docs.medusajs.com/modules/orders/storefront/create-return)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 780,
									"name": "useCreateReturn",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 781,
											"name": "useCreateReturn",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a return for an order. If a return shipping method is specified, the return is automatically fulfilled."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useCreateReturn } from \"medusa-react\"\n\ntype CreateReturnData = {\n  items: {\n    item_id: string,\n    quantity: number\n  }[]\n  return_shipping: {\n    option_id: string\n  }\n}\n\ntype Props = {\n  orderId: string\n}\n\nconst CreateReturn = ({ orderId }: Props) => {\n  const createReturn = useCreateReturn()\n  // ...\n\n  const handleCreate = (data: CreateReturnData) => {\n    createReturn.mutate({\n      ...data,\n      order_id: orderId\n    }, {\n      onSuccess: ({ return: returnData }) => {\n        console.log(returnData.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateReturn\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 782,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/returns/index.d.ts",
																	"qualifiedName": "StoreReturnsRes"
																},
																"name": "StoreReturnsRes",
																"package": "@medusajs/medusa"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/returns/create-return.d.ts",
																	"qualifiedName": "StorePostReturnsReq"
																},
																"name": "StorePostReturnsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/returns/index.d.ts",
																	"qualifiedName": "StoreReturnsRes"
																},
																"name": "StoreReturnsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/returns/create-return.d.ts",
															"qualifiedName": "StorePostReturnsReq"
														},
														"name": "StorePostReturnsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										780
									]
								}
							],
							"categories": [
								{
									"title": "Mutations",
									"children": [
										780
									]
								}
							]
						},
						{
							"id": 63,
							"name": "Shipping Options",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries listed here are used to send requests to the [Store Shipping Option API Routes](https://docs.medusajs.com/api/store#shipping-options).\n\nA shipping option is used to define the available shipping methods during checkout or when creating a return.\n\nRelated Guide: [Shipping Option architecture](https://docs.medusajs.com/modules/carts-and-checkout/shipping#shipping-option)."
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 783,
									"name": "useShippingOptions",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 784,
											"name": "useShippingOptions",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of shipping options. The shipping options can be filtered using the "
													},
													{
														"kind": "code",
														"text": "`query`"
													},
													{
														"kind": "text",
														"text": " parameter."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useShippingOptions } from \"medusa-react\"\n\nconst ShippingOptions = () => {\n  const { \n    shipping_options, \n    isLoading, \n  } = useShippingOptions()\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {shipping_options?.length && \n        shipping_options?.length > 0 && (\n        <ul>\n          {shipping_options?.map((shipping_option) => (\n            <li key={shipping_option.id}>\n              {shipping_option.id}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default ShippingOptions\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 785,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The filters to apply on the shipping options."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/shipping-options/list-options.d.ts",
															"qualifiedName": "StoreGetShippingOptionsParams"
														},
														"name": "StoreGetShippingOptionsParams",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 786,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/shipping-options/index.d.ts",
																			"qualifiedName": "StoreShippingOptionsListRes"
																		},
																		"name": "StoreShippingOptionsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "literal",
																		"value": "shipping_options"
																	},
																	{
																		"type": "literal",
																		"value": "list"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 787,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 788,
																					"name": "query",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						788
																					]
																				}
																			]
																		}
																	}
																]
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 789,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 791,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 790,
																	"name": "shipping_options",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																				"qualifiedName": "PricedShippingOption"
																			},
																			"name": "PricedShippingOption",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		791,
																		790
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 792,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 794,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 793,
																	"name": "shipping_options",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																				"qualifiedName": "PricedShippingOption"
																			},
																			"name": "PricedShippingOption",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		794,
																		793
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 795,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 797,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 796,
																	"name": "shipping_options",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																				"qualifiedName": "PricedShippingOption"
																			},
																			"name": "PricedShippingOption",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		797,
																		796
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 798,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 800,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 799,
																	"name": "shipping_options",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																				"qualifiedName": "PricedShippingOption"
																			},
																			"name": "PricedShippingOption",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		800,
																		799
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 801,
									"name": "useCartShippingOptions",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 802,
											"name": "useCartShippingOptions",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a list of shipping options available for a cart."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useCartShippingOptions } from \"medusa-react\"\n\ntype Props = {\n  cartId: string\n}\n\nconst ShippingOptions = ({ cartId }: Props) => {\n  const { shipping_options, isLoading } =\n    useCartShippingOptions(cartId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {shipping_options && !shipping_options.length && (\n        <span>No shipping options</span>\n      )}\n      {shipping_options && (\n        <ul>\n          {shipping_options.map(\n            (shipping_option) => (\n              <li key={shipping_option.id}>\n                {shipping_option.name}\n              </li>\n            )\n          )}\n        </ul>\n      )}\n    </div>\n  )\n}\n\nexport default ShippingOptions\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 803,
													"name": "cartId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The cart's ID."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 804,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/shipping-options/index.d.ts",
																			"qualifiedName": "StoreShippingOptionsListRes"
																		},
																		"name": "StoreShippingOptionsListRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "typeOperator",
																"operator": "readonly",
																"target": {
																	"type": "tuple",
																	"elements": [
																		{
																			"type": "literal",
																			"value": "shipping_options"
																		},
																		{
																			"type": "literal",
																			"value": "cart"
																		},
																		{
																			"type": "intrinsic",
																			"name": "string"
																		}
																	]
																}
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 805,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 807,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 806,
																	"name": "shipping_options",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																				"qualifiedName": "PricedShippingOption"
																			},
																			"name": "PricedShippingOption",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		807,
																		806
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 808,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 810,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 809,
																	"name": "shipping_options",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																				"qualifiedName": "PricedShippingOption"
																			},
																			"name": "PricedShippingOption",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		810,
																		809
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 811,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 813,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 812,
																	"name": "shipping_options",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																				"qualifiedName": "PricedShippingOption"
																			},
																			"name": "PricedShippingOption",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		813,
																		812
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 814,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 816,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 815,
																	"name": "shipping_options",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../packages/medusa/dist/types/pricing.d.ts",
																				"qualifiedName": "PricedShippingOption"
																			},
																			"name": "PricedShippingOption",
																			"package": "@medusajs/medusa"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		816,
																		815
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										783,
										801
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										783,
										801
									]
								}
							]
						},
						{
							"id": 64,
							"name": "Swaps",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Queries and Mutations listed here are used to send requests to the [Store Swap API Routes](https://docs.medusajs.com/api/store#swaps).\n\nA swap is created by a customer or an admin to exchange an item with a new one.\nCreating a swap implicitely includes creating a return for the item being exchanged.\n\nRelated Guide: [How to create a swap in a storefront](https://docs.medusajs.com/modules/orders/storefront/create-swap)"
									}
								],
								"modifierTags": [
									"@packageDocumentation"
								]
							},
							"children": [
								{
									"id": 833,
									"name": "useCreateSwap",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 834,
											"name": "useCreateSwap",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook creates a Swap for an Order. This will also create a return and associate it with the swap. If a return shipping option is specified, the return will automatically be fulfilled.\nTo complete the swap, you must use the "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "useCompleteCart",
														"target": 202
													},
													{
														"kind": "text",
														"text": " hook passing it the ID of the swap's cart.\n\nAn idempotency key will be generated if none is provided in the header "
													},
													{
														"kind": "code",
														"text": "`Idempotency-Key`"
													},
													{
														"kind": "text",
														"text": " and added to\nthe response. If an error occurs during swap creation or the request is interrupted for any reason, the swap creation can be retried by passing the idempotency\nkey in the "
													},
													{
														"kind": "code",
														"text": "`Idempotency-Key`"
													},
													{
														"kind": "text",
														"text": " header."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useCreateSwap } from \"medusa-react\"\n\ntype Props = {\n  orderId: string\n}\n\ntype CreateData = {\n  return_items: {\n    item_id: string\n    quantity: number\n  }[]\n  additional_items: {\n    variant_id: string\n    quantity: number\n  }[]\n  return_shipping_option: string\n}\n\nconst CreateSwap = ({\n  orderId\n}: Props) => {\n  const createSwap = useCreateSwap()\n  // ...\n\n  const handleCreate = (\n    data: CreateData\n  ) => {\n    createSwap.mutate({\n      ...data,\n      order_id: orderId\n    }, {\n      onSuccess: ({ swap }) => {\n        console.log(swap.id)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default CreateSwap\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Mutations"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 835,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
															"qualifiedName": "UseMutationOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/swaps/index.d.ts",
																	"qualifiedName": "StoreSwapsRes"
																},
																"name": "StoreSwapsRes",
																"package": "@medusajs/medusa"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/swaps/create-swap.d.ts",
																	"qualifiedName": "StorePostSwapsReq"
																},
																"name": "StorePostSwapsReq",
																"package": "@medusajs/medusa"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "UseMutationOptions",
														"package": "@tanstack/react-query"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
													"qualifiedName": "UseMutationResult"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
															"qualifiedName": "Response"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/dist/api/routes/store/swaps/index.d.ts",
																	"qualifiedName": "StoreSwapsRes"
																},
																"name": "StoreSwapsRes",
																"package": "@medusajs/medusa"
															}
														],
														"name": "Response",
														"package": "@medusajs/medusa-js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/swaps/create-swap.d.ts",
															"qualifiedName": "StorePostSwapsReq"
														},
														"name": "StorePostSwapsReq",
														"package": "@medusajs/medusa"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "UseMutationResult",
												"package": "@tanstack/react-query"
											}
										}
									]
								},
								{
									"id": 817,
									"name": "useCartSwap",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"signatures": [
										{
											"id": 818,
											"name": "useCartSwap",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This hook retrieves a Swap's details by the ID of its cart."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nimport React from \"react\"\nimport { useCartSwap } from \"medusa-react\"\n\ntype Props = {\n  cartId: string\n}\n\nconst Swap = ({ cartId }: Props) => {\n  const { \n    swap, \n    isLoading, \n  } = useCartSwap(cartId)\n\n  return (\n    <div>\n      {isLoading && <span>Loading...</span>}\n      {swap && <span>{swap.id}</span>}\n      \n    </div>\n  )\n}\n\nexport default Swap\n```"
															}
														]
													},
													{
														"tag": "@category",
														"content": [
															{
																"kind": "text",
																"text": "Queries"
															}
														]
													}
												]
											},
											"parameters": [
												{
													"id": 819,
													"name": "cartId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The ID of the swap's cart."
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 820,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa-react/src/types.ts",
															"qualifiedName": "UseQueryOptionsWrapper"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																	"qualifiedName": "Response"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/swaps/index.d.ts",
																			"qualifiedName": "StoreSwapsRes"
																		},
																		"name": "StoreSwapsRes",
																		"package": "@medusajs/medusa"
																	}
																],
																"name": "Response",
																"package": "@medusajs/medusa-js"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															},
															{
																"type": "typeOperator",
																"operator": "readonly",
																"target": {
																	"type": "tuple",
																	"elements": [
																		{
																			"type": "literal",
																			"value": "swaps"
																		},
																		{
																			"type": "literal",
																			"value": "cart"
																		},
																		{
																			"type": "intrinsic",
																			"name": "string"
																		}
																	]
																}
															}
														],
														"name": "UseQueryOptionsWrapper",
														"package": "medusa-react"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 821,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 823,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 822,
																	"name": "swap",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/swap.d.ts",
																			"qualifiedName": "Swap"
																		},
																		"name": "Swap",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		823,
																		822
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 824,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 826,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 825,
																	"name": "swap",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/swap.d.ts",
																			"qualifiedName": "Swap"
																		},
																		"name": "Swap",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		826,
																		825
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 827,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 829,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 828,
																	"name": "swap",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/swap.d.ts",
																			"qualifiedName": "Swap"
																		},
																		"name": "Swap",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		829,
																		828
																	]
																}
															]
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 830,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 832,
																	"name": "response",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
																			"qualifiedName": "HTTPResponse"
																		},
																		"name": "HTTPResponse",
																		"package": "@medusajs/medusa-js"
																	}
																},
																{
																	"id": 831,
																	"name": "swap",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true,
																		"isReadonly": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../packages/medusa/dist/models/swap.d.ts",
																			"qualifiedName": "Swap"
																		},
																		"name": "Swap",
																		"package": "@medusajs/medusa"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		832,
																		831
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										833,
										817
									]
								}
							],
							"categories": [
								{
									"title": "Queries",
									"children": [
										817
									]
								},
								{
									"title": "Mutations",
									"children": [
										833
									]
								}
							]
						}
					],
					"groups": [
						{
							"title": "Namespaces",
							"children": [
								48,
								49,
								50,
								51,
								52,
								53,
								54,
								55,
								56,
								57,
								58,
								59,
								60,
								61,
								62,
								63,
								64
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Namespaces",
					"children": [
						7,
						47
					]
				}
			]
		},
		{
			"id": 156,
			"name": "CartContext",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The cart context available if the "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "CartProvider",
						"target": 174,
						"tsLinkText": ""
					},
					{
						"kind": "text",
						"text": " is used previously in the React components tree."
					}
				]
			},
			"children": [
				{
					"id": 168,
					"name": "cart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The currently-used cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/dist/models/cart.d.ts",
									"qualifiedName": "Cart"
								},
								"name": "Cart",
								"package": "@medusajs/medusa"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "refundable_amount"
									},
									{
										"type": "literal",
										"value": "refunded_total"
									}
								]
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "CartState.cart"
					}
				},
				{
					"id": 157,
					"name": "setCart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A state function used to set the cart object."
							}
						],
						"blockTags": [
							{
								"tag": "@param",
								"name": "cart",
								"content": [
									{
										"kind": "text",
										"text": "The new value of the cart."
									}
								]
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 158,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 159,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A state function used to set the cart object."
											}
										]
									},
									"parameters": [
										{
											"id": 160,
											"name": "cart",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The new value of the cart."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Omit"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/models/cart.d.ts",
															"qualifiedName": "Cart"
														},
														"name": "Cart",
														"package": "@medusajs/medusa"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "refundable_amount"
															},
															{
																"type": "literal",
																"value": "refunded_total"
															}
														]
													}
												],
												"name": "Omit",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 161,
					"name": "pay",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A mutation used to select a payment processor during checkout.\nUsing it is equivalent to using the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "useSetPaymentSession",
								"target": 224,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": " mutation."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
									"qualifiedName": "Response"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
											"qualifiedName": "StoreCartsRes"
										},
										"name": "StoreCartsRes",
										"package": "@medusajs/medusa"
									}
								],
								"name": "Response",
								"package": "@medusajs/medusa-js"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Error"
								},
								"name": "Error",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/set-payment-session.d.ts",
									"qualifiedName": "StorePostCartsCartPaymentSessionReq"
								},
								"name": "StorePostCartsCartPaymentSessionReq",
								"package": "@medusajs/medusa"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				},
				{
					"id": 162,
					"name": "createCart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A mutation used to create a cart.\nUsing it is equivalent to using the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "useCreateCart",
								"target": 195,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": " mutation."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
									"qualifiedName": "Response"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
											"qualifiedName": "StoreCartsRes"
										},
										"name": "StoreCartsRes",
										"package": "@medusajs/medusa"
									}
								],
								"name": "Response",
								"package": "@medusajs/medusa-js"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Error"
								},
								"name": "Error",
								"package": "typescript"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/create-cart.d.ts",
											"qualifiedName": "StorePostCartReq"
										},
										"name": "StorePostCartReq",
										"package": "@medusajs/medusa"
									}
								]
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				},
				{
					"id": 163,
					"name": "startCheckout",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A mutation used to initialize payment sessions during checkout.\nUsing it is equivalent to using the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "useCreatePaymentSession",
								"target": 206,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": " mutation."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
									"qualifiedName": "Response"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
											"qualifiedName": "StoreCartsRes"
										},
										"name": "StoreCartsRes",
										"package": "@medusajs/medusa"
									}
								],
								"name": "Response",
								"package": "@medusajs/medusa-js"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Error"
								},
								"name": "Error",
								"package": "typescript"
							},
							{
								"type": "intrinsic",
								"name": "void"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				},
				{
					"id": 164,
					"name": "completeCheckout",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A mutation used to complete the cart and place the order.\nUsing it is equivalent to using the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "useCompleteCart",
								"target": 202,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": " mutation."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
									"qualifiedName": "Response"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
											"qualifiedName": "StoreCompleteCartRes"
										},
										"name": "StoreCompleteCartRes",
										"package": "@medusajs/medusa"
									}
								],
								"name": "Response",
								"package": "@medusajs/medusa-js"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Error"
								},
								"name": "Error",
								"package": "typescript"
							},
							{
								"type": "intrinsic",
								"name": "void"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				},
				{
					"id": 165,
					"name": "updateCart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A mutation used to update a cart’s details such as region, customer email, shipping address, and more.\nUsing it is equivalent to using the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "useUpdateCart",
								"target": 198,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": " mutation."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
									"qualifiedName": "Response"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
											"qualifiedName": "StoreCartsRes"
										},
										"name": "StoreCartsRes",
										"package": "@medusajs/medusa"
									}
								],
								"name": "Response",
								"package": "@medusajs/medusa-js"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Error"
								},
								"name": "Error",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/update-cart.d.ts",
									"qualifiedName": "StorePostCartsCartReq"
								},
								"name": "StorePostCartsCartReq",
								"package": "@medusajs/medusa"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				},
				{
					"id": 166,
					"name": "addShippingMethod",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A mutation used to add a shipping method to the cart during checkout.\nUsing it is equivalent to using the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "useAddShippingMethodToCart",
								"target": 228,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": " mutation."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
									"qualifiedName": "Response"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
											"qualifiedName": "StoreCartsRes"
										},
										"name": "StoreCartsRes",
										"package": "@medusajs/medusa"
									}
								],
								"name": "Response",
								"package": "@medusajs/medusa-js"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Error"
								},
								"name": "Error",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/add-shipping-method.d.ts",
									"qualifiedName": "StorePostCartsCartShippingMethodReq"
								},
								"name": "StorePostCartsCartShippingMethodReq",
								"package": "@medusajs/medusa"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				},
				{
					"id": 167,
					"name": "totalItems",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items in the cart."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						168,
						157,
						161,
						162,
						163,
						164,
						165,
						166,
						167
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../packages/medusa-react/src/contexts/cart.tsx",
						"qualifiedName": "CartState"
					},
					"name": "CartState",
					"package": "medusa-react"
				}
			]
		},
		{
			"id": 171,
			"name": "CartProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 173,
					"name": "initialState",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional initial value to be used for the cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/dist/models/cart.d.ts",
									"qualifiedName": "Cart"
								},
								"name": "Cart",
								"package": "@medusajs/medusa"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "refundable_amount"
									},
									{
										"type": "literal",
										"value": "refunded_total"
									}
								]
							}
						],
						"name": "Omit",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						173
					]
				}
			]
		},
		{
			"id": 65,
			"name": "MedusaContextState",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 66,
					"name": "client",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Medusa JS Client instance."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
							"qualifiedName": "Medusa"
						},
						"name": "Medusa",
						"package": "@medusajs/medusa-js"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						66
					]
				}
			]
		},
		{
			"id": 69,
			"name": "MedusaProviderProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 70,
					"name": "baseUrl",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL to your Medusa backend."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 71,
					"name": "queryClientProviderProps",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to set the Tanstack Query client. The object requires a "
							},
							{
								"kind": "code",
								"text": "`client`"
							},
							{
								"kind": "text",
								"text": " property, \nwhich should be an instance of [QueryClient](https://tanstack.com/query/v4/docs/react/reference/QueryClient)."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/QueryClientProvider.d.ts",
							"qualifiedName": "QueryClientProviderProps"
						},
						"name": "QueryClientProviderProps",
						"package": "@tanstack/react-query"
					}
				},
				{
					"id": 73,
					"name": "apiKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "API key used for authenticating admin requests. Follow [this guide](https://docs.medusajs.com/api/admin#authentication) to learn how to create an API key for an admin user."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 74,
					"name": "publishableApiKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Publishable API key used for storefront requests. You can create a publishable API key either using the \n[admin APIs](https://docs.medusajs.com/development/publishable-api-keys/admin/manage-publishable-api-keys) or the \n[Medusa admin](https://docs.medusajs.com/user-guide/settings/publishable-api-keys#create-publishable-api-key)."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 75,
					"name": "maxRetries",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Number of times to retry a request if it fails."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n3\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 76,
					"name": "customHeaders",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object of custom headers to pass with every request. Each key of the object is the name of the header, and its value is the header's value."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "`{}`"
									}
								]
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						70,
						71,
						73,
						74,
						75,
						76
					]
				}
			]
		},
		{
			"id": 80,
			"name": "Item",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A session cart's item."
					}
				]
			},
			"children": [
				{
					"id": 81,
					"name": "variant",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product variant represented by this item in the cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa-react/src/types.ts",
							"qualifiedName": "ConvertDateToString"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/dist/models/product-variant.d.ts",
											"qualifiedName": "ProductVariant"
										},
										"name": "ProductVariant",
										"package": "@medusajs/medusa"
									},
									{
										"type": "literal",
										"value": "beforeInsert"
									}
								],
								"name": "Omit",
								"package": "typescript"
							}
						],
						"name": "ConvertDateToString",
						"package": "medusa-react"
					}
				},
				{
					"id": 82,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity added in the cart."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 83,
					"name": "total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total amount of the item in the cart."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						81,
						82,
						83
					]
				}
			]
		},
		{
			"id": 84,
			"name": "SessionCartState",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 85,
					"name": "region",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The region of the cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3405,
						"name": "RegionInfo",
						"package": "medusa-react"
					}
				},
				{
					"id": 86,
					"name": "items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The items in the cart."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 80,
							"name": "Item",
							"package": "medusa-react"
						}
					}
				},
				{
					"id": 87,
					"name": "totalItems",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total items in the cart."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 88,
					"name": "total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total amount of the cart."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						85,
						86,
						87,
						88
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 89,
					"name": "SessionCartContextState"
				}
			]
		},
		{
			"id": 89,
			"name": "SessionCartContextState",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 131,
					"name": "region",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The region of the cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3405,
						"name": "RegionInfo",
						"package": "medusa-react"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 85,
						"name": "SessionCartState.region"
					}
				},
				{
					"id": 132,
					"name": "items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The items in the cart."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 80,
							"name": "Item",
							"package": "medusa-react"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 86,
						"name": "SessionCartState.items"
					}
				},
				{
					"id": 133,
					"name": "totalItems",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total items in the cart."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 87,
						"name": "SessionCartState.totalItems"
					}
				},
				{
					"id": 134,
					"name": "total",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total amount of the cart."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 88,
						"name": "SessionCartState.total"
					}
				},
				{
					"id": 90,
					"name": "setRegion",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A state function used to set the region."
							}
						],
						"blockTags": [
							{
								"tag": "@param",
								"name": "region",
								"content": [
									{
										"kind": "text",
										"text": "The new value of the region."
									}
								]
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 91,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 92,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A state function used to set the region."
											}
										]
									},
									"parameters": [
										{
											"id": 93,
											"name": "region",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The new value of the region."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 3405,
												"name": "RegionInfo",
												"package": "medusa-react"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 94,
					"name": "addItem",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This function adds an item to the session cart."
							}
						],
						"blockTags": [
							{
								"tag": "@param",
								"name": "item",
								"content": [
									{
										"kind": "text",
										"text": "The item to add."
									}
								]
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 95,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 96,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This function adds an item to the session cart."
											}
										]
									},
									"parameters": [
										{
											"id": 97,
											"name": "item",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The item to add."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 80,
												"name": "Item",
												"package": "medusa-react"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 98,
					"name": "removeItem",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This function removes an item from the session cart."
							}
						],
						"blockTags": [
							{
								"tag": "@param",
								"name": "id",
								"content": [
									{
										"kind": "text",
										"text": "The ID of the item."
									}
								]
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 99,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 100,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This function removes an item from the session cart."
											}
										]
									},
									"parameters": [
										{
											"id": 101,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the item."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 102,
					"name": "updateItem",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This function updates an item in the session cart."
							}
						],
						"blockTags": [
							{
								"tag": "@param",
								"name": "id",
								"content": [
									{
										"kind": "text",
										"text": "The ID of the item."
									}
								]
							},
							{
								"tag": "@param",
								"name": "item",
								"content": [
									{
										"kind": "text",
										"text": "The item's data to update."
									}
								]
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 103,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 104,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This function updates an item in the session cart."
											}
										]
									},
									"parameters": [
										{
											"id": 105,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the item."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 106,
											"name": "item",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The item's data to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Partial"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 80,
														"name": "Item",
														"package": "medusa-react"
													}
												],
												"name": "Partial",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 107,
					"name": "setItems",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A state function used to set the items in the cart."
							}
						],
						"blockTags": [
							{
								"tag": "@param",
								"name": "items",
								"content": [
									{
										"kind": "text",
										"text": "The items to set in the cart."
									}
								]
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 108,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 109,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A state function used to set the items in the cart."
											}
										]
									},
									"parameters": [
										{
											"id": 110,
											"name": "items",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The items to set in the cart."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 80,
													"name": "Item",
													"package": "medusa-react"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 111,
					"name": "updateItemQuantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This function updates an item's quantity in the cart."
							}
						],
						"blockTags": [
							{
								"tag": "@param",
								"name": "id",
								"content": [
									{
										"kind": "text",
										"text": "The ID of the item."
									}
								]
							},
							{
								"tag": "@param",
								"name": "quantity",
								"content": [
									{
										"kind": "text",
										"text": "The new quantity of the item."
									}
								]
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 112,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 113,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This function updates an item's quantity in the cart."
											}
										]
									},
									"parameters": [
										{
											"id": 114,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the item."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 115,
											"name": "quantity",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The new quantity of the item."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 116,
					"name": "incrementItemQuantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This function increments the item's quantity in the cart."
							}
						],
						"blockTags": [
							{
								"tag": "@param",
								"name": "id",
								"content": [
									{
										"kind": "text",
										"text": "The ID of the item."
									}
								]
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 117,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 118,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This function increments the item's quantity in the cart."
											}
										]
									},
									"parameters": [
										{
											"id": 119,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the item."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 120,
					"name": "decrementItemQuantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This function decrements the item's quantity in the cart."
							}
						],
						"blockTags": [
							{
								"tag": "@param",
								"name": "id",
								"content": [
									{
										"kind": "text",
										"text": "The ID of the item."
									}
								]
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 121,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 122,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This function decrements the item's quantity in the cart."
											}
										]
									},
									"parameters": [
										{
											"id": 123,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the item."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 124,
					"name": "getItem",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This function retrieves an item's details by its ID."
							}
						],
						"blockTags": [
							{
								"tag": "@param",
								"name": "id",
								"content": [
									{
										"kind": "text",
										"text": "The ID of the item."
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "The item in the cart, if found."
									}
								]
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 125,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 126,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This function retrieves an item's details by its ID."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The item in the cart, if found."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 127,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the item."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"target": 80,
												"name": "Item",
												"package": "medusa-react"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 128,
					"name": "clearItems",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Removes all items in the cart."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 129,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 130,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Removes all items in the cart."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						131,
						132,
						133,
						134,
						90,
						94,
						98,
						102,
						107,
						111,
						116,
						120,
						124,
						128
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 84,
					"name": "SessionCartState",
					"package": "medusa-react"
				}
			]
		},
		{
			"id": 148,
			"name": "SessionCartProviderProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 150,
					"name": "initialState",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional initial value to be used for the session cart."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 84,
						"name": "SessionCartState",
						"package": "medusa-react"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						150
					]
				}
			]
		},
		{
			"id": 3364,
			"name": "FormatVariantPriceParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Options to format a variant's price."
					}
				]
			},
			"children": [
				{
					"id": 3365,
					"name": "variant",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A variant's details."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3404,
						"name": "ProductVariantInfo",
						"package": "medusa-react"
					}
				},
				{
					"id": 3366,
					"name": "region",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A region's details."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3405,
						"name": "RegionInfo",
						"package": "medusa-react"
					}
				},
				{
					"id": 3367,
					"name": "includeTaxes",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the computed price should include taxes or not."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\ntrue\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 3368,
					"name": "minimumFractionDigits",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The minimum number of fraction digits to use when formatting the price. This is passed as an option to "
							},
							{
								"kind": "code",
								"text": "`Intl.NumberFormat`"
							},
							{
								"kind": "text",
								"text": " in the underlying layer. \nYou can learn more about this method’s options in \n[MDN’s documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#parameters)."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 3369,
					"name": "maximumFractionDigits",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum number of fraction digits to use when formatting the price. This is passed as an option to "
							},
							{
								"kind": "code",
								"text": "`Intl.NumberFormat`"
							},
							{
								"kind": "text",
								"text": " which is used within the utility method.\nYou can learn more about this method’s options in \n[MDN’s documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#parameters)."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 3370,
					"name": "locale",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A BCP 47 language tag. The default value is "
							},
							{
								"kind": "code",
								"text": "`en-US`"
							},
							{
								"kind": "text",
								"text": ". This is passed as a first parameter to "
							},
							{
								"kind": "code",
								"text": "`Intl.NumberFormat`"
							},
							{
								"kind": "text",
								"text": " which is used within the utility method. \nYou can learn more about this method’s parameters in \n[MDN’s documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#parameters)."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3365,
						3366,
						3367,
						3368,
						3369,
						3370
					]
				}
			]
		},
		{
			"id": 3374,
			"name": "ComputeVariantPriceParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Options to format a variant's price."
					}
				]
			},
			"children": [
				{
					"id": 3375,
					"name": "variant",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A variant's details."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3404,
						"name": "ProductVariantInfo",
						"package": "medusa-react"
					}
				},
				{
					"id": 3376,
					"name": "region",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A region's details."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3405,
						"name": "RegionInfo",
						"package": "medusa-react"
					}
				},
				{
					"id": 3377,
					"name": "includeTaxes",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the computed price should include taxes or not."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\ntrue\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3375,
						3376,
						3377
					]
				}
			]
		},
		{
			"id": 3385,
			"name": "ComputeAmountParams",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Options to compute an amount."
					}
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 3386,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 3387,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The original amount used for computation."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3388,
							"name": "region",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The region's details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 3405,
								"name": "RegionInfo",
								"package": "medusa-react"
							}
						},
						{
							"id": 3389,
							"name": "includeTaxes",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the computed price should include taxes or not."
									}
								],
								"blockTags": [
									{
										"tag": "@defaultValue",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ntrue\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3387,
								3388,
								3389
							]
						}
					]
				}
			}
		},
		{
			"id": 3393,
			"name": "FormatAmountParams",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Options to format an amount."
					}
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 3394,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 3395,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The original amount used for computation."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3396,
							"name": "region",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The region's details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 3405,
								"name": "RegionInfo",
								"package": "medusa-react"
							}
						},
						{
							"id": 3397,
							"name": "includeTaxes",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the computed price should include taxes or not."
									}
								],
								"blockTags": [
									{
										"tag": "@defaultValue",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ntrue\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3398,
							"name": "minimumFractionDigits",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The minimum number of fraction digits to use when formatting the price. This is passed as an option to "
									},
									{
										"kind": "code",
										"text": "`Intl.NumberFormat`"
									},
									{
										"kind": "text",
										"text": " in the underlying layer. \nYou can learn more about this method’s options in \n[MDN’s documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#parameters)."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3399,
							"name": "maximumFractionDigits",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The maximum number of fraction digits to use when formatting the price. This is passed as an option to "
									},
									{
										"kind": "code",
										"text": "`Intl.NumberFormat`"
									},
									{
										"kind": "text",
										"text": " which is used within the utility method. \nYou can learn more about this method’s options in \n[MDN’s documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#parameters)."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3400,
							"name": "locale",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A BCP 47 language tag. The default value is "
									},
									{
										"kind": "code",
										"text": "`en-US`"
									},
									{
										"kind": "text",
										"text": ". This is passed as a first parameter to "
									},
									{
										"kind": "code",
										"text": "`Intl.NumberFormat`"
									},
									{
										"kind": "text",
										"text": " which is used within the utility method. \nYou can learn more about this method’s parameters in \n[MDN’s documentation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#parameters)."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3395,
								3396,
								3397,
								3398,
								3399,
								3400
							]
						}
					]
				}
			}
		},
		{
			"id": 836,
			"name": "adminAuthKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../packages/medusa-react/src/types.ts",
					"qualifiedName": "TQueryKey"
				},
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_auth"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 912,
			"name": "useAdminConfirmBatchJob",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 913,
					"name": "useAdminConfirmBatchJob",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When a batch job is created, it's not executed automatically if "
							},
							{
								"kind": "code",
								"text": "`dry_run`"
							},
							{
								"kind": "text",
								"text": " is set to "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": ". This hook confirms that the batch job should be executed."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nimport React from \"react\"\nimport { useAdminConfirmBatchJob } from \"medusa-react\"\n\ntype Props = {\n  batchJobId: string\n}\n\nconst BatchJob = ({ batchJobId }: Props) => {\n  const confirmBatchJob = useAdminConfirmBatchJob(batchJobId)\n  // ...\n\n  const handleConfirm = () => {\n    confirmBatchJob.mutate(undefined, {\n      onSuccess: ({ batch_job }) => {\n        console.log(batch_job)\n      }\n    })\n  }\n\n  // ...\n}\n\nexport default BatchJob\n```"
									}
								]
							}
						]
					},
					"parameters": [
						{
							"id": 914,
							"name": "id",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the batch job."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 915,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
									"qualifiedName": "UseMutationOptions"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
											"qualifiedName": "Response"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/batch/index.d.ts",
													"qualifiedName": "AdminBatchJobRes"
												},
												"name": "AdminBatchJobRes",
												"package": "@medusajs/medusa"
											}
										],
										"name": "Response",
										"package": "@medusajs/medusa-js"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Error"
										},
										"name": "Error",
										"package": "typescript"
									},
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "UseMutationOptions",
								"package": "@tanstack/react-query"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
									"qualifiedName": "Response"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/batch/index.d.ts",
											"qualifiedName": "AdminBatchJobRes"
										},
										"name": "AdminBatchJobRes",
										"package": "@medusajs/medusa"
									}
								],
								"name": "Response",
								"package": "@medusajs/medusa-js"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Error"
								},
								"name": "Error",
								"package": "typescript"
							},
							{
								"type": "intrinsic",
								"name": "void"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 858,
			"name": "adminBatchJobsKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../packages/medusa-react/src/types.ts",
					"qualifiedName": "TQueryKey"
				},
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_batches"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 920,
			"name": "AdminUpdateClaimReq",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/update-claim.d.ts",
							"qualifiedName": "AdminPostOrdersOrderClaimsClaimReq"
						},
						"name": "AdminPostOrdersOrderClaimsClaimReq",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 921,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 922,
									"name": "claim_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The claim's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										922
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 931,
			"name": "AdminFulfillClaimReq",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the claim's fulfillment."
					}
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/fulfill-claim.d.ts",
							"qualifiedName": "AdminPostOrdersOrderClaimsClaimFulfillmentsReq"
						},
						"name": "AdminPostOrdersOrderClaimsClaimFulfillmentsReq",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 932,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 933,
									"name": "claim_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The claim's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										933
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 938,
			"name": "AdminCancelClaimFulfillmentReq",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The cancelation details."
					}
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 939,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 940,
							"name": "claim_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The claim's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 941,
							"name": "fulfillment_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The fulfillment's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								940,
								941
							]
						}
					]
				}
			}
		},
		{
			"id": 954,
			"name": "adminCollectionKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../packages/medusa-react/src/types.ts",
					"qualifiedName": "TQueryKey"
				},
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_collections"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 1024,
			"name": "adminCurrenciesKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../packages/medusa-react/src/types.ts",
					"qualifiedName": "TQueryKey"
				},
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_currencies"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 1218,
			"name": "adminCustomerKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../packages/medusa-react/src/types.ts",
					"qualifiedName": "TQueryKey"
				},
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_customers"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 1272,
			"name": "adminDiscountKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1273,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1274,
							"name": "detailCondition",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 1275,
									"name": "detailCondition",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 1276,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1277,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "tuple",
											"elements": [
												{
													"type": "literal",
													"value": "admin_discounts"
												},
												{
													"type": "literal",
													"value": "detail"
												},
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "literal",
													"value": "condition"
												},
												{
													"type": "intrinsic",
													"name": "any"
												}
											]
										}
									}
								}
							]
						},
						{
							"id": 1278,
							"name": "all",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "literal",
										"value": "admin_discounts"
									}
								]
							}
						},
						{
							"id": 1279,
							"name": "lists",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1280,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 1281,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "admin_discounts"
													},
													{
														"type": "literal",
														"value": "list"
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 1282,
							"name": "list",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1283,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 1284,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 1285,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "admin_discounts"
													},
													{
														"type": "literal",
														"value": "list"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1286,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1287,
																	"name": "query",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1287
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 1288,
							"name": "details",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1289,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 1290,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "admin_discounts"
													},
													{
														"type": "literal",
														"value": "detail"
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 1291,
							"name": "detail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1292,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 1293,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 1294,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "admin_discounts"
													},
													{
														"type": "literal",
														"value": "detail"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1278,
								1279,
								1282,
								1288,
								1291
							]
						},
						{
							"title": "Methods",
							"children": [
								1274
							]
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 1497,
			"name": "AdminDraftOrderUpdateLineItemReq",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the line item."
					}
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/update-line-item.d.ts",
							"qualifiedName": "AdminPostDraftOrdersDraftOrderLineItemsItemReq"
						},
						"name": "AdminPostDraftOrdersDraftOrderLineItemsItemReq",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 1498,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1499,
									"name": "item_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The line item's ID to update."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1499
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 1427,
			"name": "adminDraftOrderKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../packages/medusa-react/src/types.ts",
					"qualifiedName": "TQueryKey"
				},
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_draft_orders"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 1504,
			"name": "adminGiftCardKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../packages/medusa-react/src/types.ts",
					"qualifiedName": "TQueryKey"
				},
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_gift_cards"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 1650,
			"name": "AdminUpdateLocationLevelReq",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/update-location-level.d.ts",
							"qualifiedName": "AdminPostInventoryItemsItemLocationLevelsLevelReq"
						},
						"name": "AdminPostInventoryItemsItemLocationLevelsLevelReq",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 1651,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1652,
									"name": "stockLocationId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the location level to update."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1652
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 1562,
			"name": "adminInventoryItemsKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../packages/medusa-react/src/types.ts",
					"qualifiedName": "TQueryKey"
				},
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_inventory_items"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 1688,
			"name": "useAdminCreateInvite",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 1689,
					"name": "useAdminCreateInvite",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 1690,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
									"qualifiedName": "UseMutationOptions"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
											"qualifiedName": "Response"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Response",
										"package": "@medusajs/medusa-js"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Error"
										},
										"name": "Error",
										"package": "typescript"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
											"qualifiedName": "AdminPostInvitesPayload"
										},
										"name": "AdminPostInvitesPayload",
										"package": "@medusajs/medusa-js"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "UseMutationOptions",
								"package": "@tanstack/react-query"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa-react/node_modules/@tanstack/react-query/build/lib/types.d.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
									"qualifiedName": "Response"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Response",
								"package": "@medusajs/medusa-js"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Error"
								},
								"name": "Error",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
									"qualifiedName": "AdminPostInvitesPayload"
								},
								"name": "AdminPostInvitesPayload",
								"package": "@medusajs/medusa-js"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 1665,
			"name": "adminInviteKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../packages/medusa-react/src/types.ts",
					"qualifiedName": "TQueryKey"
				},
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_invites"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 1695,
			"name": "adminNoteKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../packages/medusa-react/src/types.ts",
					"qualifiedName": "TQueryKey"
				},
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_notes"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 1753,
			"name": "adminNotificationKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../packages/medusa-react/src/types.ts",
					"qualifiedName": "TQueryKey"
				},
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_notifications"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 1788,
			"name": "adminOrderEditsKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../packages/medusa-react/src/types.ts",
					"qualifiedName": "TQueryKey"
				},
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_order_edits"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 1878,
			"name": "adminOrderKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1879,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1880,
							"name": "detailOrder",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 1881,
									"name": "detailOrder",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 1882,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1883,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
													"qualifiedName": "FindParams"
												},
												"name": "FindParams",
												"package": "@medusajs/medusa"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "reflection",
													"declaration": {
														"id": 1884,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 1885,
																"name": "expand",
																"variant": "declaration",
																"kind": 1024,
																"flags": {
																	"isOptional": true
																},
																"comment": {
																	"summary": [
																		{
																			"kind": "text",
																			"text": "Comma-separated relations that should be expanded in the returned data."
																		}
																	]
																},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															{
																"id": 1886,
																"name": "fields",
																"variant": "declaration",
																"kind": 1024,
																"flags": {
																	"isOptional": true
																},
																"comment": {
																	"summary": [
																		{
																			"kind": "text",
																			"text": "Comma-separated fields that should be included in the returned data."
																		}
																	]
																},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	1885,
																	1886
																]
															}
														]
													}
												}
											]
										}
									}
								}
							]
						},
						{
							"id": 1887,
							"name": "all",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "literal",
										"value": "admin_orders"
									}
								]
							}
						},
						{
							"id": 1888,
							"name": "lists",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1889,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 1890,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "admin_orders"
													},
													{
														"type": "literal",
														"value": "list"
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 1891,
							"name": "list",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1892,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 1893,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 1894,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "admin_orders"
													},
													{
														"type": "literal",
														"value": "list"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 1895,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1896,
																	"name": "query",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1896
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 1897,
							"name": "details",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1898,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 1899,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "admin_orders"
													},
													{
														"type": "literal",
														"value": "detail"
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 1900,
							"name": "detail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1901,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 1902,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 1903,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "admin_orders"
													},
													{
														"type": "literal",
														"value": "detail"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1887,
								1888,
								1891,
								1897,
								1900
							]
						},
						{
							"title": "Methods",
							"children": [
								1880
							]
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 1998,
			"name": "adminPaymentCollectionQueryKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../packages/medusa-react/src/types.ts",
					"qualifiedName": "TQueryKey"
				},
				"typeArguments": [
					{
						"type": "literal",
						"value": "paymentCollection"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 2027,
			"name": "adminPaymentQueryKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../packages/medusa-react/src/types.ts",
					"qualifiedName": "TQueryKey"
				},
				"typeArguments": [
					{
						"type": "literal",
						"value": "payment"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 2052,
			"name": "adminPriceListKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 2053,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 2054,
							"name": "detailProducts",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2055,
									"name": "detailProducts",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 2056,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2057,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "tuple",
											"elements": [
												{
													"type": "literal",
													"value": "admin_price_lists"
												},
												{
													"type": "literal",
													"value": "detail"
												},
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "literal",
													"value": "products"
												},
												{
													"type": "intrinsic",
													"name": "any"
												}
											]
										}
									}
								}
							]
						},
						{
							"id": 2058,
							"name": "all",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "literal",
										"value": "admin_price_lists"
									}
								]
							}
						},
						{
							"id": 2059,
							"name": "lists",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2060,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 2061,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "admin_price_lists"
													},
													{
														"type": "literal",
														"value": "list"
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 2062,
							"name": "list",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2063,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 2064,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 2065,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "admin_price_lists"
													},
													{
														"type": "literal",
														"value": "list"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2066,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2067,
																	"name": "query",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2067
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 2068,
							"name": "details",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2069,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 2070,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "admin_price_lists"
													},
													{
														"type": "literal",
														"value": "detail"
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 2071,
							"name": "detail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2072,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 2073,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 2074,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "admin_price_lists"
													},
													{
														"type": "literal",
														"value": "detail"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2058,
								2059,
								2062,
								2068,
								2071
							]
						},
						{
							"title": "Methods",
							"children": [
								2054
							]
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 2183,
			"name": "adminProductCategoryKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../packages/medusa-react/src/types.ts",
					"qualifiedName": "TQueryKey"
				},
				"typeArguments": [
					{
						"type": "literal",
						"value": "product_categories"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 2250,
			"name": "adminProductTagKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../packages/medusa-react/src/types.ts",
					"qualifiedName": "TQueryKey"
				},
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_product_tags"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 2281,
			"name": "adminProductTypeKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../packages/medusa-react/src/types.ts",
					"qualifiedName": "TQueryKey"
				},
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_product_types"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 2398,
			"name": "AdminUpdateVariantReq",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/update-variant.d.ts",
							"qualifiedName": "AdminPostProductsProductVariantsVariantReq"
						},
						"name": "AdminPostProductsProductVariantsVariantReq",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 2399,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 2400,
									"name": "variant_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The product variant's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2400
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 2413,
			"name": "AdminUpdateProductOptionReq",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/update-option.d.ts",
							"qualifiedName": "AdminPostProductsProductOptionsOption"
						},
						"name": "AdminPostProductsProductOptionsOption",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 2414,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 2415,
									"name": "option_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the product option to update."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2415
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 2312,
			"name": "adminProductKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../packages/medusa-react/src/types.ts",
					"qualifiedName": "TQueryKey"
				},
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_products"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 2424,
			"name": "adminPublishableApiKeysKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 2425,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 2426,
							"name": "detailSalesChannels",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 2427,
									"name": "detailSalesChannels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 2428,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2429,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "tuple",
											"elements": [
												{
													"type": "literal",
													"value": "admin_publishable_api_keys"
												},
												{
													"type": "literal",
													"value": "detail"
												},
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "literal",
													"value": "sales_channels"
												},
												{
													"type": "intrinsic",
													"name": "any"
												}
											]
										}
									}
								}
							]
						},
						{
							"id": 2430,
							"name": "all",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "literal",
										"value": "admin_publishable_api_keys"
									}
								]
							}
						},
						{
							"id": 2431,
							"name": "lists",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2432,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 2433,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "admin_publishable_api_keys"
													},
													{
														"type": "literal",
														"value": "list"
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 2434,
							"name": "list",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2435,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 2436,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 2437,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "admin_publishable_api_keys"
													},
													{
														"type": "literal",
														"value": "list"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 2438,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 2439,
																	"name": "query",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		2439
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 2440,
							"name": "details",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2441,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 2442,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "admin_publishable_api_keys"
													},
													{
														"type": "literal",
														"value": "detail"
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 2443,
							"name": "detail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2444,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 2445,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 2446,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "admin_publishable_api_keys"
													},
													{
														"type": "literal",
														"value": "detail"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2430,
								2431,
								2434,
								2440,
								2443
							]
						},
						{
							"title": "Methods",
							"children": [
								2426
							]
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 2533,
			"name": "adminRegionKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../packages/medusa-react/src/types.ts",
					"qualifiedName": "TQueryKey"
				},
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_regions"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 2642,
			"name": "adminReservationsKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../packages/medusa-react/src/types.ts",
					"qualifiedName": "TQueryKey"
				},
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_reservations"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 2689,
			"name": "adminReturnReasonKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../packages/medusa-react/src/types.ts",
					"qualifiedName": "TQueryKey"
				},
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_return_reasons"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 2732,
			"name": "adminReturnKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../packages/medusa-react/src/types.ts",
					"qualifiedName": "TQueryKey"
				},
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_returns"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 2768,
			"name": "adminSalesChannelsKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../packages/medusa-react/src/types.ts",
					"qualifiedName": "TQueryKey"
				},
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_sales_channels"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 2852,
			"name": "adminShippingOptionKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../packages/medusa-react/src/types.ts",
					"qualifiedName": "TQueryKey"
				},
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_shipping_options"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 2910,
			"name": "adminShippingProfileKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../packages/medusa-react/src/types.ts",
					"qualifiedName": "TQueryKey"
				},
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_shippingProfiles"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 2953,
			"name": "adminStockLocationsKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../packages/medusa-react/src/types.ts",
					"qualifiedName": "TQueryKey"
				},
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_stock_locations"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 3011,
			"name": "adminStoreKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../packages/medusa-react/src/types.ts",
					"qualifiedName": "TQueryKey"
				},
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_store"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 3121,
			"name": "AdminFulfillSwapReq",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/fulfill-swap.d.ts",
							"qualifiedName": "AdminPostOrdersOrderSwapsSwapFulfillmentsReq"
						},
						"name": "AdminPostOrdersOrderSwapsSwapFulfillmentsReq",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 3122,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 3123,
									"name": "swap_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The swap's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										3123
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 3128,
			"name": "AdminCreateSwapShipmentReq",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/create-swap-shipment.d.ts",
							"qualifiedName": "AdminPostOrdersOrderSwapsSwapShipmentsReq"
						},
						"name": "AdminPostOrdersOrderSwapsSwapShipmentsReq",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 3129,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 3130,
									"name": "swap_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The swap's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										3130
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 3139,
			"name": "AdminCancelSwapFulfillmentReq",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the swap's fulfillment to cancel."
					}
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 3140,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 3141,
							"name": "swap_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The swap's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3142,
							"name": "fulfillment_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The fulfillment's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3141,
								3142
							]
						}
					]
				}
			}
		},
		{
			"id": 3066,
			"name": "adminSwapKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../packages/medusa-react/src/types.ts",
					"qualifiedName": "TQueryKey"
				},
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_swaps"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 3153,
			"name": "adminTaxRateKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../packages/medusa-react/src/types.ts",
					"qualifiedName": "TQueryKey"
				},
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_tax_rates"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 3248,
			"name": "adminUserKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../packages/medusa-react/src/types.ts",
					"qualifiedName": "TQueryKey"
				},
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_users"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 3300,
			"name": "adminVariantKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../packages/medusa-react/src/types.ts",
					"qualifiedName": "TQueryKey"
				},
				"typeArguments": [
					{
						"type": "literal",
						"value": "admin_variants"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 194,
			"name": "CreateCartReq",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the cart to create."
					}
				]
			},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/create-cart.d.ts",
							"qualifiedName": "StorePostCartReq"
						},
						"name": "StorePostCartReq",
						"package": "@medusajs/medusa"
					},
					{
						"type": "intrinsic",
						"name": "undefined"
					}
				]
			}
		},
		{
			"id": 210,
			"name": "UpdatePaymentSessionReq",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the payment session to update."
					}
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/update-payment-session.d.ts",
							"qualifiedName": "StorePostCartsCartPaymentSessionUpdateReq"
						},
						"name": "StorePostCartsCartPaymentSessionUpdateReq",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 211,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 212,
									"name": "provider_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The payment provider's identifier."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										212
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 217,
			"name": "RefreshPaymentSessionMutationData",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the payment session to refresh."
					}
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 218,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 219,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The payment provider's identifier."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								219
							]
						}
					]
				}
			}
		},
		{
			"id": 232,
			"name": "DeletePaymentSessionMutationData",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the payment session to delete."
					}
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 233,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 234,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The payment provider's identifier."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								234
							]
						}
					]
				}
			}
		},
		{
			"id": 177,
			"name": "cartKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../packages/medusa-react/src/types.ts",
					"qualifiedName": "TQueryKey"
				},
				"typeArguments": [
					{
						"type": "literal",
						"value": "carts"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 242,
			"name": "collectionKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../packages/medusa-react/src/types.ts",
					"qualifiedName": "TQueryKey"
				},
				"typeArguments": [
					{
						"type": "literal",
						"value": "collections"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 358,
			"name": "UpdateMeReq",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/dist/api/routes/store/customers/update-customer.d.ts",
							"qualifiedName": "StorePostCustomersCustomerReq"
						},
						"name": "StorePostCustomersCustomerReq",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 359,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 360,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The customer's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										360
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 289,
			"name": "customerKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 290,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 291,
							"name": "orders",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 292,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 293,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 294,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "typeOperator",
												"operator": "readonly",
												"target": {
													"type": "tuple",
													"elements": [
														{
															"type": "literal",
															"value": "customers"
														},
														{
															"type": "literal",
															"value": "detail"
														},
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "literal",
															"value": "orders"
														}
													]
												}
											}
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 295,
							"name": "all",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "literal",
										"value": "customers"
									}
								]
							}
						},
						{
							"id": 296,
							"name": "lists",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 297,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 298,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "customers"
													},
													{
														"type": "literal",
														"value": "list"
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 299,
							"name": "list",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 300,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 301,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 302,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "customers"
													},
													{
														"type": "literal",
														"value": "list"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 303,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 304,
																	"name": "query",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		304
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 305,
							"name": "details",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 306,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 307,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "customers"
													},
													{
														"type": "literal",
														"value": "detail"
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 308,
							"name": "detail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 309,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 310,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 311,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "customers"
													},
													{
														"type": "literal",
														"value": "detail"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								291,
								295,
								296,
								299,
								305,
								308
							]
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 364,
			"name": "giftCardKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../packages/medusa-react/src/types.ts",
					"qualifiedName": "TQueryKey"
				},
				"typeArguments": [
					{
						"type": "literal",
						"value": "gift_cards"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 385,
			"name": "UpdateLineItemReq",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/update-line-item.d.ts",
							"qualifiedName": "StorePostCartsCartLineItemsItemReq"
						},
						"name": "StorePostCartsCartLineItemsItemReq",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 386,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 387,
									"name": "lineId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The line item's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										387
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 400,
			"name": "orderEditQueryKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../packages/medusa-react/src/types.ts",
					"qualifiedName": "TQueryKey"
				},
				"typeArguments": [
					{
						"type": "literal",
						"value": "orderEdit"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 425,
			"name": "orderKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 426,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 427,
							"name": "cart",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 428,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 429,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 430,
													"name": "cartId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "typeOperator",
												"operator": "readonly",
												"target": {
													"type": "tuple",
													"elements": [
														{
															"type": "literal",
															"value": "orders"
														},
														{
															"type": "literal",
															"value": "detail"
														},
														{
															"type": "literal",
															"value": "cart"
														},
														{
															"type": "intrinsic",
															"name": "string"
														}
													]
												}
											}
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 431,
							"name": "all",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "literal",
										"value": "orders"
									}
								]
							}
						},
						{
							"id": 432,
							"name": "lists",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 433,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 434,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "orders"
													},
													{
														"type": "literal",
														"value": "list"
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 435,
							"name": "list",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 436,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 437,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 438,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/lookup-order.d.ts",
															"qualifiedName": "StoreGetOrdersParams"
														},
														"name": "StoreGetOrdersParams",
														"package": "@medusajs/medusa"
													}
												}
											],
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "orders"
													},
													{
														"type": "literal",
														"value": "list"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 439,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 440,
																	"name": "query",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "undefined"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/lookup-order.d.ts",
																					"qualifiedName": "StoreGetOrdersParams"
																				},
																				"name": "StoreGetOrdersParams",
																				"package": "@medusajs/medusa"
																			}
																		]
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		440
																	]
																}
															]
														}
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 441,
							"name": "details",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 442,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 443,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "orders"
													},
													{
														"type": "literal",
														"value": "detail"
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 444,
							"name": "detail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 445,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 446,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 447,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "literal",
														"value": "orders"
													},
													{
														"type": "literal",
														"value": "detail"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								427,
								431,
								432,
								435,
								441,
								444
							]
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 512,
			"name": "paymentCollectionQueryKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../packages/medusa-react/src/types.ts",
					"qualifiedName": "TQueryKey"
				},
				"typeArguments": [
					{
						"type": "literal",
						"value": "paymentCollection"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 549,
			"name": "storeProductCategoryKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../packages/medusa-react/src/types.ts",
					"qualifiedName": "TQueryKey"
				},
				"typeArguments": [
					{
						"type": "literal",
						"value": "product_categories"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 597,
			"name": "productTagKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../packages/medusa-react/src/types.ts",
					"qualifiedName": "TQueryKey"
				},
				"typeArguments": [
					{
						"type": "literal",
						"value": "product_tags"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 628,
			"name": "productTypeKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../packages/medusa-react/src/types.ts",
					"qualifiedName": "TQueryKey"
				},
				"typeArguments": [
					{
						"type": "literal",
						"value": "product_types"
					},
					{
						"type": "intrinsic",
						"name": "any"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 659,
			"name": "productKeys",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../packages/medusa-react/src/types.ts",
					"qualifiedName": "TQueryKey"
				},
				"typeArguments": [
					{
						"type": "literal",
						"value": "products"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/dist/api/routes/store/products/list-products.d.ts",
							"qualifiedName": "StoreGetProductsParams"
						},
						"name": "StoreGetProductsParams",
						"package": "@medusajs/medusa"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				],
				"name": "TQueryKey",
				"package": "medusa-react"
			},
			"defaultValue": "..."
		},
		{
			"id": 3405,
			"name": "RegionInfo",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
					"qualifiedName": "Pick"
				},
				"typeArguments": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/dist/models/region.d.ts",
							"qualifiedName": "Region"
						},
						"name": "Region",
						"package": "@medusajs/medusa"
					},
					{
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "currency_code"
							},
							{
								"type": "literal",
								"value": "tax_code"
							},
							{
								"type": "literal",
								"value": "tax_rate"
							}
						]
					}
				],
				"name": "Pick",
				"package": "typescript"
			}
		},
		{
			"id": 3404,
			"name": "ProductVariantInfo",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
					"qualifiedName": "Pick"
				},
				"typeArguments": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa-react/src/types.ts",
							"qualifiedName": "ProductVariant"
						},
						"name": "ProductVariant",
						"package": "medusa-react"
					},
					{
						"type": "literal",
						"value": "prices"
					}
				],
				"name": "Pick",
				"package": "typescript"
			}
		}
	],
	"groups": [
		{
			"title": "Namespaces",
			"children": [
				1,
				5,
				6
			]
		},
		{
			"title": "Interfaces",
			"children": [
				156,
				171,
				65,
				69,
				80,
				84,
				89,
				148,
				3364,
				3374
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				3385,
				3393,
				920,
				931,
				938,
				1497,
				1650,
				2398,
				2413,
				3121,
				3128,
				3139,
				194,
				210,
				217,
				232,
				358,
				385,
				3405,
				3404
			]
		},
		{
			"title": "Variables",
			"children": [
				836,
				858,
				954,
				1024,
				1218,
				1272,
				1427,
				1504,
				1562,
				1665,
				1695,
				1753,
				1788,
				1878,
				1998,
				2027,
				2052,
				2183,
				2250,
				2281,
				2312,
				2424,
				2533,
				2642,
				2689,
				2732,
				2768,
				2852,
				2910,
				2953,
				3011,
				3066,
				3153,
				3248,
				3300,
				177,
				242,
				289,
				364,
				400,
				425,
				512,
				549,
				597,
				628,
				659
			]
		},
		{
			"title": "Functions",
			"children": [
				912,
				1688
			]
		}
	],
	"packageName": "medusa-react",
	"symbolIdMap": {
		"0": {
			"sourceFileName": "../../../packages/medusa-react/src/index.ts",
			"qualifiedName": ""
		},
		"65": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/medusa.tsx",
			"qualifiedName": "MedusaContextState"
		},
		"66": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/medusa.tsx",
			"qualifiedName": "MedusaContextState.client"
		},
		"67": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/medusa.tsx",
			"qualifiedName": "useMedusa"
		},
		"68": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/medusa.tsx",
			"qualifiedName": "useMedusa"
		},
		"69": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/medusa.tsx",
			"qualifiedName": "MedusaProviderProps"
		},
		"70": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/medusa.tsx",
			"qualifiedName": "MedusaProviderProps.baseUrl"
		},
		"71": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/medusa.tsx",
			"qualifiedName": "MedusaProviderProps.queryClientProviderProps"
		},
		"73": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/medusa.tsx",
			"qualifiedName": "MedusaProviderProps.apiKey"
		},
		"74": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/medusa.tsx",
			"qualifiedName": "MedusaProviderProps.publishableApiKey"
		},
		"75": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/medusa.tsx",
			"qualifiedName": "MedusaProviderProps.maxRetries"
		},
		"76": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/medusa.tsx",
			"qualifiedName": "MedusaProviderProps.customHeaders"
		},
		"77": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/medusa.tsx",
			"qualifiedName": "MedusaProvider"
		},
		"78": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/medusa.tsx",
			"qualifiedName": "MedusaProvider"
		},
		"79": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/medusa.tsx",
			"qualifiedName": "__0"
		},
		"80": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "Item"
		},
		"81": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "Item.variant"
		},
		"82": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "Item.quantity"
		},
		"83": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "Item.total"
		},
		"84": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartState"
		},
		"85": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartState.region"
		},
		"86": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartState.items"
		},
		"87": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartState.totalItems"
		},
		"88": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartState.total"
		},
		"89": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartContextState"
		},
		"90": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartContextState.setRegion"
		},
		"91": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "__type"
		},
		"92": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "__type"
		},
		"93": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "region"
		},
		"94": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartContextState.addItem"
		},
		"95": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "__type"
		},
		"96": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "__type"
		},
		"97": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "item"
		},
		"98": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartContextState.removeItem"
		},
		"99": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "__type"
		},
		"100": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "__type"
		},
		"101": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "id"
		},
		"102": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartContextState.updateItem"
		},
		"103": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "__type"
		},
		"104": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "__type"
		},
		"105": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "id"
		},
		"106": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "item"
		},
		"107": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartContextState.setItems"
		},
		"108": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "__type"
		},
		"109": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "__type"
		},
		"110": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "items"
		},
		"111": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartContextState.updateItemQuantity"
		},
		"112": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "__type"
		},
		"113": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "__type"
		},
		"114": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "id"
		},
		"115": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "quantity"
		},
		"116": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartContextState.incrementItemQuantity"
		},
		"117": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "__type"
		},
		"118": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "__type"
		},
		"119": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "id"
		},
		"120": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartContextState.decrementItemQuantity"
		},
		"121": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "__type"
		},
		"122": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "__type"
		},
		"123": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "id"
		},
		"124": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartContextState.getItem"
		},
		"125": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "__type"
		},
		"126": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "__type"
		},
		"127": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "id"
		},
		"128": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartContextState.clearItems"
		},
		"129": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "__type"
		},
		"130": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "__type"
		},
		"131": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartState.region"
		},
		"132": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartState.items"
		},
		"133": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartState.totalItems"
		},
		"134": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartState.total"
		},
		"148": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartProviderProps"
		},
		"150": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartProviderProps.initialState"
		},
		"151": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartProvider"
		},
		"152": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "SessionCartProvider"
		},
		"153": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "__0"
		},
		"154": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "useSessionCart"
		},
		"155": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/session-cart.tsx",
			"qualifiedName": "useSessionCart"
		},
		"156": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/cart.tsx",
			"qualifiedName": "CartContext"
		},
		"157": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/cart.tsx",
			"qualifiedName": "CartContext.setCart"
		},
		"158": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/cart.tsx",
			"qualifiedName": "__type"
		},
		"159": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/cart.tsx",
			"qualifiedName": "__type"
		},
		"160": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/cart.tsx",
			"qualifiedName": "cart"
		},
		"161": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/cart.tsx",
			"qualifiedName": "CartContext.pay"
		},
		"162": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/cart.tsx",
			"qualifiedName": "CartContext.createCart"
		},
		"163": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/cart.tsx",
			"qualifiedName": "CartContext.startCheckout"
		},
		"164": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/cart.tsx",
			"qualifiedName": "CartContext.completeCheckout"
		},
		"165": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/cart.tsx",
			"qualifiedName": "CartContext.updateCart"
		},
		"166": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/cart.tsx",
			"qualifiedName": "CartContext.addShippingMethod"
		},
		"167": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/cart.tsx",
			"qualifiedName": "CartContext.totalItems"
		},
		"168": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/cart.tsx",
			"qualifiedName": "CartState.cart"
		},
		"169": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/cart.tsx",
			"qualifiedName": "useCart"
		},
		"170": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/cart.tsx",
			"qualifiedName": "useCart"
		},
		"171": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/cart.tsx",
			"qualifiedName": "CartProps"
		},
		"173": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/cart.tsx",
			"qualifiedName": "CartProps.initialState"
		},
		"174": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/cart.tsx",
			"qualifiedName": "CartProvider"
		},
		"175": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/cart.tsx",
			"qualifiedName": "CartProvider"
		},
		"176": {
			"sourceFileName": "../../../packages/medusa-react/src/contexts/cart.tsx",
			"qualifiedName": "__0"
		},
		"177": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/queries.ts",
			"qualifiedName": "cartKeys"
		},
		"178": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/queries.ts",
			"qualifiedName": "useGetCart"
		},
		"179": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/queries.ts",
			"qualifiedName": "useGetCart"
		},
		"180": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/queries.ts",
			"qualifiedName": "id"
		},
		"181": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/queries.ts",
			"qualifiedName": "options"
		},
		"182": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/queries.ts",
			"qualifiedName": "__object"
		},
		"183": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
			"qualifiedName": "cart"
		},
		"184": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"185": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/queries.ts",
			"qualifiedName": "__object"
		},
		"186": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
			"qualifiedName": "cart"
		},
		"187": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"188": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/queries.ts",
			"qualifiedName": "__object"
		},
		"189": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
			"qualifiedName": "cart"
		},
		"190": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"191": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/queries.ts",
			"qualifiedName": "__object"
		},
		"192": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/carts/index.d.ts",
			"qualifiedName": "cart"
		},
		"193": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"194": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "CreateCartReq"
		},
		"195": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "useCreateCart"
		},
		"196": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "useCreateCart"
		},
		"197": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "options"
		},
		"198": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "useUpdateCart"
		},
		"199": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "useUpdateCart"
		},
		"200": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "cartId"
		},
		"201": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "options"
		},
		"202": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "useCompleteCart"
		},
		"203": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "useCompleteCart"
		},
		"204": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "cartId"
		},
		"205": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "options"
		},
		"206": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "useCreatePaymentSession"
		},
		"207": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "useCreatePaymentSession"
		},
		"208": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "cartId"
		},
		"209": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "options"
		},
		"210": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "UpdatePaymentSessionReq"
		},
		"211": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "__type"
		},
		"212": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "__type.provider_id"
		},
		"213": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "useUpdatePaymentSession"
		},
		"214": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "useUpdatePaymentSession"
		},
		"215": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "cartId"
		},
		"216": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "options"
		},
		"217": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "RefreshPaymentSessionMutationData"
		},
		"218": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "__type"
		},
		"219": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "__type.provider_id"
		},
		"220": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "useRefreshPaymentSession"
		},
		"221": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "useRefreshPaymentSession"
		},
		"222": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "cartId"
		},
		"223": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "options"
		},
		"224": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "useSetPaymentSession"
		},
		"225": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "useSetPaymentSession"
		},
		"226": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "cartId"
		},
		"227": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "options"
		},
		"228": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "useAddShippingMethodToCart"
		},
		"229": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "useAddShippingMethodToCart"
		},
		"230": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "cartId"
		},
		"231": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "options"
		},
		"232": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "DeletePaymentSessionMutationData"
		},
		"233": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "__type"
		},
		"234": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "__type.provider_id"
		},
		"235": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "useDeletePaymentSession"
		},
		"236": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "useDeletePaymentSession"
		},
		"237": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "cartId"
		},
		"238": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "options"
		},
		"239": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "useStartCheckout"
		},
		"240": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "useStartCheckout"
		},
		"241": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/carts/mutations.ts",
			"qualifiedName": "options"
		},
		"242": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/collections/queries.ts",
			"qualifiedName": "collectionKeys"
		},
		"243": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/collections/queries.ts",
			"qualifiedName": "useCollection"
		},
		"244": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/collections/queries.ts",
			"qualifiedName": "useCollection"
		},
		"245": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/collections/queries.ts",
			"qualifiedName": "id"
		},
		"246": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/collections/queries.ts",
			"qualifiedName": "options"
		},
		"247": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/collections/queries.ts",
			"qualifiedName": "__object"
		},
		"248": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/collections/index.d.ts",
			"qualifiedName": "collection"
		},
		"249": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"250": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/collections/queries.ts",
			"qualifiedName": "__object"
		},
		"251": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/collections/index.d.ts",
			"qualifiedName": "collection"
		},
		"252": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"253": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/collections/queries.ts",
			"qualifiedName": "__object"
		},
		"254": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/collections/index.d.ts",
			"qualifiedName": "collection"
		},
		"255": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"256": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/collections/queries.ts",
			"qualifiedName": "__object"
		},
		"257": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/collections/index.d.ts",
			"qualifiedName": "collection"
		},
		"258": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"259": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/collections/queries.ts",
			"qualifiedName": "useCollections"
		},
		"260": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/collections/queries.ts",
			"qualifiedName": "useCollections"
		},
		"261": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/collections/queries.ts",
			"qualifiedName": "query"
		},
		"262": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/collections/queries.ts",
			"qualifiedName": "options"
		},
		"263": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"264": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"265": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/collections/queries.ts",
			"qualifiedName": "__object"
		},
		"266": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"267": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"268": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"269": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/collections/index.d.ts",
			"qualifiedName": "collections"
		},
		"270": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"271": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/collections/queries.ts",
			"qualifiedName": "__object"
		},
		"272": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"273": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"274": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"275": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/collections/index.d.ts",
			"qualifiedName": "collections"
		},
		"276": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"277": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/collections/queries.ts",
			"qualifiedName": "__object"
		},
		"278": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"279": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"280": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"281": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/collections/index.d.ts",
			"qualifiedName": "collections"
		},
		"282": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"283": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/collections/queries.ts",
			"qualifiedName": "__object"
		},
		"284": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"285": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"286": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"287": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/collections/index.d.ts",
			"qualifiedName": "collections"
		},
		"288": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"289": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/queries.ts",
			"qualifiedName": "customerKeys"
		},
		"290": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/queries.ts",
			"qualifiedName": "__object"
		},
		"291": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/queries.ts",
			"qualifiedName": "__object.orders"
		},
		"292": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/queries.ts",
			"qualifiedName": "__function"
		},
		"293": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/queries.ts",
			"qualifiedName": "__function"
		},
		"294": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/queries.ts",
			"qualifiedName": "id"
		},
		"295": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.all"
		},
		"296": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.lists"
		},
		"297": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"298": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"299": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.list"
		},
		"300": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"301": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"302": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "query"
		},
		"303": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"304": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"305": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.details"
		},
		"306": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"307": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"308": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.detail"
		},
		"309": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"310": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"311": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "id"
		},
		"312": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/queries.ts",
			"qualifiedName": "useMeCustomer"
		},
		"313": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/queries.ts",
			"qualifiedName": "useMeCustomer"
		},
		"314": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/queries.ts",
			"qualifiedName": "options"
		},
		"315": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/queries.ts",
			"qualifiedName": "__object"
		},
		"316": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/customers/index.d.ts",
			"qualifiedName": "customer"
		},
		"317": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"318": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/queries.ts",
			"qualifiedName": "__object"
		},
		"319": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/customers/index.d.ts",
			"qualifiedName": "customer"
		},
		"320": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"321": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/queries.ts",
			"qualifiedName": "__object"
		},
		"322": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/customers/index.d.ts",
			"qualifiedName": "customer"
		},
		"323": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"324": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/queries.ts",
			"qualifiedName": "__object"
		},
		"325": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/customers/index.d.ts",
			"qualifiedName": "customer"
		},
		"326": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"327": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/queries.ts",
			"qualifiedName": "useCustomerOrders"
		},
		"328": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/queries.ts",
			"qualifiedName": "useCustomerOrders"
		},
		"329": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/queries.ts",
			"qualifiedName": "query"
		},
		"330": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/queries.ts",
			"qualifiedName": "options"
		},
		"331": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/queries.ts",
			"qualifiedName": "__object"
		},
		"332": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"333": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"334": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"335": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/customers/index.d.ts",
			"qualifiedName": "orders"
		},
		"336": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"337": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/queries.ts",
			"qualifiedName": "__object"
		},
		"338": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"339": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"340": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"341": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/customers/index.d.ts",
			"qualifiedName": "orders"
		},
		"342": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"343": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/queries.ts",
			"qualifiedName": "__object"
		},
		"344": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"345": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"346": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"347": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/customers/index.d.ts",
			"qualifiedName": "orders"
		},
		"348": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"349": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/queries.ts",
			"qualifiedName": "__object"
		},
		"350": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"351": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"352": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"353": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/customers/index.d.ts",
			"qualifiedName": "orders"
		},
		"354": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"355": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/mutations.ts",
			"qualifiedName": "useCreateCustomer"
		},
		"356": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/mutations.ts",
			"qualifiedName": "useCreateCustomer"
		},
		"357": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/mutations.ts",
			"qualifiedName": "options"
		},
		"358": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/mutations.ts",
			"qualifiedName": "UpdateMeReq"
		},
		"359": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/mutations.ts",
			"qualifiedName": "__type"
		},
		"360": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/mutations.ts",
			"qualifiedName": "__type.id"
		},
		"361": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/mutations.ts",
			"qualifiedName": "useUpdateMe"
		},
		"362": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/mutations.ts",
			"qualifiedName": "useUpdateMe"
		},
		"363": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/customers/mutations.ts",
			"qualifiedName": "options"
		},
		"364": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/gift-cards/queries.ts",
			"qualifiedName": "giftCardKeys"
		},
		"365": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/gift-cards/queries.ts",
			"qualifiedName": "useGiftCard"
		},
		"366": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/gift-cards/queries.ts",
			"qualifiedName": "useGiftCard"
		},
		"367": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/gift-cards/queries.ts",
			"qualifiedName": "id"
		},
		"368": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/gift-cards/queries.ts",
			"qualifiedName": "options"
		},
		"369": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/gift-cards/queries.ts",
			"qualifiedName": "__object"
		},
		"370": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/gift-cards/index.d.ts",
			"qualifiedName": "gift_card"
		},
		"371": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"372": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/gift-cards/queries.ts",
			"qualifiedName": "__object"
		},
		"373": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/gift-cards/index.d.ts",
			"qualifiedName": "gift_card"
		},
		"374": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"375": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/gift-cards/queries.ts",
			"qualifiedName": "__object"
		},
		"376": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/gift-cards/index.d.ts",
			"qualifiedName": "gift_card"
		},
		"377": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"378": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/gift-cards/queries.ts",
			"qualifiedName": "__object"
		},
		"379": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/gift-cards/index.d.ts",
			"qualifiedName": "gift_card"
		},
		"380": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"381": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/line-items/mutations.ts",
			"qualifiedName": "useCreateLineItem"
		},
		"382": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/line-items/mutations.ts",
			"qualifiedName": "useCreateLineItem"
		},
		"383": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/line-items/mutations.ts",
			"qualifiedName": "cartId"
		},
		"384": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/line-items/mutations.ts",
			"qualifiedName": "options"
		},
		"385": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/line-items/mutations.ts",
			"qualifiedName": "UpdateLineItemReq"
		},
		"386": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/line-items/mutations.ts",
			"qualifiedName": "__type"
		},
		"387": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/line-items/mutations.ts",
			"qualifiedName": "__type.lineId"
		},
		"388": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/line-items/mutations.ts",
			"qualifiedName": "useUpdateLineItem"
		},
		"389": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/line-items/mutations.ts",
			"qualifiedName": "useUpdateLineItem"
		},
		"390": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/line-items/mutations.ts",
			"qualifiedName": "cartId"
		},
		"391": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/line-items/mutations.ts",
			"qualifiedName": "options"
		},
		"392": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/line-items/mutations.ts",
			"qualifiedName": "useDeleteLineItem"
		},
		"393": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/line-items/mutations.ts",
			"qualifiedName": "useDeleteLineItem"
		},
		"394": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/line-items/mutations.ts",
			"qualifiedName": "cartId"
		},
		"395": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/line-items/mutations.ts",
			"qualifiedName": "options"
		},
		"396": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/line-items/mutations.ts",
			"qualifiedName": "__type"
		},
		"397": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/line-items/mutations.ts",
			"qualifiedName": "__type.lineId"
		},
		"398": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/line-items/mutations.ts",
			"qualifiedName": "__type"
		},
		"399": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/line-items/mutations.ts",
			"qualifiedName": "__type.lineId"
		},
		"400": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/order-edits/queries.ts",
			"qualifiedName": "orderEditQueryKeys"
		},
		"401": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/order-edits/queries.ts",
			"qualifiedName": "useOrderEdit"
		},
		"402": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/order-edits/queries.ts",
			"qualifiedName": "useOrderEdit"
		},
		"403": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/order-edits/queries.ts",
			"qualifiedName": "id"
		},
		"404": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/order-edits/queries.ts",
			"qualifiedName": "options"
		},
		"405": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/order-edits/queries.ts",
			"qualifiedName": "__object"
		},
		"406": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/order-edits/index.d.ts",
			"qualifiedName": "order_edit"
		},
		"407": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"408": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/order-edits/queries.ts",
			"qualifiedName": "__object"
		},
		"409": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/order-edits/index.d.ts",
			"qualifiedName": "order_edit"
		},
		"410": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"411": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/order-edits/queries.ts",
			"qualifiedName": "__object"
		},
		"412": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/order-edits/index.d.ts",
			"qualifiedName": "order_edit"
		},
		"413": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"414": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/order-edits/queries.ts",
			"qualifiedName": "__object"
		},
		"415": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/order-edits/index.d.ts",
			"qualifiedName": "order_edit"
		},
		"416": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"417": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/order-edits/mutations.ts",
			"qualifiedName": "useDeclineOrderEdit"
		},
		"418": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/order-edits/mutations.ts",
			"qualifiedName": "useDeclineOrderEdit"
		},
		"419": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/order-edits/mutations.ts",
			"qualifiedName": "id"
		},
		"420": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/order-edits/mutations.ts",
			"qualifiedName": "options"
		},
		"421": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/order-edits/mutations.ts",
			"qualifiedName": "useCompleteOrderEdit"
		},
		"422": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/order-edits/mutations.ts",
			"qualifiedName": "useCompleteOrderEdit"
		},
		"423": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/order-edits/mutations.ts",
			"qualifiedName": "id"
		},
		"424": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/order-edits/mutations.ts",
			"qualifiedName": "options"
		},
		"425": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "orderKeys"
		},
		"426": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"427": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "__object.cart"
		},
		"428": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "__function"
		},
		"429": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "__function"
		},
		"430": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "cartId"
		},
		"431": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.all"
		},
		"432": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.lists"
		},
		"433": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"434": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"435": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.list"
		},
		"436": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"437": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"438": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "query"
		},
		"439": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"440": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"441": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.details"
		},
		"442": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"443": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"444": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.detail"
		},
		"445": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"446": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"447": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "id"
		},
		"448": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "useOrder"
		},
		"449": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "useOrder"
		},
		"450": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "id"
		},
		"451": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "options"
		},
		"452": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"453": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/index.d.ts",
			"qualifiedName": "order"
		},
		"454": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"455": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"456": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/index.d.ts",
			"qualifiedName": "order"
		},
		"457": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"458": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"459": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/index.d.ts",
			"qualifiedName": "order"
		},
		"460": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"461": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"462": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/index.d.ts",
			"qualifiedName": "order"
		},
		"463": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"464": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "useCartOrder"
		},
		"465": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "useCartOrder"
		},
		"466": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "cartId"
		},
		"467": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "options"
		},
		"468": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"469": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/index.d.ts",
			"qualifiedName": "order"
		},
		"470": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"471": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"472": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/index.d.ts",
			"qualifiedName": "order"
		},
		"473": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"474": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"475": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/index.d.ts",
			"qualifiedName": "order"
		},
		"476": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"477": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"478": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/index.d.ts",
			"qualifiedName": "order"
		},
		"479": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"480": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "useOrders"
		},
		"481": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "useOrders"
		},
		"482": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "query"
		},
		"483": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "options"
		},
		"484": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"485": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"486": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"487": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/index.d.ts",
			"qualifiedName": "order"
		},
		"488": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"489": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"490": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/index.d.ts",
			"qualifiedName": "order"
		},
		"491": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"492": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"493": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/index.d.ts",
			"qualifiedName": "order"
		},
		"494": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"495": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"496": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/orders/index.d.ts",
			"qualifiedName": "order"
		},
		"497": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"498": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/mutations.ts",
			"qualifiedName": "useRequestOrderAccess"
		},
		"499": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/mutations.ts",
			"qualifiedName": "useRequestOrderAccess"
		},
		"500": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/mutations.ts",
			"qualifiedName": "options"
		},
		"501": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "__type"
		},
		"502": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "__type.response"
		},
		"503": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "__type"
		},
		"504": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "__type.response"
		},
		"505": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/mutations.ts",
			"qualifiedName": "useGrantOrderAccess"
		},
		"506": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/mutations.ts",
			"qualifiedName": "useGrantOrderAccess"
		},
		"507": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/orders/mutations.ts",
			"qualifiedName": "options"
		},
		"508": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "__type"
		},
		"509": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "__type.response"
		},
		"510": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "__type"
		},
		"511": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "__type.response"
		},
		"512": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/queries.ts",
			"qualifiedName": "paymentCollectionQueryKeys"
		},
		"513": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/queries.ts",
			"qualifiedName": "usePaymentCollection"
		},
		"514": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/queries.ts",
			"qualifiedName": "usePaymentCollection"
		},
		"515": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/queries.ts",
			"qualifiedName": "id"
		},
		"516": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/queries.ts",
			"qualifiedName": "options"
		},
		"517": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/queries.ts",
			"qualifiedName": "__object"
		},
		"518": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/payment-collections/index.d.ts",
			"qualifiedName": "payment_collection"
		},
		"519": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"520": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/queries.ts",
			"qualifiedName": "__object"
		},
		"521": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/payment-collections/index.d.ts",
			"qualifiedName": "payment_collection"
		},
		"522": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"523": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/queries.ts",
			"qualifiedName": "__object"
		},
		"524": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/payment-collections/index.d.ts",
			"qualifiedName": "payment_collection"
		},
		"525": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"526": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/queries.ts",
			"qualifiedName": "__object"
		},
		"527": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/payment-collections/index.d.ts",
			"qualifiedName": "payment_collection"
		},
		"528": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"529": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/mutations.ts",
			"qualifiedName": "useManageMultiplePaymentSessions"
		},
		"530": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/mutations.ts",
			"qualifiedName": "useManageMultiplePaymentSessions"
		},
		"531": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/mutations.ts",
			"qualifiedName": "id"
		},
		"532": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/mutations.ts",
			"qualifiedName": "options"
		},
		"533": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/mutations.ts",
			"qualifiedName": "useManagePaymentSession"
		},
		"534": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/mutations.ts",
			"qualifiedName": "useManagePaymentSession"
		},
		"535": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/mutations.ts",
			"qualifiedName": "id"
		},
		"536": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/mutations.ts",
			"qualifiedName": "options"
		},
		"537": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/mutations.ts",
			"qualifiedName": "useAuthorizePaymentSession"
		},
		"538": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/mutations.ts",
			"qualifiedName": "useAuthorizePaymentSession"
		},
		"539": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/mutations.ts",
			"qualifiedName": "id"
		},
		"540": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/mutations.ts",
			"qualifiedName": "options"
		},
		"541": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/mutations.ts",
			"qualifiedName": "useAuthorizePaymentSessionsBatch"
		},
		"542": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/mutations.ts",
			"qualifiedName": "useAuthorizePaymentSessionsBatch"
		},
		"543": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/mutations.ts",
			"qualifiedName": "id"
		},
		"544": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/mutations.ts",
			"qualifiedName": "options"
		},
		"545": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/mutations.ts",
			"qualifiedName": "usePaymentCollectionRefreshPaymentSession"
		},
		"546": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/mutations.ts",
			"qualifiedName": "usePaymentCollectionRefreshPaymentSession"
		},
		"547": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/mutations.ts",
			"qualifiedName": "id"
		},
		"548": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/payment-collections/mutations.ts",
			"qualifiedName": "options"
		},
		"549": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-categories/queries.ts",
			"qualifiedName": "storeProductCategoryKeys"
		},
		"550": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-categories/queries.ts",
			"qualifiedName": "useProductCategories"
		},
		"551": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-categories/queries.ts",
			"qualifiedName": "useProductCategories"
		},
		"552": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-categories/queries.ts",
			"qualifiedName": "query"
		},
		"553": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-categories/queries.ts",
			"qualifiedName": "options"
		},
		"554": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"555": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"556": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-categories/queries.ts",
			"qualifiedName": "__object"
		},
		"557": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"558": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"559": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"560": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-categories/index.d.ts",
			"qualifiedName": "product_categories"
		},
		"561": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"562": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-categories/queries.ts",
			"qualifiedName": "__object"
		},
		"563": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"564": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"565": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"566": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-categories/index.d.ts",
			"qualifiedName": "product_categories"
		},
		"567": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"568": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-categories/queries.ts",
			"qualifiedName": "__object"
		},
		"569": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"570": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"571": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"572": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-categories/index.d.ts",
			"qualifiedName": "product_categories"
		},
		"573": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"574": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-categories/queries.ts",
			"qualifiedName": "__object"
		},
		"575": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"576": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"577": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"578": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-categories/index.d.ts",
			"qualifiedName": "product_categories"
		},
		"579": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"580": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-categories/queries.ts",
			"qualifiedName": "useProductCategory"
		},
		"581": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-categories/queries.ts",
			"qualifiedName": "useProductCategory"
		},
		"582": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-categories/queries.ts",
			"qualifiedName": "id"
		},
		"583": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-categories/queries.ts",
			"qualifiedName": "query"
		},
		"584": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-categories/queries.ts",
			"qualifiedName": "options"
		},
		"585": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-categories/queries.ts",
			"qualifiedName": "__object"
		},
		"586": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-categories/index.d.ts",
			"qualifiedName": "product_category"
		},
		"587": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"588": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-categories/queries.ts",
			"qualifiedName": "__object"
		},
		"589": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-categories/index.d.ts",
			"qualifiedName": "product_category"
		},
		"590": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"591": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-categories/queries.ts",
			"qualifiedName": "__object"
		},
		"592": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-categories/index.d.ts",
			"qualifiedName": "product_category"
		},
		"593": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"594": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-categories/queries.ts",
			"qualifiedName": "__object"
		},
		"595": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-categories/index.d.ts",
			"qualifiedName": "product_category"
		},
		"596": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"597": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-tags/queries.ts",
			"qualifiedName": "productTagKeys"
		},
		"598": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-tags/queries.ts",
			"qualifiedName": "useProductTags"
		},
		"599": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-tags/queries.ts",
			"qualifiedName": "useProductTags"
		},
		"600": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-tags/queries.ts",
			"qualifiedName": "query"
		},
		"601": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-tags/queries.ts",
			"qualifiedName": "options"
		},
		"602": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"603": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"604": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-tags/queries.ts",
			"qualifiedName": "__object"
		},
		"605": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"606": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"607": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"608": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-tags/index.d.ts",
			"qualifiedName": "product_tags"
		},
		"609": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"610": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-tags/queries.ts",
			"qualifiedName": "__object"
		},
		"611": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"612": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"613": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"614": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-tags/index.d.ts",
			"qualifiedName": "product_tags"
		},
		"615": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"616": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-tags/queries.ts",
			"qualifiedName": "__object"
		},
		"617": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"618": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"619": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"620": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-tags/index.d.ts",
			"qualifiedName": "product_tags"
		},
		"621": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"622": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-tags/queries.ts",
			"qualifiedName": "__object"
		},
		"623": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"624": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"625": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"626": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-tags/index.d.ts",
			"qualifiedName": "product_tags"
		},
		"627": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"628": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-types/queries.ts",
			"qualifiedName": "productTypeKeys"
		},
		"629": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-types/queries.ts",
			"qualifiedName": "useProductTypes"
		},
		"630": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-types/queries.ts",
			"qualifiedName": "useProductTypes"
		},
		"631": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-types/queries.ts",
			"qualifiedName": "query"
		},
		"632": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-types/queries.ts",
			"qualifiedName": "options"
		},
		"633": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"634": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"635": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-types/queries.ts",
			"qualifiedName": "__object"
		},
		"636": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"637": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"638": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"639": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-types/index.d.ts",
			"qualifiedName": "product_types"
		},
		"640": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"641": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-types/queries.ts",
			"qualifiedName": "__object"
		},
		"642": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"643": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"644": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"645": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-types/index.d.ts",
			"qualifiedName": "product_types"
		},
		"646": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"647": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-types/queries.ts",
			"qualifiedName": "__object"
		},
		"648": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"649": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"650": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"651": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-types/index.d.ts",
			"qualifiedName": "product_types"
		},
		"652": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"653": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/product-types/queries.ts",
			"qualifiedName": "__object"
		},
		"654": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"655": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"656": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"657": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/product-types/index.d.ts",
			"qualifiedName": "product_types"
		},
		"658": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"659": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/products/queries.ts",
			"qualifiedName": "productKeys"
		},
		"660": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/products/queries.ts",
			"qualifiedName": "useProducts"
		},
		"661": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/products/queries.ts",
			"qualifiedName": "useProducts"
		},
		"662": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/products/queries.ts",
			"qualifiedName": "query"
		},
		"663": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/products/queries.ts",
			"qualifiedName": "options"
		},
		"664": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"665": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"666": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/products/queries.ts",
			"qualifiedName": "__object"
		},
		"667": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"668": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"669": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"670": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/products/index.d.ts",
			"qualifiedName": "products"
		},
		"671": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"672": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/products/queries.ts",
			"qualifiedName": "__object"
		},
		"673": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"674": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"675": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"676": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/products/index.d.ts",
			"qualifiedName": "products"
		},
		"677": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"678": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/products/queries.ts",
			"qualifiedName": "__object"
		},
		"679": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"680": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"681": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"682": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/products/index.d.ts",
			"qualifiedName": "products"
		},
		"683": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"684": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/products/queries.ts",
			"qualifiedName": "__object"
		},
		"685": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"686": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"687": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"688": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/products/index.d.ts",
			"qualifiedName": "products"
		},
		"689": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"690": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/products/queries.ts",
			"qualifiedName": "useProduct"
		},
		"691": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/products/queries.ts",
			"qualifiedName": "useProduct"
		},
		"692": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/products/queries.ts",
			"qualifiedName": "id"
		},
		"693": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/products/queries.ts",
			"qualifiedName": "options"
		},
		"694": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/products/queries.ts",
			"qualifiedName": "__object"
		},
		"695": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/products/index.d.ts",
			"qualifiedName": "product"
		},
		"696": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"697": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/products/queries.ts",
			"qualifiedName": "__object"
		},
		"698": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/products/index.d.ts",
			"qualifiedName": "product"
		},
		"699": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"700": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/products/queries.ts",
			"qualifiedName": "__object"
		},
		"701": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/products/index.d.ts",
			"qualifiedName": "product"
		},
		"702": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"703": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/products/queries.ts",
			"qualifiedName": "__object"
		},
		"704": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/products/index.d.ts",
			"qualifiedName": "product"
		},
		"705": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"706": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/regions/queries.ts",
			"qualifiedName": "useRegions"
		},
		"707": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/regions/queries.ts",
			"qualifiedName": "useRegions"
		},
		"708": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/regions/queries.ts",
			"qualifiedName": "options"
		},
		"709": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/regions/queries.ts",
			"qualifiedName": "__object"
		},
		"710": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "limit"
		},
		"711": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "offset"
		},
		"712": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "count"
		},
		"713": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/regions/index.d.ts",
			"qualifiedName": "regions"
		},
		"714": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"715": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/regions/queries.ts",
			"qualifiedName": "__object"
		},
		"716": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "limit"
		},
		"717": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "offset"
		},
		"718": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "count"
		},
		"719": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/regions/index.d.ts",
			"qualifiedName": "regions"
		},
		"720": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"721": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/regions/queries.ts",
			"qualifiedName": "__object"
		},
		"722": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "limit"
		},
		"723": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "offset"
		},
		"724": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "count"
		},
		"725": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/regions/index.d.ts",
			"qualifiedName": "regions"
		},
		"726": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"727": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/regions/queries.ts",
			"qualifiedName": "__object"
		},
		"728": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "limit"
		},
		"729": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "offset"
		},
		"730": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "count"
		},
		"731": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/regions/index.d.ts",
			"qualifiedName": "regions"
		},
		"732": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"733": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/regions/queries.ts",
			"qualifiedName": "useRegion"
		},
		"734": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/regions/queries.ts",
			"qualifiedName": "useRegion"
		},
		"735": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/regions/queries.ts",
			"qualifiedName": "id"
		},
		"736": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/regions/queries.ts",
			"qualifiedName": "options"
		},
		"737": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/regions/queries.ts",
			"qualifiedName": "__object"
		},
		"738": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/regions/index.d.ts",
			"qualifiedName": "region"
		},
		"739": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"740": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/regions/queries.ts",
			"qualifiedName": "__object"
		},
		"741": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/regions/index.d.ts",
			"qualifiedName": "region"
		},
		"742": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"743": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/regions/queries.ts",
			"qualifiedName": "__object"
		},
		"744": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/regions/index.d.ts",
			"qualifiedName": "region"
		},
		"745": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"746": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/regions/queries.ts",
			"qualifiedName": "__object"
		},
		"747": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/regions/index.d.ts",
			"qualifiedName": "region"
		},
		"748": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"749": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/return-reasons/queries.ts",
			"qualifiedName": "useReturnReasons"
		},
		"750": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/return-reasons/queries.ts",
			"qualifiedName": "useReturnReasons"
		},
		"751": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/return-reasons/queries.ts",
			"qualifiedName": "options"
		},
		"752": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/return-reasons/queries.ts",
			"qualifiedName": "__object"
		},
		"753": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/return-reasons/index.d.ts",
			"qualifiedName": "return_reasons"
		},
		"754": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"755": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/return-reasons/queries.ts",
			"qualifiedName": "__object"
		},
		"756": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/return-reasons/index.d.ts",
			"qualifiedName": "return_reasons"
		},
		"757": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"758": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/return-reasons/queries.ts",
			"qualifiedName": "__object"
		},
		"759": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/return-reasons/index.d.ts",
			"qualifiedName": "return_reasons"
		},
		"760": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"761": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/return-reasons/queries.ts",
			"qualifiedName": "__object"
		},
		"762": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/return-reasons/index.d.ts",
			"qualifiedName": "return_reasons"
		},
		"763": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"764": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/return-reasons/queries.ts",
			"qualifiedName": "useReturnReason"
		},
		"765": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/return-reasons/queries.ts",
			"qualifiedName": "useReturnReason"
		},
		"766": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/return-reasons/queries.ts",
			"qualifiedName": "id"
		},
		"767": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/return-reasons/queries.ts",
			"qualifiedName": "options"
		},
		"768": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/return-reasons/queries.ts",
			"qualifiedName": "__object"
		},
		"769": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/return-reasons/index.d.ts",
			"qualifiedName": "return_reason"
		},
		"770": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"771": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/return-reasons/queries.ts",
			"qualifiedName": "__object"
		},
		"772": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/return-reasons/index.d.ts",
			"qualifiedName": "return_reason"
		},
		"773": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"774": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/return-reasons/queries.ts",
			"qualifiedName": "__object"
		},
		"775": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/return-reasons/index.d.ts",
			"qualifiedName": "return_reason"
		},
		"776": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"777": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/return-reasons/queries.ts",
			"qualifiedName": "__object"
		},
		"778": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/return-reasons/index.d.ts",
			"qualifiedName": "return_reason"
		},
		"779": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"780": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/returns/mutations.ts",
			"qualifiedName": "useCreateReturn"
		},
		"781": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/returns/mutations.ts",
			"qualifiedName": "useCreateReturn"
		},
		"782": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/returns/mutations.ts",
			"qualifiedName": "options"
		},
		"783": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/shipping-options/queries.ts",
			"qualifiedName": "useShippingOptions"
		},
		"784": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/shipping-options/queries.ts",
			"qualifiedName": "useShippingOptions"
		},
		"785": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/shipping-options/queries.ts",
			"qualifiedName": "query"
		},
		"786": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/shipping-options/queries.ts",
			"qualifiedName": "options"
		},
		"787": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"788": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"789": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/shipping-options/queries.ts",
			"qualifiedName": "__object"
		},
		"790": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/shipping-options/index.d.ts",
			"qualifiedName": "shipping_options"
		},
		"791": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"792": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/shipping-options/queries.ts",
			"qualifiedName": "__object"
		},
		"793": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/shipping-options/index.d.ts",
			"qualifiedName": "shipping_options"
		},
		"794": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"795": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/shipping-options/queries.ts",
			"qualifiedName": "__object"
		},
		"796": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/shipping-options/index.d.ts",
			"qualifiedName": "shipping_options"
		},
		"797": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"798": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/shipping-options/queries.ts",
			"qualifiedName": "__object"
		},
		"799": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/shipping-options/index.d.ts",
			"qualifiedName": "shipping_options"
		},
		"800": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"801": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/shipping-options/queries.ts",
			"qualifiedName": "useCartShippingOptions"
		},
		"802": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/shipping-options/queries.ts",
			"qualifiedName": "useCartShippingOptions"
		},
		"803": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/shipping-options/queries.ts",
			"qualifiedName": "cartId"
		},
		"804": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/shipping-options/queries.ts",
			"qualifiedName": "options"
		},
		"805": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/shipping-options/queries.ts",
			"qualifiedName": "__object"
		},
		"806": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/shipping-options/index.d.ts",
			"qualifiedName": "shipping_options"
		},
		"807": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"808": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/shipping-options/queries.ts",
			"qualifiedName": "__object"
		},
		"809": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/shipping-options/index.d.ts",
			"qualifiedName": "shipping_options"
		},
		"810": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"811": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/shipping-options/queries.ts",
			"qualifiedName": "__object"
		},
		"812": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/shipping-options/index.d.ts",
			"qualifiedName": "shipping_options"
		},
		"813": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"814": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/shipping-options/queries.ts",
			"qualifiedName": "__object"
		},
		"815": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/shipping-options/index.d.ts",
			"qualifiedName": "shipping_options"
		},
		"816": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"817": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/swaps/queries.ts",
			"qualifiedName": "useCartSwap"
		},
		"818": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/swaps/queries.ts",
			"qualifiedName": "useCartSwap"
		},
		"819": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/swaps/queries.ts",
			"qualifiedName": "cartId"
		},
		"820": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/swaps/queries.ts",
			"qualifiedName": "options"
		},
		"821": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/swaps/queries.ts",
			"qualifiedName": "__object"
		},
		"822": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/swaps/index.d.ts",
			"qualifiedName": "swap"
		},
		"823": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"824": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/swaps/queries.ts",
			"qualifiedName": "__object"
		},
		"825": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/swaps/index.d.ts",
			"qualifiedName": "swap"
		},
		"826": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"827": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/swaps/queries.ts",
			"qualifiedName": "__object"
		},
		"828": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/swaps/index.d.ts",
			"qualifiedName": "swap"
		},
		"829": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"830": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/swaps/queries.ts",
			"qualifiedName": "__object"
		},
		"831": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/store/swaps/index.d.ts",
			"qualifiedName": "swap"
		},
		"832": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"833": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/swaps/mutations.ts",
			"qualifiedName": "useCreateSwap"
		},
		"834": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/swaps/mutations.ts",
			"qualifiedName": "useCreateSwap"
		},
		"835": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/store/swaps/mutations.ts",
			"qualifiedName": "options"
		},
		"836": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/auth/queries.ts",
			"qualifiedName": "adminAuthKeys"
		},
		"837": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/auth/queries.ts",
			"qualifiedName": "useAdminGetSession"
		},
		"838": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/auth/queries.ts",
			"qualifiedName": "useAdminGetSession"
		},
		"839": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/auth/queries.ts",
			"qualifiedName": "options"
		},
		"840": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/auth/queries.ts",
			"qualifiedName": "__object"
		},
		"841": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/auth/index.d.ts",
			"qualifiedName": "user"
		},
		"842": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"843": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/auth/queries.ts",
			"qualifiedName": "__object"
		},
		"844": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/auth/index.d.ts",
			"qualifiedName": "user"
		},
		"845": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"846": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/auth/queries.ts",
			"qualifiedName": "__object"
		},
		"847": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/auth/index.d.ts",
			"qualifiedName": "user"
		},
		"848": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"849": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/auth/queries.ts",
			"qualifiedName": "__object"
		},
		"850": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/auth/index.d.ts",
			"qualifiedName": "user"
		},
		"851": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"852": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/auth/mutations.ts",
			"qualifiedName": "useAdminLogin"
		},
		"853": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/auth/mutations.ts",
			"qualifiedName": "useAdminLogin"
		},
		"854": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/auth/mutations.ts",
			"qualifiedName": "options"
		},
		"855": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/auth/mutations.ts",
			"qualifiedName": "useAdminDeleteSession"
		},
		"856": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/auth/mutations.ts",
			"qualifiedName": "useAdminDeleteSession"
		},
		"857": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/auth/mutations.ts",
			"qualifiedName": "options"
		},
		"858": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/queries.ts",
			"qualifiedName": "adminBatchJobsKeys"
		},
		"859": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/queries.ts",
			"qualifiedName": "useAdminBatchJobs"
		},
		"860": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/queries.ts",
			"qualifiedName": "useAdminBatchJobs"
		},
		"861": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/queries.ts",
			"qualifiedName": "query"
		},
		"862": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/queries.ts",
			"qualifiedName": "options"
		},
		"863": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"864": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"865": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/queries.ts",
			"qualifiedName": "__object"
		},
		"866": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"867": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"868": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"869": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/batch/index.d.ts",
			"qualifiedName": "batch_jobs"
		},
		"870": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"871": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/queries.ts",
			"qualifiedName": "__object"
		},
		"872": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"873": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"874": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"875": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/batch/index.d.ts",
			"qualifiedName": "batch_jobs"
		},
		"876": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"877": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/queries.ts",
			"qualifiedName": "__object"
		},
		"878": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"879": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"880": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"881": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/batch/index.d.ts",
			"qualifiedName": "batch_jobs"
		},
		"882": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"883": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/queries.ts",
			"qualifiedName": "__object"
		},
		"884": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"885": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"886": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"887": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/batch/index.d.ts",
			"qualifiedName": "batch_jobs"
		},
		"888": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"889": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/queries.ts",
			"qualifiedName": "useAdminBatchJob"
		},
		"890": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/queries.ts",
			"qualifiedName": "useAdminBatchJob"
		},
		"891": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/queries.ts",
			"qualifiedName": "id"
		},
		"892": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/queries.ts",
			"qualifiedName": "options"
		},
		"893": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/queries.ts",
			"qualifiedName": "__object"
		},
		"894": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/batch/index.d.ts",
			"qualifiedName": "batch_job"
		},
		"895": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"896": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/queries.ts",
			"qualifiedName": "__object"
		},
		"897": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/batch/index.d.ts",
			"qualifiedName": "batch_job"
		},
		"898": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"899": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/queries.ts",
			"qualifiedName": "__object"
		},
		"900": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/batch/index.d.ts",
			"qualifiedName": "batch_job"
		},
		"901": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"902": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/queries.ts",
			"qualifiedName": "__object"
		},
		"903": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/batch/index.d.ts",
			"qualifiedName": "batch_job"
		},
		"904": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"905": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/mutations.ts",
			"qualifiedName": "useAdminCreateBatchJob"
		},
		"906": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/mutations.ts",
			"qualifiedName": "useAdminCreateBatchJob"
		},
		"907": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/mutations.ts",
			"qualifiedName": "options"
		},
		"908": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/mutations.ts",
			"qualifiedName": "useAdminCancelBatchJob"
		},
		"909": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/mutations.ts",
			"qualifiedName": "useAdminCancelBatchJob"
		},
		"910": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/mutations.ts",
			"qualifiedName": "id"
		},
		"911": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/mutations.ts",
			"qualifiedName": "options"
		},
		"912": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/mutations.ts",
			"qualifiedName": "useAdminConfirmBatchJob"
		},
		"913": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/mutations.ts",
			"qualifiedName": "useAdminConfirmBatchJob"
		},
		"914": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/mutations.ts",
			"qualifiedName": "id"
		},
		"915": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/batch-jobs/mutations.ts",
			"qualifiedName": "options"
		},
		"916": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "useAdminCreateClaim"
		},
		"917": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "useAdminCreateClaim"
		},
		"918": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "orderId"
		},
		"919": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "options"
		},
		"920": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "AdminUpdateClaimReq"
		},
		"921": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "__type"
		},
		"922": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "__type.claim_id"
		},
		"923": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "useAdminUpdateClaim"
		},
		"924": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "useAdminUpdateClaim"
		},
		"925": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "orderId"
		},
		"926": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "options"
		},
		"927": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "useAdminCancelClaim"
		},
		"928": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "useAdminCancelClaim"
		},
		"929": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "orderId"
		},
		"930": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "options"
		},
		"931": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "AdminFulfillClaimReq"
		},
		"932": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "__type"
		},
		"933": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "__type.claim_id"
		},
		"934": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "useAdminFulfillClaim"
		},
		"935": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "useAdminFulfillClaim"
		},
		"936": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "orderId"
		},
		"937": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "options"
		},
		"938": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "AdminCancelClaimFulfillmentReq"
		},
		"939": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "__type"
		},
		"940": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "__type.claim_id"
		},
		"941": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "__type.fulfillment_id"
		},
		"942": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "useAdminCancelClaimFulfillment"
		},
		"943": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "useAdminCancelClaimFulfillment"
		},
		"944": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "orderId"
		},
		"945": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "options"
		},
		"946": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "useAdminCreateClaimShipment"
		},
		"947": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "useAdminCreateClaimShipment"
		},
		"948": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "orderId"
		},
		"949": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "options"
		},
		"950": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "__type"
		},
		"951": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "__type.claim_id"
		},
		"952": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "__type"
		},
		"953": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/claims/mutations.ts",
			"qualifiedName": "__type.claim_id"
		},
		"954": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/queries.ts",
			"qualifiedName": "adminCollectionKeys"
		},
		"955": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/queries.ts",
			"qualifiedName": "useAdminCollections"
		},
		"956": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/queries.ts",
			"qualifiedName": "useAdminCollections"
		},
		"957": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/queries.ts",
			"qualifiedName": "query"
		},
		"958": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/queries.ts",
			"qualifiedName": "options"
		},
		"959": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"960": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"961": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/queries.ts",
			"qualifiedName": "__object"
		},
		"962": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"963": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"964": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"965": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/index.d.ts",
			"qualifiedName": "collections"
		},
		"966": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"967": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/queries.ts",
			"qualifiedName": "__object"
		},
		"968": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"969": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"970": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"971": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/index.d.ts",
			"qualifiedName": "collections"
		},
		"972": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"973": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/queries.ts",
			"qualifiedName": "__object"
		},
		"974": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"975": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"976": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"977": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/index.d.ts",
			"qualifiedName": "collections"
		},
		"978": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"979": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/queries.ts",
			"qualifiedName": "__object"
		},
		"980": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"981": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"982": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"983": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/index.d.ts",
			"qualifiedName": "collections"
		},
		"984": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"985": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/queries.ts",
			"qualifiedName": "useAdminCollection"
		},
		"986": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/queries.ts",
			"qualifiedName": "useAdminCollection"
		},
		"987": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/queries.ts",
			"qualifiedName": "id"
		},
		"988": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/queries.ts",
			"qualifiedName": "options"
		},
		"989": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/queries.ts",
			"qualifiedName": "__object"
		},
		"990": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/index.d.ts",
			"qualifiedName": "collection"
		},
		"991": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"992": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/queries.ts",
			"qualifiedName": "__object"
		},
		"993": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/index.d.ts",
			"qualifiedName": "collection"
		},
		"994": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"995": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/queries.ts",
			"qualifiedName": "__object"
		},
		"996": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/index.d.ts",
			"qualifiedName": "collection"
		},
		"997": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"998": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/queries.ts",
			"qualifiedName": "__object"
		},
		"999": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/collections/index.d.ts",
			"qualifiedName": "collection"
		},
		"1000": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1001": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/mutations.ts",
			"qualifiedName": "useAdminCreateCollection"
		},
		"1002": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/mutations.ts",
			"qualifiedName": "useAdminCreateCollection"
		},
		"1003": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/mutations.ts",
			"qualifiedName": "options"
		},
		"1004": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/mutations.ts",
			"qualifiedName": "useAdminUpdateCollection"
		},
		"1005": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/mutations.ts",
			"qualifiedName": "useAdminUpdateCollection"
		},
		"1006": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/mutations.ts",
			"qualifiedName": "id"
		},
		"1007": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/mutations.ts",
			"qualifiedName": "options"
		},
		"1008": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/mutations.ts",
			"qualifiedName": "useAdminDeleteCollection"
		},
		"1009": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/mutations.ts",
			"qualifiedName": "useAdminDeleteCollection"
		},
		"1010": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/mutations.ts",
			"qualifiedName": "id"
		},
		"1011": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/mutations.ts",
			"qualifiedName": "options"
		},
		"1012": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/mutations.ts",
			"qualifiedName": "useAdminAddProductsToCollection"
		},
		"1013": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/mutations.ts",
			"qualifiedName": "useAdminAddProductsToCollection"
		},
		"1014": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/mutations.ts",
			"qualifiedName": "id"
		},
		"1015": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/mutations.ts",
			"qualifiedName": "options"
		},
		"1016": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/mutations.ts",
			"qualifiedName": "useAdminRemoveProductsFromCollection"
		},
		"1017": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/mutations.ts",
			"qualifiedName": "useAdminRemoveProductsFromCollection"
		},
		"1018": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/mutations.ts",
			"qualifiedName": "id"
		},
		"1019": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/collections/mutations.ts",
			"qualifiedName": "options"
		},
		"1020": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/currencies/mutations.ts",
			"qualifiedName": "useAdminUpdateCurrency"
		},
		"1021": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/currencies/mutations.ts",
			"qualifiedName": "useAdminUpdateCurrency"
		},
		"1022": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/currencies/mutations.ts",
			"qualifiedName": "code"
		},
		"1023": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/currencies/mutations.ts",
			"qualifiedName": "options"
		},
		"1024": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/currencies/queries.ts",
			"qualifiedName": "adminCurrenciesKeys"
		},
		"1025": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/currencies/queries.ts",
			"qualifiedName": "useAdminCurrencies"
		},
		"1026": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/currencies/queries.ts",
			"qualifiedName": "useAdminCurrencies"
		},
		"1027": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/currencies/queries.ts",
			"qualifiedName": "query"
		},
		"1028": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/currencies/queries.ts",
			"qualifiedName": "options"
		},
		"1029": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"1030": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"1031": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/currencies/queries.ts",
			"qualifiedName": "__object"
		},
		"1032": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"1033": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"1034": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"1035": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/currencies/index.d.ts",
			"qualifiedName": "currencies"
		},
		"1036": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1037": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/currencies/queries.ts",
			"qualifiedName": "__object"
		},
		"1038": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"1039": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"1040": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"1041": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/currencies/index.d.ts",
			"qualifiedName": "currencies"
		},
		"1042": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1043": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/currencies/queries.ts",
			"qualifiedName": "__object"
		},
		"1044": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"1045": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"1046": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"1047": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/currencies/index.d.ts",
			"qualifiedName": "currencies"
		},
		"1048": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1049": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/currencies/queries.ts",
			"qualifiedName": "__object"
		},
		"1050": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"1051": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"1052": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"1053": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/currencies/index.d.ts",
			"qualifiedName": "currencies"
		},
		"1054": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1055": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/mutations.ts",
			"qualifiedName": "useAdminCustomDelete"
		},
		"1056": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/mutations.ts",
			"qualifiedName": "useAdminCustomDelete"
		},
		"1057": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/mutations.ts",
			"qualifiedName": "TResponse"
		},
		"1058": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/mutations.ts",
			"qualifiedName": "path"
		},
		"1059": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/mutations.ts",
			"qualifiedName": "queryKey"
		},
		"1060": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/mutations.ts",
			"qualifiedName": "relatedDomains"
		},
		"1061": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/mutations.ts",
			"qualifiedName": "options"
		},
		"1062": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/mutations.ts",
			"qualifiedName": "useAdminCustomPost"
		},
		"1063": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/mutations.ts",
			"qualifiedName": "useAdminCustomPost"
		},
		"1064": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/mutations.ts",
			"qualifiedName": "TPayload"
		},
		"1065": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/mutations.ts",
			"qualifiedName": "TResponse"
		},
		"1066": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/mutations.ts",
			"qualifiedName": "path"
		},
		"1067": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/mutations.ts",
			"qualifiedName": "queryKey"
		},
		"1068": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/mutations.ts",
			"qualifiedName": "relatedDomains"
		},
		"1069": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/mutations.ts",
			"qualifiedName": "options"
		},
		"1070": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/queries.ts",
			"qualifiedName": "useAdminCustomQuery"
		},
		"1071": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/queries.ts",
			"qualifiedName": "useAdminCustomQuery"
		},
		"1072": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/queries.ts",
			"qualifiedName": "TQuery"
		},
		"1073": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/queries.ts",
			"qualifiedName": "TResponse"
		},
		"1074": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/queries.ts",
			"qualifiedName": "path"
		},
		"1075": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/queries.ts",
			"qualifiedName": "queryKey"
		},
		"1076": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/queries.ts",
			"qualifiedName": "query"
		},
		"1077": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/queries.ts",
			"qualifiedName": "options"
		},
		"1078": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/queries.ts",
			"qualifiedName": "__object"
		},
		"1079": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/queries.ts",
			"qualifiedName": "__object.data"
		},
		"1080": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/queries.ts",
			"qualifiedName": "__object"
		},
		"1081": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/queries.ts",
			"qualifiedName": "__object.data"
		},
		"1082": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/queries.ts",
			"qualifiedName": "__object"
		},
		"1083": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/queries.ts",
			"qualifiedName": "__object.data"
		},
		"1084": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/queries.ts",
			"qualifiedName": "__object"
		},
		"1085": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/custom/queries.ts",
			"qualifiedName": "__object.data"
		},
		"1116": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "useAdminCustomerGroup"
		},
		"1117": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "useAdminCustomerGroup"
		},
		"1118": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "id"
		},
		"1119": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "query"
		},
		"1120": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "options"
		},
		"1121": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "__object"
		},
		"1122": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/index.d.ts",
			"qualifiedName": "customer_group"
		},
		"1123": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1124": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "__object"
		},
		"1125": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/index.d.ts",
			"qualifiedName": "customer_group"
		},
		"1126": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1127": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "__object"
		},
		"1128": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/index.d.ts",
			"qualifiedName": "customer_group"
		},
		"1129": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1130": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "__object"
		},
		"1131": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/index.d.ts",
			"qualifiedName": "customer_group"
		},
		"1132": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1133": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "useAdminCustomerGroups"
		},
		"1134": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "useAdminCustomerGroups"
		},
		"1135": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "query"
		},
		"1136": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "options"
		},
		"1137": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"1138": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"1139": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "__object"
		},
		"1140": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"1141": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"1142": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"1143": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/index.d.ts",
			"qualifiedName": "customer_groups"
		},
		"1144": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1145": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "__object"
		},
		"1146": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"1147": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"1148": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"1149": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/index.d.ts",
			"qualifiedName": "customer_groups"
		},
		"1150": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1151": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "__object"
		},
		"1152": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"1153": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"1154": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"1155": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/index.d.ts",
			"qualifiedName": "customer_groups"
		},
		"1156": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1157": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "__object"
		},
		"1158": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"1159": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"1160": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"1161": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customer-groups/index.d.ts",
			"qualifiedName": "customer_groups"
		},
		"1162": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1163": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "useAdminCustomerGroupCustomers"
		},
		"1164": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "useAdminCustomerGroupCustomers"
		},
		"1165": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "id"
		},
		"1166": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "query"
		},
		"1167": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "options"
		},
		"1168": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "__object"
		},
		"1169": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/list-customers.d.ts",
			"qualifiedName": "limit"
		},
		"1170": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/list-customers.d.ts",
			"qualifiedName": "offset"
		},
		"1171": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/list-customers.d.ts",
			"qualifiedName": "expand"
		},
		"1172": {
			"sourceFileName": "../../../packages/medusa/dist/types/customers.d.ts",
			"qualifiedName": "q"
		},
		"1173": {
			"sourceFileName": "../../../packages/medusa/dist/types/customers.d.ts",
			"qualifiedName": "has_account"
		},
		"1174": {
			"sourceFileName": "../../../packages/medusa/dist/types/customers.d.ts",
			"qualifiedName": "groups"
		},
		"1175": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "__object"
		},
		"1176": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"1177": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"1178": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"1179": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/index.d.ts",
			"qualifiedName": "customers"
		},
		"1180": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1181": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "__object"
		},
		"1182": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"1183": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"1184": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"1185": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/index.d.ts",
			"qualifiedName": "customers"
		},
		"1186": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1187": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "__object"
		},
		"1188": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"1189": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"1190": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"1191": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/index.d.ts",
			"qualifiedName": "customers"
		},
		"1192": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1193": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/queries.ts",
			"qualifiedName": "__object"
		},
		"1194": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"1195": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"1196": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"1197": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/index.d.ts",
			"qualifiedName": "customers"
		},
		"1198": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1199": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/mutations.ts",
			"qualifiedName": "useAdminCreateCustomerGroup"
		},
		"1200": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/mutations.ts",
			"qualifiedName": "useAdminCreateCustomerGroup"
		},
		"1201": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/mutations.ts",
			"qualifiedName": "options"
		},
		"1202": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/mutations.ts",
			"qualifiedName": "useAdminUpdateCustomerGroup"
		},
		"1203": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/mutations.ts",
			"qualifiedName": "useAdminUpdateCustomerGroup"
		},
		"1204": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/mutations.ts",
			"qualifiedName": "id"
		},
		"1205": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/mutations.ts",
			"qualifiedName": "options"
		},
		"1206": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/mutations.ts",
			"qualifiedName": "useAdminDeleteCustomerGroup"
		},
		"1207": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/mutations.ts",
			"qualifiedName": "useAdminDeleteCustomerGroup"
		},
		"1208": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/mutations.ts",
			"qualifiedName": "id"
		},
		"1209": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/mutations.ts",
			"qualifiedName": "options"
		},
		"1210": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/mutations.ts",
			"qualifiedName": "useAdminAddCustomersToCustomerGroup"
		},
		"1211": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/mutations.ts",
			"qualifiedName": "useAdminAddCustomersToCustomerGroup"
		},
		"1212": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/mutations.ts",
			"qualifiedName": "id"
		},
		"1213": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/mutations.ts",
			"qualifiedName": "options"
		},
		"1214": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/mutations.ts",
			"qualifiedName": "useAdminRemoveCustomersFromCustomerGroup"
		},
		"1215": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/mutations.ts",
			"qualifiedName": "useAdminRemoveCustomersFromCustomerGroup"
		},
		"1216": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/mutations.ts",
			"qualifiedName": "id"
		},
		"1217": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customer-groups/mutations.ts",
			"qualifiedName": "options"
		},
		"1218": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/queries.ts",
			"qualifiedName": "adminCustomerKeys"
		},
		"1219": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/queries.ts",
			"qualifiedName": "useAdminCustomers"
		},
		"1220": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/queries.ts",
			"qualifiedName": "useAdminCustomers"
		},
		"1221": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/queries.ts",
			"qualifiedName": "query"
		},
		"1222": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/queries.ts",
			"qualifiedName": "options"
		},
		"1223": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"1224": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"1225": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/queries.ts",
			"qualifiedName": "__object"
		},
		"1226": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"1227": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"1228": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"1229": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/index.d.ts",
			"qualifiedName": "customers"
		},
		"1230": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1231": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/queries.ts",
			"qualifiedName": "__object"
		},
		"1232": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"1233": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"1234": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"1235": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/index.d.ts",
			"qualifiedName": "customers"
		},
		"1236": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1237": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/queries.ts",
			"qualifiedName": "__object"
		},
		"1238": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"1239": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"1240": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"1241": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/index.d.ts",
			"qualifiedName": "customers"
		},
		"1242": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1243": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/queries.ts",
			"qualifiedName": "__object"
		},
		"1244": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"1245": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"1246": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"1247": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/index.d.ts",
			"qualifiedName": "customers"
		},
		"1248": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1249": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/queries.ts",
			"qualifiedName": "useAdminCustomer"
		},
		"1250": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/queries.ts",
			"qualifiedName": "useAdminCustomer"
		},
		"1251": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/queries.ts",
			"qualifiedName": "id"
		},
		"1252": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/queries.ts",
			"qualifiedName": "options"
		},
		"1253": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/queries.ts",
			"qualifiedName": "__object"
		},
		"1254": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/index.d.ts",
			"qualifiedName": "customer"
		},
		"1255": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1256": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/queries.ts",
			"qualifiedName": "__object"
		},
		"1257": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/index.d.ts",
			"qualifiedName": "customer"
		},
		"1258": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1259": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/queries.ts",
			"qualifiedName": "__object"
		},
		"1260": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/index.d.ts",
			"qualifiedName": "customer"
		},
		"1261": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1262": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/queries.ts",
			"qualifiedName": "__object"
		},
		"1263": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/customers/index.d.ts",
			"qualifiedName": "customer"
		},
		"1264": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1265": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/mutations.ts",
			"qualifiedName": "useAdminCreateCustomer"
		},
		"1266": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/mutations.ts",
			"qualifiedName": "useAdminCreateCustomer"
		},
		"1267": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/mutations.ts",
			"qualifiedName": "options"
		},
		"1268": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/mutations.ts",
			"qualifiedName": "useAdminUpdateCustomer"
		},
		"1269": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/mutations.ts",
			"qualifiedName": "useAdminUpdateCustomer"
		},
		"1270": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/mutations.ts",
			"qualifiedName": "id"
		},
		"1271": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/customers/mutations.ts",
			"qualifiedName": "options"
		},
		"1272": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "adminDiscountKeys"
		},
		"1273": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "__object"
		},
		"1274": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "__object.detailCondition"
		},
		"1275": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "__object.detailCondition"
		},
		"1276": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "id"
		},
		"1277": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "query"
		},
		"1278": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.all"
		},
		"1279": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.lists"
		},
		"1280": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"1281": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"1282": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.list"
		},
		"1283": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"1284": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"1285": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "query"
		},
		"1286": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"1287": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"1288": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.details"
		},
		"1289": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"1290": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"1291": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.detail"
		},
		"1292": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"1293": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"1294": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "id"
		},
		"1295": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "useAdminDiscounts"
		},
		"1296": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "useAdminDiscounts"
		},
		"1297": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "query"
		},
		"1298": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "options"
		},
		"1299": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"1300": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"1301": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "__object"
		},
		"1302": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"1303": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"1304": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"1305": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
			"qualifiedName": "discounts"
		},
		"1306": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1307": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "__object"
		},
		"1308": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"1309": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"1310": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"1311": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
			"qualifiedName": "discounts"
		},
		"1312": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1313": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "__object"
		},
		"1314": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"1315": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"1316": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"1317": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
			"qualifiedName": "discounts"
		},
		"1318": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1319": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "__object"
		},
		"1320": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"1321": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"1322": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"1323": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
			"qualifiedName": "discounts"
		},
		"1324": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1325": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "useAdminDiscount"
		},
		"1326": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "useAdminDiscount"
		},
		"1327": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "id"
		},
		"1328": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "query"
		},
		"1329": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "options"
		},
		"1330": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "__object"
		},
		"1331": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
			"qualifiedName": "discount"
		},
		"1332": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1333": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "__object"
		},
		"1334": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
			"qualifiedName": "discount"
		},
		"1335": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1336": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "__object"
		},
		"1337": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
			"qualifiedName": "discount"
		},
		"1338": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1339": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "__object"
		},
		"1340": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
			"qualifiedName": "discount"
		},
		"1341": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1342": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "useAdminGetDiscountByCode"
		},
		"1343": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "useAdminGetDiscountByCode"
		},
		"1344": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "code"
		},
		"1345": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "options"
		},
		"1346": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "__object"
		},
		"1347": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
			"qualifiedName": "discount"
		},
		"1348": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1349": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "__object"
		},
		"1350": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
			"qualifiedName": "discount"
		},
		"1351": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1352": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "__object"
		},
		"1353": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
			"qualifiedName": "discount"
		},
		"1354": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1355": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "__object"
		},
		"1356": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
			"qualifiedName": "discount"
		},
		"1357": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1358": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "useAdminGetDiscountCondition"
		},
		"1359": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "useAdminGetDiscountCondition"
		},
		"1360": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "id"
		},
		"1361": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "conditionId"
		},
		"1362": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "query"
		},
		"1363": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "options"
		},
		"1364": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "__object"
		},
		"1365": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
			"qualifiedName": "discount_condition"
		},
		"1366": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1367": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "__object"
		},
		"1368": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
			"qualifiedName": "discount_condition"
		},
		"1369": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1370": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "__object"
		},
		"1371": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
			"qualifiedName": "discount_condition"
		},
		"1372": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1373": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/queries.ts",
			"qualifiedName": "__object"
		},
		"1374": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/discounts/index.d.ts",
			"qualifiedName": "discount_condition"
		},
		"1375": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1376": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminAddDiscountConditionResourceBatch"
		},
		"1377": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminAddDiscountConditionResourceBatch"
		},
		"1378": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "discountId"
		},
		"1379": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "conditionId"
		},
		"1380": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "query"
		},
		"1381": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "options"
		},
		"1382": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminDeleteDiscountConditionResourceBatch"
		},
		"1383": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminDeleteDiscountConditionResourceBatch"
		},
		"1384": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "discountId"
		},
		"1385": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "conditionId"
		},
		"1386": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "options"
		},
		"1387": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminCreateDiscount"
		},
		"1388": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminCreateDiscount"
		},
		"1389": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "options"
		},
		"1390": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminUpdateDiscount"
		},
		"1391": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminUpdateDiscount"
		},
		"1392": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "id"
		},
		"1393": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "options"
		},
		"1394": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminDeleteDiscount"
		},
		"1395": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminDeleteDiscount"
		},
		"1396": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "id"
		},
		"1397": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "options"
		},
		"1398": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminDiscountAddRegion"
		},
		"1399": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminDiscountAddRegion"
		},
		"1400": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "id"
		},
		"1401": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "options"
		},
		"1402": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminDiscountRemoveRegion"
		},
		"1403": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminDiscountRemoveRegion"
		},
		"1404": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "id"
		},
		"1405": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "options"
		},
		"1406": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminCreateDynamicDiscountCode"
		},
		"1407": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminCreateDynamicDiscountCode"
		},
		"1408": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "id"
		},
		"1409": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "options"
		},
		"1410": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminDeleteDynamicDiscountCode"
		},
		"1411": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminDeleteDynamicDiscountCode"
		},
		"1412": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "id"
		},
		"1413": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "options"
		},
		"1414": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminDiscountCreateCondition"
		},
		"1415": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminDiscountCreateCondition"
		},
		"1416": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "discountId"
		},
		"1417": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "options"
		},
		"1418": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminDiscountUpdateCondition"
		},
		"1419": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminDiscountUpdateCondition"
		},
		"1420": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "discountId"
		},
		"1421": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "conditionId"
		},
		"1422": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "options"
		},
		"1423": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminDiscountRemoveCondition"
		},
		"1424": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "useAdminDiscountRemoveCondition"
		},
		"1425": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "discountId"
		},
		"1426": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/discounts/mutations.ts",
			"qualifiedName": "options"
		},
		"1427": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/queries.ts",
			"qualifiedName": "adminDraftOrderKeys"
		},
		"1428": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/queries.ts",
			"qualifiedName": "useAdminDraftOrders"
		},
		"1429": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/queries.ts",
			"qualifiedName": "useAdminDraftOrders"
		},
		"1430": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/queries.ts",
			"qualifiedName": "query"
		},
		"1431": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/queries.ts",
			"qualifiedName": "options"
		},
		"1432": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"1433": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"1434": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/queries.ts",
			"qualifiedName": "__object"
		},
		"1435": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"1436": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"1437": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"1438": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
			"qualifiedName": "draft_orders"
		},
		"1439": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1440": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/queries.ts",
			"qualifiedName": "__object"
		},
		"1441": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"1442": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"1443": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"1444": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
			"qualifiedName": "draft_orders"
		},
		"1445": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1446": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/queries.ts",
			"qualifiedName": "__object"
		},
		"1447": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"1448": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"1449": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"1450": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
			"qualifiedName": "draft_orders"
		},
		"1451": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1452": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/queries.ts",
			"qualifiedName": "__object"
		},
		"1453": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"1454": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"1455": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"1456": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
			"qualifiedName": "draft_orders"
		},
		"1457": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1458": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/queries.ts",
			"qualifiedName": "useAdminDraftOrder"
		},
		"1459": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/queries.ts",
			"qualifiedName": "useAdminDraftOrder"
		},
		"1460": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/queries.ts",
			"qualifiedName": "id"
		},
		"1461": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/queries.ts",
			"qualifiedName": "options"
		},
		"1462": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/queries.ts",
			"qualifiedName": "__object"
		},
		"1463": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
			"qualifiedName": "draft_order"
		},
		"1464": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1465": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/queries.ts",
			"qualifiedName": "__object"
		},
		"1466": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
			"qualifiedName": "draft_order"
		},
		"1467": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1468": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/queries.ts",
			"qualifiedName": "__object"
		},
		"1469": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
			"qualifiedName": "draft_order"
		},
		"1470": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1471": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/queries.ts",
			"qualifiedName": "__object"
		},
		"1472": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/draft-orders/index.d.ts",
			"qualifiedName": "draft_order"
		},
		"1473": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1474": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "useAdminCreateDraftOrder"
		},
		"1475": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "useAdminCreateDraftOrder"
		},
		"1476": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "options"
		},
		"1477": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "useAdminUpdateDraftOrder"
		},
		"1478": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "useAdminUpdateDraftOrder"
		},
		"1479": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "id"
		},
		"1480": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "options"
		},
		"1481": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "useAdminDeleteDraftOrder"
		},
		"1482": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "useAdminDeleteDraftOrder"
		},
		"1483": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "id"
		},
		"1484": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "options"
		},
		"1485": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "useAdminDraftOrderRegisterPayment"
		},
		"1486": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "useAdminDraftOrderRegisterPayment"
		},
		"1487": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "id"
		},
		"1488": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "options"
		},
		"1489": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "useAdminDraftOrderAddLineItem"
		},
		"1490": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "useAdminDraftOrderAddLineItem"
		},
		"1491": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "id"
		},
		"1492": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "options"
		},
		"1493": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "useAdminDraftOrderRemoveLineItem"
		},
		"1494": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "useAdminDraftOrderRemoveLineItem"
		},
		"1495": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "id"
		},
		"1496": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "options"
		},
		"1497": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "AdminDraftOrderUpdateLineItemReq"
		},
		"1498": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "__type"
		},
		"1499": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "__type.item_id"
		},
		"1500": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "useAdminDraftOrderUpdateLineItem"
		},
		"1501": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "useAdminDraftOrderUpdateLineItem"
		},
		"1502": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "id"
		},
		"1503": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/draft-orders/mutations.ts",
			"qualifiedName": "options"
		},
		"1504": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/queries.ts",
			"qualifiedName": "adminGiftCardKeys"
		},
		"1505": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/queries.ts",
			"qualifiedName": "useAdminGiftCards"
		},
		"1506": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/queries.ts",
			"qualifiedName": "useAdminGiftCards"
		},
		"1507": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/queries.ts",
			"qualifiedName": "query"
		},
		"1508": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/queries.ts",
			"qualifiedName": "options"
		},
		"1509": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"1510": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"1511": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/queries.ts",
			"qualifiedName": "__object"
		},
		"1512": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"1513": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"1514": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"1515": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/gift-cards/index.d.ts",
			"qualifiedName": "gift_cards"
		},
		"1516": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1517": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/queries.ts",
			"qualifiedName": "__object"
		},
		"1518": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"1519": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"1520": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"1521": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/gift-cards/index.d.ts",
			"qualifiedName": "gift_cards"
		},
		"1522": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1523": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/queries.ts",
			"qualifiedName": "__object"
		},
		"1524": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"1525": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"1526": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"1527": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/gift-cards/index.d.ts",
			"qualifiedName": "gift_cards"
		},
		"1528": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1529": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/queries.ts",
			"qualifiedName": "__object"
		},
		"1530": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"1531": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"1532": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"1533": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/gift-cards/index.d.ts",
			"qualifiedName": "gift_cards"
		},
		"1534": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1535": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/queries.ts",
			"qualifiedName": "useAdminGiftCard"
		},
		"1536": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/queries.ts",
			"qualifiedName": "useAdminGiftCard"
		},
		"1537": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/queries.ts",
			"qualifiedName": "id"
		},
		"1538": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/queries.ts",
			"qualifiedName": "options"
		},
		"1539": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/queries.ts",
			"qualifiedName": "__object"
		},
		"1540": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/gift-cards/index.d.ts",
			"qualifiedName": "gift_card"
		},
		"1541": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1542": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/queries.ts",
			"qualifiedName": "__object"
		},
		"1543": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/gift-cards/index.d.ts",
			"qualifiedName": "gift_card"
		},
		"1544": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1545": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/queries.ts",
			"qualifiedName": "__object"
		},
		"1546": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/gift-cards/index.d.ts",
			"qualifiedName": "gift_card"
		},
		"1547": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1548": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/queries.ts",
			"qualifiedName": "__object"
		},
		"1549": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/gift-cards/index.d.ts",
			"qualifiedName": "gift_card"
		},
		"1550": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1551": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/mutations.ts",
			"qualifiedName": "useAdminCreateGiftCard"
		},
		"1552": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/mutations.ts",
			"qualifiedName": "useAdminCreateGiftCard"
		},
		"1553": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/mutations.ts",
			"qualifiedName": "options"
		},
		"1554": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/mutations.ts",
			"qualifiedName": "useAdminUpdateGiftCard"
		},
		"1555": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/mutations.ts",
			"qualifiedName": "useAdminUpdateGiftCard"
		},
		"1556": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/mutations.ts",
			"qualifiedName": "id"
		},
		"1557": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/mutations.ts",
			"qualifiedName": "options"
		},
		"1558": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/mutations.ts",
			"qualifiedName": "useAdminDeleteGiftCard"
		},
		"1559": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/mutations.ts",
			"qualifiedName": "useAdminDeleteGiftCard"
		},
		"1560": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/mutations.ts",
			"qualifiedName": "id"
		},
		"1561": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/gift-cards/mutations.ts",
			"qualifiedName": "options"
		},
		"1562": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "adminInventoryItemsKeys"
		},
		"1563": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "useAdminInventoryItems"
		},
		"1564": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "useAdminInventoryItems"
		},
		"1565": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "query"
		},
		"1566": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "options"
		},
		"1567": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"1568": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"1569": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "__object"
		},
		"1570": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"1571": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"1572": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"1573": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "inventory_items"
		},
		"1574": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1575": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "__object"
		},
		"1576": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"1577": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"1578": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"1579": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "inventory_items"
		},
		"1580": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1581": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "__object"
		},
		"1582": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"1583": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"1584": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"1585": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "inventory_items"
		},
		"1586": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1587": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "__object"
		},
		"1588": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"1589": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"1590": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"1591": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "inventory_items"
		},
		"1592": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1593": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "useAdminInventoryItem"
		},
		"1594": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "useAdminInventoryItem"
		},
		"1595": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "inventoryItemId"
		},
		"1596": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "query"
		},
		"1597": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "options"
		},
		"1598": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "__object"
		},
		"1599": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "inventory_item"
		},
		"1600": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1601": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "__object"
		},
		"1602": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "inventory_item"
		},
		"1603": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1604": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "__object"
		},
		"1605": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "inventory_item"
		},
		"1606": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1607": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "__object"
		},
		"1608": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "inventory_item"
		},
		"1609": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1610": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "useAdminInventoryItemLocationLevels"
		},
		"1611": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "useAdminInventoryItemLocationLevels"
		},
		"1612": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "inventoryItemId"
		},
		"1613": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "query"
		},
		"1614": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "options"
		},
		"1615": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "__object"
		},
		"1616": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "inventory_item"
		},
		"1617": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "__type"
		},
		"1618": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "__type.id"
		},
		"1619": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "__type.location_levels"
		},
		"1620": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1621": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "__object"
		},
		"1622": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "inventory_item"
		},
		"1623": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "__type"
		},
		"1624": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "__type.id"
		},
		"1625": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "__type.location_levels"
		},
		"1626": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1627": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "__object"
		},
		"1628": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "inventory_item"
		},
		"1629": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "__type"
		},
		"1630": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "__type.id"
		},
		"1631": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "__type.location_levels"
		},
		"1632": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1633": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/queries.ts",
			"qualifiedName": "__object"
		},
		"1634": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "inventory_item"
		},
		"1635": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "__type"
		},
		"1636": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "__type.id"
		},
		"1637": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/inventory-items/index.d.ts",
			"qualifiedName": "__type.location_levels"
		},
		"1638": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1639": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "useAdminCreateInventoryItem"
		},
		"1640": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "useAdminCreateInventoryItem"
		},
		"1641": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "options"
		},
		"1642": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "useAdminUpdateInventoryItem"
		},
		"1643": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "useAdminUpdateInventoryItem"
		},
		"1644": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "inventoryItemId"
		},
		"1645": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "options"
		},
		"1646": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "useAdminDeleteInventoryItem"
		},
		"1647": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "useAdminDeleteInventoryItem"
		},
		"1648": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "inventoryItemId"
		},
		"1649": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "options"
		},
		"1650": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "AdminUpdateLocationLevelReq"
		},
		"1651": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "__type"
		},
		"1652": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "__type.stockLocationId"
		},
		"1653": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "useAdminUpdateLocationLevel"
		},
		"1654": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "useAdminUpdateLocationLevel"
		},
		"1655": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "inventoryItemId"
		},
		"1656": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "options"
		},
		"1657": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "useAdminDeleteLocationLevel"
		},
		"1658": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "useAdminDeleteLocationLevel"
		},
		"1659": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "inventoryItemId"
		},
		"1660": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "options"
		},
		"1661": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "useAdminCreateLocationLevel"
		},
		"1662": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "useAdminCreateLocationLevel"
		},
		"1663": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "inventoryItemId"
		},
		"1664": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/inventory-item/mutations.ts",
			"qualifiedName": "options"
		},
		"1665": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/queries.ts",
			"qualifiedName": "adminInviteKeys"
		},
		"1666": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/queries.ts",
			"qualifiedName": "useAdminInvites"
		},
		"1667": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/queries.ts",
			"qualifiedName": "useAdminInvites"
		},
		"1668": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/queries.ts",
			"qualifiedName": "options"
		},
		"1669": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/queries.ts",
			"qualifiedName": "__object"
		},
		"1670": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/invites/index.d.ts",
			"qualifiedName": "invites"
		},
		"1671": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1672": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/queries.ts",
			"qualifiedName": "__object"
		},
		"1673": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/invites/index.d.ts",
			"qualifiedName": "invites"
		},
		"1674": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1675": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/queries.ts",
			"qualifiedName": "__object"
		},
		"1676": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/invites/index.d.ts",
			"qualifiedName": "invites"
		},
		"1677": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1678": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/queries.ts",
			"qualifiedName": "__object"
		},
		"1679": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/invites/index.d.ts",
			"qualifiedName": "invites"
		},
		"1680": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1681": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/mutations.ts",
			"qualifiedName": "useAdminAcceptInvite"
		},
		"1682": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/mutations.ts",
			"qualifiedName": "useAdminAcceptInvite"
		},
		"1683": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/mutations.ts",
			"qualifiedName": "options"
		},
		"1684": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/mutations.ts",
			"qualifiedName": "useAdminResendInvite"
		},
		"1685": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/mutations.ts",
			"qualifiedName": "useAdminResendInvite"
		},
		"1686": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/mutations.ts",
			"qualifiedName": "id"
		},
		"1687": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/mutations.ts",
			"qualifiedName": "options"
		},
		"1688": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/mutations.ts",
			"qualifiedName": "useAdminCreateInvite"
		},
		"1689": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/mutations.ts",
			"qualifiedName": "useAdminCreateInvite"
		},
		"1690": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/mutations.ts",
			"qualifiedName": "options"
		},
		"1691": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/mutations.ts",
			"qualifiedName": "useAdminDeleteInvite"
		},
		"1692": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/mutations.ts",
			"qualifiedName": "useAdminDeleteInvite"
		},
		"1693": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/mutations.ts",
			"qualifiedName": "id"
		},
		"1694": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/invites/mutations.ts",
			"qualifiedName": "options"
		},
		"1695": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/queries.ts",
			"qualifiedName": "adminNoteKeys"
		},
		"1696": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/queries.ts",
			"qualifiedName": "useAdminNotes"
		},
		"1697": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/queries.ts",
			"qualifiedName": "useAdminNotes"
		},
		"1698": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/queries.ts",
			"qualifiedName": "query"
		},
		"1699": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/queries.ts",
			"qualifiedName": "options"
		},
		"1700": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"1701": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"1702": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/queries.ts",
			"qualifiedName": "__object"
		},
		"1703": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"1704": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"1705": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"1706": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notes/index.d.ts",
			"qualifiedName": "notes"
		},
		"1707": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1708": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/queries.ts",
			"qualifiedName": "__object"
		},
		"1709": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"1710": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"1711": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"1712": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notes/index.d.ts",
			"qualifiedName": "notes"
		},
		"1713": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1714": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/queries.ts",
			"qualifiedName": "__object"
		},
		"1715": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"1716": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"1717": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"1718": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notes/index.d.ts",
			"qualifiedName": "notes"
		},
		"1719": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1720": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/queries.ts",
			"qualifiedName": "__object"
		},
		"1721": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"1722": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"1723": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"1724": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notes/index.d.ts",
			"qualifiedName": "notes"
		},
		"1725": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1726": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/queries.ts",
			"qualifiedName": "useAdminNote"
		},
		"1727": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/queries.ts",
			"qualifiedName": "useAdminNote"
		},
		"1728": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/queries.ts",
			"qualifiedName": "id"
		},
		"1729": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/queries.ts",
			"qualifiedName": "options"
		},
		"1730": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/queries.ts",
			"qualifiedName": "__object"
		},
		"1731": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notes/index.d.ts",
			"qualifiedName": "note"
		},
		"1732": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1733": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/queries.ts",
			"qualifiedName": "__object"
		},
		"1734": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notes/index.d.ts",
			"qualifiedName": "note"
		},
		"1735": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1736": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/queries.ts",
			"qualifiedName": "__object"
		},
		"1737": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notes/index.d.ts",
			"qualifiedName": "note"
		},
		"1738": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1739": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/queries.ts",
			"qualifiedName": "__object"
		},
		"1740": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notes/index.d.ts",
			"qualifiedName": "note"
		},
		"1741": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1742": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/mutations.ts",
			"qualifiedName": "useAdminCreateNote"
		},
		"1743": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/mutations.ts",
			"qualifiedName": "useAdminCreateNote"
		},
		"1744": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/mutations.ts",
			"qualifiedName": "options"
		},
		"1745": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/mutations.ts",
			"qualifiedName": "useAdminUpdateNote"
		},
		"1746": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/mutations.ts",
			"qualifiedName": "useAdminUpdateNote"
		},
		"1747": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/mutations.ts",
			"qualifiedName": "id"
		},
		"1748": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/mutations.ts",
			"qualifiedName": "options"
		},
		"1749": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/mutations.ts",
			"qualifiedName": "useAdminDeleteNote"
		},
		"1750": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/mutations.ts",
			"qualifiedName": "useAdminDeleteNote"
		},
		"1751": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/mutations.ts",
			"qualifiedName": "id"
		},
		"1752": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notes/mutations.ts",
			"qualifiedName": "options"
		},
		"1753": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notifications/queries.ts",
			"qualifiedName": "adminNotificationKeys"
		},
		"1754": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notifications/queries.ts",
			"qualifiedName": "useAdminNotifications"
		},
		"1755": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notifications/queries.ts",
			"qualifiedName": "useAdminNotifications"
		},
		"1756": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notifications/queries.ts",
			"qualifiedName": "query"
		},
		"1757": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notifications/queries.ts",
			"qualifiedName": "options"
		},
		"1758": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"1759": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"1760": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notifications/queries.ts",
			"qualifiedName": "__object"
		},
		"1761": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "limit"
		},
		"1762": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "offset"
		},
		"1763": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "count"
		},
		"1764": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notifications/index.d.ts",
			"qualifiedName": "notifications"
		},
		"1765": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1766": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notifications/queries.ts",
			"qualifiedName": "__object"
		},
		"1767": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "limit"
		},
		"1768": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "offset"
		},
		"1769": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "count"
		},
		"1770": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notifications/index.d.ts",
			"qualifiedName": "notifications"
		},
		"1771": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1772": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notifications/queries.ts",
			"qualifiedName": "__object"
		},
		"1773": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "limit"
		},
		"1774": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "offset"
		},
		"1775": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "count"
		},
		"1776": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notifications/index.d.ts",
			"qualifiedName": "notifications"
		},
		"1777": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1778": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notifications/queries.ts",
			"qualifiedName": "__object"
		},
		"1779": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "limit"
		},
		"1780": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "offset"
		},
		"1781": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "count"
		},
		"1782": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/notifications/index.d.ts",
			"qualifiedName": "notifications"
		},
		"1783": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1784": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notifications/mutations.ts",
			"qualifiedName": "useAdminResendNotification"
		},
		"1785": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notifications/mutations.ts",
			"qualifiedName": "useAdminResendNotification"
		},
		"1786": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notifications/mutations.ts",
			"qualifiedName": "id"
		},
		"1787": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/notifications/mutations.ts",
			"qualifiedName": "options"
		},
		"1788": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/queries.ts",
			"qualifiedName": "adminOrderEditsKeys"
		},
		"1789": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/queries.ts",
			"qualifiedName": "useAdminOrderEdit"
		},
		"1790": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/queries.ts",
			"qualifiedName": "useAdminOrderEdit"
		},
		"1791": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/queries.ts",
			"qualifiedName": "id"
		},
		"1792": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/queries.ts",
			"qualifiedName": "query"
		},
		"1793": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/queries.ts",
			"qualifiedName": "options"
		},
		"1794": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/queries.ts",
			"qualifiedName": "__object"
		},
		"1795": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
			"qualifiedName": "order_edit"
		},
		"1796": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1797": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/queries.ts",
			"qualifiedName": "__object"
		},
		"1798": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
			"qualifiedName": "order_edit"
		},
		"1799": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1800": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/queries.ts",
			"qualifiedName": "__object"
		},
		"1801": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
			"qualifiedName": "order_edit"
		},
		"1802": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1803": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/queries.ts",
			"qualifiedName": "__object"
		},
		"1804": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
			"qualifiedName": "order_edit"
		},
		"1805": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1806": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/queries.ts",
			"qualifiedName": "useAdminOrderEdits"
		},
		"1807": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/queries.ts",
			"qualifiedName": "useAdminOrderEdits"
		},
		"1808": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/queries.ts",
			"qualifiedName": "query"
		},
		"1809": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/queries.ts",
			"qualifiedName": "options"
		},
		"1810": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"1811": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"1812": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/queries.ts",
			"qualifiedName": "__object"
		},
		"1813": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"1814": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"1815": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"1816": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
			"qualifiedName": "order_edits"
		},
		"1817": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1818": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/queries.ts",
			"qualifiedName": "__object"
		},
		"1819": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"1820": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"1821": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"1822": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
			"qualifiedName": "order_edits"
		},
		"1823": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1824": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/queries.ts",
			"qualifiedName": "__object"
		},
		"1825": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"1826": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"1827": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"1828": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
			"qualifiedName": "order_edits"
		},
		"1829": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1830": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/queries.ts",
			"qualifiedName": "__object"
		},
		"1831": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"1832": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"1833": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"1834": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/order-edits/index.d.ts",
			"qualifiedName": "order_edits"
		},
		"1835": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1836": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "useAdminCreateOrderEdit"
		},
		"1837": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "useAdminCreateOrderEdit"
		},
		"1838": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "options"
		},
		"1839": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "useAdminDeleteOrderEdit"
		},
		"1840": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "useAdminDeleteOrderEdit"
		},
		"1841": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "id"
		},
		"1842": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "options"
		},
		"1843": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "useAdminDeleteOrderEditItemChange"
		},
		"1844": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "useAdminDeleteOrderEditItemChange"
		},
		"1845": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "orderEditId"
		},
		"1846": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "itemChangeId"
		},
		"1847": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "options"
		},
		"1848": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "useAdminOrderEditUpdateLineItem"
		},
		"1849": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "useAdminOrderEditUpdateLineItem"
		},
		"1850": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "orderEditId"
		},
		"1851": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "itemId"
		},
		"1852": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "options"
		},
		"1853": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "useAdminOrderEditDeleteLineItem"
		},
		"1854": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "useAdminOrderEditDeleteLineItem"
		},
		"1855": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "orderEditId"
		},
		"1856": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "itemId"
		},
		"1857": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "options"
		},
		"1858": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "useAdminUpdateOrderEdit"
		},
		"1859": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "useAdminUpdateOrderEdit"
		},
		"1860": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "id"
		},
		"1861": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "options"
		},
		"1862": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "useAdminOrderEditAddLineItem"
		},
		"1863": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "useAdminOrderEditAddLineItem"
		},
		"1864": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "id"
		},
		"1865": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "options"
		},
		"1866": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "useAdminRequestOrderEditConfirmation"
		},
		"1867": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "useAdminRequestOrderEditConfirmation"
		},
		"1868": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "id"
		},
		"1869": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "options"
		},
		"1870": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "useAdminCancelOrderEdit"
		},
		"1871": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "useAdminCancelOrderEdit"
		},
		"1872": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "id"
		},
		"1873": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "options"
		},
		"1874": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "useAdminConfirmOrderEdit"
		},
		"1875": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "useAdminConfirmOrderEdit"
		},
		"1876": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "id"
		},
		"1877": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/order-edits/mutations.ts",
			"qualifiedName": "options"
		},
		"1878": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "adminOrderKeys"
		},
		"1879": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"1880": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "__object.detailOrder"
		},
		"1881": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "__object.detailOrder"
		},
		"1882": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "id"
		},
		"1883": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "query"
		},
		"1884": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"1885": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "FindParams.expand"
		},
		"1886": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "FindParams.fields"
		},
		"1887": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.all"
		},
		"1888": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.lists"
		},
		"1889": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"1890": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"1891": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.list"
		},
		"1892": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"1893": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"1894": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "query"
		},
		"1895": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"1896": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"1897": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.details"
		},
		"1898": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"1899": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"1900": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.detail"
		},
		"1901": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"1902": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"1903": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "id"
		},
		"1904": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "useAdminOrders"
		},
		"1905": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "useAdminOrders"
		},
		"1906": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "query"
		},
		"1907": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "options"
		},
		"1908": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"1909": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"1910": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"1911": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"1912": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"1913": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"1914": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
			"qualifiedName": "orders"
		},
		"1915": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1916": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"1917": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"1918": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"1919": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"1920": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
			"qualifiedName": "orders"
		},
		"1921": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1922": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"1923": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"1924": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"1925": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"1926": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
			"qualifiedName": "orders"
		},
		"1927": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1928": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"1929": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"1930": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"1931": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"1932": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
			"qualifiedName": "orders"
		},
		"1933": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1934": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "useAdminOrder"
		},
		"1935": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "useAdminOrder"
		},
		"1936": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "id"
		},
		"1937": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "query"
		},
		"1938": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "options"
		},
		"1939": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"1940": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "FindParams.expand"
		},
		"1941": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "FindParams.fields"
		},
		"1942": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"1943": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
			"qualifiedName": "order"
		},
		"1944": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1945": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"1946": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
			"qualifiedName": "order"
		},
		"1947": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1948": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"1949": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
			"qualifiedName": "order"
		},
		"1950": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1951": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/queries.ts",
			"qualifiedName": "__object"
		},
		"1952": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/orders/index.d.ts",
			"qualifiedName": "order"
		},
		"1953": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"1954": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminUpdateOrder"
		},
		"1955": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminUpdateOrder"
		},
		"1956": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "id"
		},
		"1957": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "options"
		},
		"1958": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminCancelOrder"
		},
		"1959": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminCancelOrder"
		},
		"1960": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "id"
		},
		"1961": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "options"
		},
		"1962": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminCompleteOrder"
		},
		"1963": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminCompleteOrder"
		},
		"1964": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "id"
		},
		"1965": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "options"
		},
		"1966": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminCapturePayment"
		},
		"1967": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminCapturePayment"
		},
		"1968": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "id"
		},
		"1969": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "options"
		},
		"1970": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminRefundPayment"
		},
		"1971": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminRefundPayment"
		},
		"1972": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "id"
		},
		"1973": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "options"
		},
		"1974": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminCreateFulfillment"
		},
		"1975": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminCreateFulfillment"
		},
		"1976": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "orderId"
		},
		"1977": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "options"
		},
		"1978": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminCancelFulfillment"
		},
		"1979": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminCancelFulfillment"
		},
		"1980": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "orderId"
		},
		"1981": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "options"
		},
		"1982": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminCreateShipment"
		},
		"1983": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminCreateShipment"
		},
		"1984": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "orderId"
		},
		"1985": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "options"
		},
		"1986": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminRequestReturn"
		},
		"1987": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminRequestReturn"
		},
		"1988": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "orderId"
		},
		"1989": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "options"
		},
		"1990": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminAddShippingMethod"
		},
		"1991": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminAddShippingMethod"
		},
		"1992": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "orderId"
		},
		"1993": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "options"
		},
		"1994": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminArchiveOrder"
		},
		"1995": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "useAdminArchiveOrder"
		},
		"1996": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "id"
		},
		"1997": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/orders/mutations.ts",
			"qualifiedName": "options"
		},
		"1998": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payment-collections/queries.ts",
			"qualifiedName": "adminPaymentCollectionQueryKeys"
		},
		"1999": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payment-collections/queries.ts",
			"qualifiedName": "useAdminPaymentCollection"
		},
		"2000": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payment-collections/queries.ts",
			"qualifiedName": "useAdminPaymentCollection"
		},
		"2001": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payment-collections/queries.ts",
			"qualifiedName": "id"
		},
		"2002": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payment-collections/queries.ts",
			"qualifiedName": "options"
		},
		"2003": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payment-collections/queries.ts",
			"qualifiedName": "__object"
		},
		"2004": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payment-collections/index.d.ts",
			"qualifiedName": "payment_collection"
		},
		"2005": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2006": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payment-collections/queries.ts",
			"qualifiedName": "__object"
		},
		"2007": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payment-collections/index.d.ts",
			"qualifiedName": "payment_collection"
		},
		"2008": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2009": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payment-collections/queries.ts",
			"qualifiedName": "__object"
		},
		"2010": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payment-collections/index.d.ts",
			"qualifiedName": "payment_collection"
		},
		"2011": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2012": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payment-collections/queries.ts",
			"qualifiedName": "__object"
		},
		"2013": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payment-collections/index.d.ts",
			"qualifiedName": "payment_collection"
		},
		"2014": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2015": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payment-collections/mutations.ts",
			"qualifiedName": "useAdminDeletePaymentCollection"
		},
		"2016": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payment-collections/mutations.ts",
			"qualifiedName": "useAdminDeletePaymentCollection"
		},
		"2017": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payment-collections/mutations.ts",
			"qualifiedName": "id"
		},
		"2018": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payment-collections/mutations.ts",
			"qualifiedName": "options"
		},
		"2019": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payment-collections/mutations.ts",
			"qualifiedName": "useAdminUpdatePaymentCollection"
		},
		"2020": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payment-collections/mutations.ts",
			"qualifiedName": "useAdminUpdatePaymentCollection"
		},
		"2021": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payment-collections/mutations.ts",
			"qualifiedName": "id"
		},
		"2022": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payment-collections/mutations.ts",
			"qualifiedName": "options"
		},
		"2023": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payment-collections/mutations.ts",
			"qualifiedName": "useAdminMarkPaymentCollectionAsAuthorized"
		},
		"2024": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payment-collections/mutations.ts",
			"qualifiedName": "useAdminMarkPaymentCollectionAsAuthorized"
		},
		"2025": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payment-collections/mutations.ts",
			"qualifiedName": "id"
		},
		"2026": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payment-collections/mutations.ts",
			"qualifiedName": "options"
		},
		"2027": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payments/queries.ts",
			"qualifiedName": "adminPaymentQueryKeys"
		},
		"2028": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payments/queries.ts",
			"qualifiedName": "useAdminPayment"
		},
		"2029": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payments/queries.ts",
			"qualifiedName": "useAdminPayment"
		},
		"2030": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payments/queries.ts",
			"qualifiedName": "id"
		},
		"2031": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payments/queries.ts",
			"qualifiedName": "options"
		},
		"2032": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payments/queries.ts",
			"qualifiedName": "__object"
		},
		"2033": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payments/index.d.ts",
			"qualifiedName": "payment"
		},
		"2034": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2035": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payments/queries.ts",
			"qualifiedName": "__object"
		},
		"2036": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payments/index.d.ts",
			"qualifiedName": "payment"
		},
		"2037": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2038": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payments/queries.ts",
			"qualifiedName": "__object"
		},
		"2039": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payments/index.d.ts",
			"qualifiedName": "payment"
		},
		"2040": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2041": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payments/queries.ts",
			"qualifiedName": "__object"
		},
		"2042": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/payments/index.d.ts",
			"qualifiedName": "payment"
		},
		"2043": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2044": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payments/mutations.ts",
			"qualifiedName": "useAdminPaymentsCapturePayment"
		},
		"2045": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payments/mutations.ts",
			"qualifiedName": "useAdminPaymentsCapturePayment"
		},
		"2046": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payments/mutations.ts",
			"qualifiedName": "id"
		},
		"2047": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payments/mutations.ts",
			"qualifiedName": "options"
		},
		"2048": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payments/mutations.ts",
			"qualifiedName": "useAdminPaymentsRefundPayment"
		},
		"2049": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payments/mutations.ts",
			"qualifiedName": "useAdminPaymentsRefundPayment"
		},
		"2050": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payments/mutations.ts",
			"qualifiedName": "id"
		},
		"2051": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/payments/mutations.ts",
			"qualifiedName": "options"
		},
		"2052": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "adminPriceListKeys"
		},
		"2053": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "__object"
		},
		"2054": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "__object.detailProducts"
		},
		"2055": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "__object.detailProducts"
		},
		"2056": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "id"
		},
		"2057": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "query"
		},
		"2058": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.all"
		},
		"2059": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.lists"
		},
		"2060": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"2061": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"2062": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.list"
		},
		"2063": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"2064": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"2065": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "query"
		},
		"2066": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"2067": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"2068": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.details"
		},
		"2069": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"2070": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"2071": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.detail"
		},
		"2072": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"2073": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"2074": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "id"
		},
		"2075": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "useAdminPriceLists"
		},
		"2076": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "useAdminPriceLists"
		},
		"2077": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "query"
		},
		"2078": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "options"
		},
		"2079": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"2080": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"2081": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "__object"
		},
		"2082": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"2083": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"2084": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"2085": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
			"qualifiedName": "price_lists"
		},
		"2086": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2087": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "__object"
		},
		"2088": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"2089": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"2090": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"2091": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
			"qualifiedName": "price_lists"
		},
		"2092": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2093": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "__object"
		},
		"2094": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"2095": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"2096": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"2097": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
			"qualifiedName": "price_lists"
		},
		"2098": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2099": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "__object"
		},
		"2100": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"2101": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"2102": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"2103": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
			"qualifiedName": "price_lists"
		},
		"2104": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2105": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "useAdminPriceListProducts"
		},
		"2106": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "useAdminPriceListProducts"
		},
		"2107": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "id"
		},
		"2108": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "query"
		},
		"2109": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "options"
		},
		"2110": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "__object"
		},
		"2111": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"2112": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"2113": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"2114": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "products"
		},
		"2115": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2116": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "__object"
		},
		"2117": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"2118": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"2119": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"2120": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "products"
		},
		"2121": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2122": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "__object"
		},
		"2123": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"2124": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"2125": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"2126": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "products"
		},
		"2127": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2128": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "__object"
		},
		"2129": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"2130": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"2131": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"2132": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "products"
		},
		"2133": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2134": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "useAdminPriceList"
		},
		"2135": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "useAdminPriceList"
		},
		"2136": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "id"
		},
		"2137": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "options"
		},
		"2138": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "__object"
		},
		"2139": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
			"qualifiedName": "price_list"
		},
		"2140": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2141": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "__object"
		},
		"2142": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
			"qualifiedName": "price_list"
		},
		"2143": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2144": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "__object"
		},
		"2145": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
			"qualifiedName": "price_list"
		},
		"2146": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2147": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/queries.ts",
			"qualifiedName": "__object"
		},
		"2148": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/price-lists/index.d.ts",
			"qualifiedName": "price_list"
		},
		"2149": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2150": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "useAdminCreatePriceList"
		},
		"2151": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "useAdminCreatePriceList"
		},
		"2152": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "options"
		},
		"2153": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "useAdminUpdatePriceList"
		},
		"2154": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "useAdminUpdatePriceList"
		},
		"2155": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "id"
		},
		"2156": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "options"
		},
		"2157": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "useAdminDeletePriceList"
		},
		"2158": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "useAdminDeletePriceList"
		},
		"2159": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "id"
		},
		"2160": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "options"
		},
		"2161": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "useAdminCreatePriceListPrices"
		},
		"2162": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "useAdminCreatePriceListPrices"
		},
		"2163": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "id"
		},
		"2164": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "options"
		},
		"2165": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "useAdminDeletePriceListPrices"
		},
		"2166": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "useAdminDeletePriceListPrices"
		},
		"2167": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "id"
		},
		"2168": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "options"
		},
		"2169": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "useAdminDeletePriceListProductsPrices"
		},
		"2170": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "useAdminDeletePriceListProductsPrices"
		},
		"2171": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "id"
		},
		"2172": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "options"
		},
		"2173": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "useAdminDeletePriceListProductPrices"
		},
		"2174": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "useAdminDeletePriceListProductPrices"
		},
		"2175": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "id"
		},
		"2176": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "productId"
		},
		"2177": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "options"
		},
		"2178": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "useAdminDeletePriceListVariantPrices"
		},
		"2179": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "useAdminDeletePriceListVariantPrices"
		},
		"2180": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "id"
		},
		"2181": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "variantId"
		},
		"2182": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/price-lists/mutations.ts",
			"qualifiedName": "options"
		},
		"2183": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/queries.ts",
			"qualifiedName": "adminProductCategoryKeys"
		},
		"2184": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/queries.ts",
			"qualifiedName": "useAdminProductCategories"
		},
		"2185": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/queries.ts",
			"qualifiedName": "useAdminProductCategories"
		},
		"2186": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/queries.ts",
			"qualifiedName": "query"
		},
		"2187": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/queries.ts",
			"qualifiedName": "options"
		},
		"2188": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"2189": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"2190": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/queries.ts",
			"qualifiedName": "__object"
		},
		"2191": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"2192": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"2193": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"2194": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/index.d.ts",
			"qualifiedName": "product_categories"
		},
		"2195": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2196": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/queries.ts",
			"qualifiedName": "__object"
		},
		"2197": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"2198": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"2199": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"2200": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/index.d.ts",
			"qualifiedName": "product_categories"
		},
		"2201": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2202": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/queries.ts",
			"qualifiedName": "__object"
		},
		"2203": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"2204": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"2205": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"2206": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/index.d.ts",
			"qualifiedName": "product_categories"
		},
		"2207": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2208": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/queries.ts",
			"qualifiedName": "__object"
		},
		"2209": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"2210": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"2211": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"2212": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/index.d.ts",
			"qualifiedName": "product_categories"
		},
		"2213": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2214": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/queries.ts",
			"qualifiedName": "useAdminProductCategory"
		},
		"2215": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/queries.ts",
			"qualifiedName": "useAdminProductCategory"
		},
		"2216": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/queries.ts",
			"qualifiedName": "id"
		},
		"2217": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/queries.ts",
			"qualifiedName": "query"
		},
		"2218": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/queries.ts",
			"qualifiedName": "options"
		},
		"2219": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/queries.ts",
			"qualifiedName": "__object"
		},
		"2220": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/index.d.ts",
			"qualifiedName": "product_category"
		},
		"2221": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2222": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/queries.ts",
			"qualifiedName": "__object"
		},
		"2223": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/index.d.ts",
			"qualifiedName": "product_category"
		},
		"2224": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2225": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/queries.ts",
			"qualifiedName": "__object"
		},
		"2226": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/index.d.ts",
			"qualifiedName": "product_category"
		},
		"2227": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2228": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/queries.ts",
			"qualifiedName": "__object"
		},
		"2229": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-categories/index.d.ts",
			"qualifiedName": "product_category"
		},
		"2230": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2231": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/mutations.ts",
			"qualifiedName": "useAdminCreateProductCategory"
		},
		"2232": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/mutations.ts",
			"qualifiedName": "useAdminCreateProductCategory"
		},
		"2233": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/mutations.ts",
			"qualifiedName": "options"
		},
		"2234": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/mutations.ts",
			"qualifiedName": "useAdminUpdateProductCategory"
		},
		"2235": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/mutations.ts",
			"qualifiedName": "useAdminUpdateProductCategory"
		},
		"2236": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/mutations.ts",
			"qualifiedName": "id"
		},
		"2237": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/mutations.ts",
			"qualifiedName": "options"
		},
		"2238": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/mutations.ts",
			"qualifiedName": "useAdminDeleteProductCategory"
		},
		"2239": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/mutations.ts",
			"qualifiedName": "useAdminDeleteProductCategory"
		},
		"2240": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/mutations.ts",
			"qualifiedName": "id"
		},
		"2241": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/mutations.ts",
			"qualifiedName": "options"
		},
		"2242": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/mutations.ts",
			"qualifiedName": "useAdminAddProductsToCategory"
		},
		"2243": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/mutations.ts",
			"qualifiedName": "useAdminAddProductsToCategory"
		},
		"2244": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/mutations.ts",
			"qualifiedName": "id"
		},
		"2245": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/mutations.ts",
			"qualifiedName": "options"
		},
		"2246": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/mutations.ts",
			"qualifiedName": "useAdminDeleteProductsFromCategory"
		},
		"2247": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/mutations.ts",
			"qualifiedName": "useAdminDeleteProductsFromCategory"
		},
		"2248": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/mutations.ts",
			"qualifiedName": "id"
		},
		"2249": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-categories/mutations.ts",
			"qualifiedName": "options"
		},
		"2250": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-tags/queries.ts",
			"qualifiedName": "adminProductTagKeys"
		},
		"2251": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-tags/queries.ts",
			"qualifiedName": "useAdminProductTags"
		},
		"2252": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-tags/queries.ts",
			"qualifiedName": "useAdminProductTags"
		},
		"2253": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-tags/queries.ts",
			"qualifiedName": "query"
		},
		"2254": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-tags/queries.ts",
			"qualifiedName": "options"
		},
		"2255": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"2256": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"2257": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-tags/queries.ts",
			"qualifiedName": "__object"
		},
		"2258": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"2259": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"2260": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"2261": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-tags/index.d.ts",
			"qualifiedName": "product_tags"
		},
		"2262": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2263": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-tags/queries.ts",
			"qualifiedName": "__object"
		},
		"2264": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"2265": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"2266": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"2267": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-tags/index.d.ts",
			"qualifiedName": "product_tags"
		},
		"2268": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2269": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-tags/queries.ts",
			"qualifiedName": "__object"
		},
		"2270": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"2271": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"2272": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"2273": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-tags/index.d.ts",
			"qualifiedName": "product_tags"
		},
		"2274": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2275": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-tags/queries.ts",
			"qualifiedName": "__object"
		},
		"2276": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"2277": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"2278": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"2279": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-tags/index.d.ts",
			"qualifiedName": "product_tags"
		},
		"2280": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2281": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-types/queries.ts",
			"qualifiedName": "adminProductTypeKeys"
		},
		"2282": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-types/queries.ts",
			"qualifiedName": "useAdminProductTypes"
		},
		"2283": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-types/queries.ts",
			"qualifiedName": "useAdminProductTypes"
		},
		"2284": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-types/queries.ts",
			"qualifiedName": "query"
		},
		"2285": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-types/queries.ts",
			"qualifiedName": "options"
		},
		"2286": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"2287": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"2288": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-types/queries.ts",
			"qualifiedName": "__object"
		},
		"2289": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"2290": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"2291": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"2292": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-types/index.d.ts",
			"qualifiedName": "product_types"
		},
		"2293": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2294": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-types/queries.ts",
			"qualifiedName": "__object"
		},
		"2295": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"2296": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"2297": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"2298": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-types/index.d.ts",
			"qualifiedName": "product_types"
		},
		"2299": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2300": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-types/queries.ts",
			"qualifiedName": "__object"
		},
		"2301": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"2302": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"2303": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"2304": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-types/index.d.ts",
			"qualifiedName": "product_types"
		},
		"2305": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2306": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/product-types/queries.ts",
			"qualifiedName": "__object"
		},
		"2307": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"2308": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"2309": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"2310": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/product-types/index.d.ts",
			"qualifiedName": "product_types"
		},
		"2311": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2312": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "adminProductKeys"
		},
		"2313": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "useAdminProducts"
		},
		"2314": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "useAdminProducts"
		},
		"2315": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "query"
		},
		"2316": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "options"
		},
		"2317": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"2318": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"2319": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "__object"
		},
		"2320": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"2321": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"2322": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"2323": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "products"
		},
		"2324": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2325": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "__object"
		},
		"2326": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"2327": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"2328": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"2329": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "products"
		},
		"2330": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2331": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "__object"
		},
		"2332": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"2333": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"2334": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"2335": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "products"
		},
		"2336": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2337": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "__object"
		},
		"2338": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"2339": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"2340": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"2341": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "products"
		},
		"2342": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2343": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "useAdminProduct"
		},
		"2344": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "useAdminProduct"
		},
		"2345": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "id"
		},
		"2346": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "query"
		},
		"2347": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "options"
		},
		"2348": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "__object"
		},
		"2349": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "product"
		},
		"2350": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2351": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "__object"
		},
		"2352": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "product"
		},
		"2353": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2354": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "__object"
		},
		"2355": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "product"
		},
		"2356": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2357": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "__object"
		},
		"2358": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "product"
		},
		"2359": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2360": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "useAdminProductTagUsage"
		},
		"2361": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "useAdminProductTagUsage"
		},
		"2362": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "options"
		},
		"2363": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "__object"
		},
		"2364": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "tags"
		},
		"2365": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "__type"
		},
		"2366": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "__type.usage_count"
		},
		"2367": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2368": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "__object"
		},
		"2369": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "tags"
		},
		"2370": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "__type"
		},
		"2371": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "__type.usage_count"
		},
		"2372": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2373": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "__object"
		},
		"2374": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "tags"
		},
		"2375": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "__type"
		},
		"2376": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "__type.usage_count"
		},
		"2377": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2378": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/queries.ts",
			"qualifiedName": "__object"
		},
		"2379": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "tags"
		},
		"2380": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "__type"
		},
		"2381": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/products/index.d.ts",
			"qualifiedName": "__type.usage_count"
		},
		"2382": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2383": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "useAdminCreateProduct"
		},
		"2384": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "useAdminCreateProduct"
		},
		"2385": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "options"
		},
		"2386": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "useAdminUpdateProduct"
		},
		"2387": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "useAdminUpdateProduct"
		},
		"2388": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "id"
		},
		"2389": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "options"
		},
		"2390": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "useAdminDeleteProduct"
		},
		"2391": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "useAdminDeleteProduct"
		},
		"2392": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "id"
		},
		"2393": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "options"
		},
		"2394": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "useAdminCreateVariant"
		},
		"2395": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "useAdminCreateVariant"
		},
		"2396": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "productId"
		},
		"2397": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "options"
		},
		"2398": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "AdminUpdateVariantReq"
		},
		"2399": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "__type"
		},
		"2400": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "__type.variant_id"
		},
		"2401": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "useAdminUpdateVariant"
		},
		"2402": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "useAdminUpdateVariant"
		},
		"2403": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "productId"
		},
		"2404": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "options"
		},
		"2405": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "useAdminDeleteVariant"
		},
		"2406": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "useAdminDeleteVariant"
		},
		"2407": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "productId"
		},
		"2408": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "options"
		},
		"2409": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "useAdminCreateProductOption"
		},
		"2410": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "useAdminCreateProductOption"
		},
		"2411": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "productId"
		},
		"2412": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "options"
		},
		"2413": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "AdminUpdateProductOptionReq"
		},
		"2414": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "__type"
		},
		"2415": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "__type.option_id"
		},
		"2416": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "useAdminUpdateProductOption"
		},
		"2417": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "useAdminUpdateProductOption"
		},
		"2418": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "productId"
		},
		"2419": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "options"
		},
		"2420": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "useAdminDeleteProductOption"
		},
		"2421": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "useAdminDeleteProductOption"
		},
		"2422": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "productId"
		},
		"2423": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/products/mutations.ts",
			"qualifiedName": "options"
		},
		"2424": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "adminPublishableApiKeysKeys"
		},
		"2425": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "__object"
		},
		"2426": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "__object.detailSalesChannels"
		},
		"2427": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "__object.detailSalesChannels"
		},
		"2428": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "id"
		},
		"2429": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "query"
		},
		"2430": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.all"
		},
		"2431": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.lists"
		},
		"2432": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"2433": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"2434": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.list"
		},
		"2435": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"2436": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"2437": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "query"
		},
		"2438": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"2439": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"2440": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.details"
		},
		"2441": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"2442": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"2443": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.detail"
		},
		"2444": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"2445": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"2446": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "id"
		},
		"2447": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "useAdminPublishableApiKey"
		},
		"2448": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "useAdminPublishableApiKey"
		},
		"2449": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "id"
		},
		"2450": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "options"
		},
		"2451": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "__object"
		},
		"2452": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
			"qualifiedName": "publishable_api_key"
		},
		"2453": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2454": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "__object"
		},
		"2455": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
			"qualifiedName": "publishable_api_key"
		},
		"2456": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2457": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "__object"
		},
		"2458": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
			"qualifiedName": "publishable_api_key"
		},
		"2459": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2460": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "__object"
		},
		"2461": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
			"qualifiedName": "publishable_api_key"
		},
		"2462": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2463": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "useAdminPublishableApiKeys"
		},
		"2464": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "useAdminPublishableApiKeys"
		},
		"2465": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "query"
		},
		"2466": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "options"
		},
		"2467": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"2468": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"2469": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "__object"
		},
		"2470": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"2471": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"2472": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"2473": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
			"qualifiedName": "publishable_api_keys"
		},
		"2474": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2475": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "__object"
		},
		"2476": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"2477": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"2478": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"2479": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
			"qualifiedName": "publishable_api_keys"
		},
		"2480": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2481": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "__object"
		},
		"2482": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"2483": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"2484": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"2485": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
			"qualifiedName": "publishable_api_keys"
		},
		"2486": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2487": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "__object"
		},
		"2488": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"2489": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"2490": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"2491": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
			"qualifiedName": "publishable_api_keys"
		},
		"2492": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2493": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "useAdminPublishableApiKeySalesChannels"
		},
		"2494": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "useAdminPublishableApiKeySalesChannels"
		},
		"2495": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "id"
		},
		"2496": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "query"
		},
		"2497": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "options"
		},
		"2498": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "__object"
		},
		"2499": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
			"qualifiedName": "sales_channels"
		},
		"2500": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2501": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "__object"
		},
		"2502": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
			"qualifiedName": "sales_channels"
		},
		"2503": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2504": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "__object"
		},
		"2505": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
			"qualifiedName": "sales_channels"
		},
		"2506": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2507": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/queries.ts",
			"qualifiedName": "__object"
		},
		"2508": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/publishable-api-keys/index.d.ts",
			"qualifiedName": "sales_channels"
		},
		"2509": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2510": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "useAdminCreatePublishableApiKey"
		},
		"2511": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "useAdminCreatePublishableApiKey"
		},
		"2512": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "options"
		},
		"2513": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "useAdminUpdatePublishableApiKey"
		},
		"2514": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "useAdminUpdatePublishableApiKey"
		},
		"2515": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "id"
		},
		"2516": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "options"
		},
		"2517": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "useAdminDeletePublishableApiKey"
		},
		"2518": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "useAdminDeletePublishableApiKey"
		},
		"2519": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "id"
		},
		"2520": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "options"
		},
		"2521": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "useAdminRevokePublishableApiKey"
		},
		"2522": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "useAdminRevokePublishableApiKey"
		},
		"2523": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "id"
		},
		"2524": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "options"
		},
		"2525": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "useAdminAddPublishableKeySalesChannelsBatch"
		},
		"2526": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "useAdminAddPublishableKeySalesChannelsBatch"
		},
		"2527": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "id"
		},
		"2528": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "options"
		},
		"2529": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "useAdminRemovePublishableKeySalesChannelsBatch"
		},
		"2530": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "useAdminRemovePublishableKeySalesChannelsBatch"
		},
		"2531": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "id"
		},
		"2532": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/publishable-api-keys/mutations.ts",
			"qualifiedName": "options"
		},
		"2533": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "adminRegionKeys"
		},
		"2534": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "useAdminRegions"
		},
		"2535": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "useAdminRegions"
		},
		"2536": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "query"
		},
		"2537": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "options"
		},
		"2538": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"2539": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"2540": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "__object"
		},
		"2541": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"2542": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"2543": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"2544": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
			"qualifiedName": "regions"
		},
		"2545": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2546": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "__object"
		},
		"2547": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"2548": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"2549": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"2550": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
			"qualifiedName": "regions"
		},
		"2551": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2552": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "__object"
		},
		"2553": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"2554": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"2555": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"2556": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
			"qualifiedName": "regions"
		},
		"2557": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2558": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "__object"
		},
		"2559": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"2560": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"2561": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"2562": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
			"qualifiedName": "regions"
		},
		"2563": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2564": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "useAdminRegion"
		},
		"2565": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "useAdminRegion"
		},
		"2566": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "id"
		},
		"2567": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "options"
		},
		"2568": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "__object"
		},
		"2569": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
			"qualifiedName": "region"
		},
		"2570": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2571": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "__object"
		},
		"2572": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
			"qualifiedName": "region"
		},
		"2573": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2574": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "__object"
		},
		"2575": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
			"qualifiedName": "region"
		},
		"2576": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2577": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "__object"
		},
		"2578": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
			"qualifiedName": "region"
		},
		"2579": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2580": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "useAdminRegionFulfillmentOptions"
		},
		"2581": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "useAdminRegionFulfillmentOptions"
		},
		"2582": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "regionId"
		},
		"2583": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "options"
		},
		"2584": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "__object"
		},
		"2585": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
			"qualifiedName": "fulfillment_options"
		},
		"2586": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2587": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "__object"
		},
		"2588": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
			"qualifiedName": "fulfillment_options"
		},
		"2589": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2590": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "__object"
		},
		"2591": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
			"qualifiedName": "fulfillment_options"
		},
		"2592": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2593": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/queries.ts",
			"qualifiedName": "__object"
		},
		"2594": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/regions/index.d.ts",
			"qualifiedName": "fulfillment_options"
		},
		"2595": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2596": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "useAdminCreateRegion"
		},
		"2597": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "useAdminCreateRegion"
		},
		"2598": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "options"
		},
		"2599": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "useAdminUpdateRegion"
		},
		"2600": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "useAdminUpdateRegion"
		},
		"2601": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "id"
		},
		"2602": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "options"
		},
		"2603": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "useAdminDeleteRegion"
		},
		"2604": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "useAdminDeleteRegion"
		},
		"2605": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "id"
		},
		"2606": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "options"
		},
		"2607": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "useAdminRegionAddCountry"
		},
		"2608": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "useAdminRegionAddCountry"
		},
		"2609": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "id"
		},
		"2610": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "options"
		},
		"2611": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "useAdminRegionRemoveCountry"
		},
		"2612": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "useAdminRegionRemoveCountry"
		},
		"2613": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "id"
		},
		"2614": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "options"
		},
		"2615": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "useAdminRegionAddFulfillmentProvider"
		},
		"2616": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "useAdminRegionAddFulfillmentProvider"
		},
		"2617": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "id"
		},
		"2618": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "options"
		},
		"2619": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "useAdminRegionDeleteFulfillmentProvider"
		},
		"2620": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "useAdminRegionDeleteFulfillmentProvider"
		},
		"2621": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "id"
		},
		"2622": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "options"
		},
		"2623": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "useAdminRegionAddPaymentProvider"
		},
		"2624": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "useAdminRegionAddPaymentProvider"
		},
		"2625": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "id"
		},
		"2626": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "options"
		},
		"2627": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "useAdminRegionDeletePaymentProvider"
		},
		"2628": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "useAdminRegionDeletePaymentProvider"
		},
		"2629": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "id"
		},
		"2630": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/regions/mutations.ts",
			"qualifiedName": "options"
		},
		"2631": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/mutations.ts",
			"qualifiedName": "useAdminCreateReservation"
		},
		"2632": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/mutations.ts",
			"qualifiedName": "useAdminCreateReservation"
		},
		"2633": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/mutations.ts",
			"qualifiedName": "options"
		},
		"2634": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/mutations.ts",
			"qualifiedName": "useAdminUpdateReservation"
		},
		"2635": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/mutations.ts",
			"qualifiedName": "useAdminUpdateReservation"
		},
		"2636": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/mutations.ts",
			"qualifiedName": "id"
		},
		"2637": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/mutations.ts",
			"qualifiedName": "options"
		},
		"2638": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/mutations.ts",
			"qualifiedName": "useAdminDeleteReservation"
		},
		"2639": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/mutations.ts",
			"qualifiedName": "useAdminDeleteReservation"
		},
		"2640": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/mutations.ts",
			"qualifiedName": "id"
		},
		"2641": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/mutations.ts",
			"qualifiedName": "options"
		},
		"2642": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/queries.ts",
			"qualifiedName": "adminReservationsKeys"
		},
		"2643": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/queries.ts",
			"qualifiedName": "useAdminReservations"
		},
		"2644": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/queries.ts",
			"qualifiedName": "useAdminReservations"
		},
		"2645": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/queries.ts",
			"qualifiedName": "query"
		},
		"2646": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/queries.ts",
			"qualifiedName": "options"
		},
		"2647": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"2648": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"2649": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/queries.ts",
			"qualifiedName": "__object"
		},
		"2650": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"2651": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"2652": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"2653": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/reservations/index.d.ts",
			"qualifiedName": "reservations"
		},
		"2654": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2655": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/queries.ts",
			"qualifiedName": "__object"
		},
		"2656": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"2657": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"2658": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"2659": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/reservations/index.d.ts",
			"qualifiedName": "reservations"
		},
		"2660": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2661": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/queries.ts",
			"qualifiedName": "__object"
		},
		"2662": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"2663": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"2664": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"2665": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/reservations/index.d.ts",
			"qualifiedName": "reservations"
		},
		"2666": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2667": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/queries.ts",
			"qualifiedName": "__object"
		},
		"2668": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"2669": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"2670": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"2671": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/reservations/index.d.ts",
			"qualifiedName": "reservations"
		},
		"2672": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2673": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/queries.ts",
			"qualifiedName": "useAdminReservation"
		},
		"2674": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/queries.ts",
			"qualifiedName": "useAdminReservation"
		},
		"2675": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/queries.ts",
			"qualifiedName": "id"
		},
		"2676": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/queries.ts",
			"qualifiedName": "options"
		},
		"2677": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/queries.ts",
			"qualifiedName": "__object"
		},
		"2678": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/reservations/index.d.ts",
			"qualifiedName": "reservation"
		},
		"2679": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2680": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/queries.ts",
			"qualifiedName": "__object"
		},
		"2681": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/reservations/index.d.ts",
			"qualifiedName": "reservation"
		},
		"2682": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2683": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/queries.ts",
			"qualifiedName": "__object"
		},
		"2684": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/reservations/index.d.ts",
			"qualifiedName": "reservation"
		},
		"2685": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2686": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/reservations/queries.ts",
			"qualifiedName": "__object"
		},
		"2687": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/reservations/index.d.ts",
			"qualifiedName": "reservation"
		},
		"2688": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2689": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/queries.ts",
			"qualifiedName": "adminReturnReasonKeys"
		},
		"2690": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/queries.ts",
			"qualifiedName": "useAdminReturnReasons"
		},
		"2691": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/queries.ts",
			"qualifiedName": "useAdminReturnReasons"
		},
		"2692": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/queries.ts",
			"qualifiedName": "options"
		},
		"2693": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/queries.ts",
			"qualifiedName": "__object"
		},
		"2694": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/return-reasons/index.d.ts",
			"qualifiedName": "return_reasons"
		},
		"2695": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2696": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/queries.ts",
			"qualifiedName": "__object"
		},
		"2697": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/return-reasons/index.d.ts",
			"qualifiedName": "return_reasons"
		},
		"2698": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2699": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/queries.ts",
			"qualifiedName": "__object"
		},
		"2700": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/return-reasons/index.d.ts",
			"qualifiedName": "return_reasons"
		},
		"2701": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2702": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/queries.ts",
			"qualifiedName": "__object"
		},
		"2703": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/return-reasons/index.d.ts",
			"qualifiedName": "return_reasons"
		},
		"2704": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2705": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/queries.ts",
			"qualifiedName": "useAdminReturnReason"
		},
		"2706": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/queries.ts",
			"qualifiedName": "useAdminReturnReason"
		},
		"2707": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/queries.ts",
			"qualifiedName": "id"
		},
		"2708": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/queries.ts",
			"qualifiedName": "options"
		},
		"2709": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/queries.ts",
			"qualifiedName": "__object"
		},
		"2710": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/return-reasons/index.d.ts",
			"qualifiedName": "return_reason"
		},
		"2711": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2712": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/queries.ts",
			"qualifiedName": "__object"
		},
		"2713": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/return-reasons/index.d.ts",
			"qualifiedName": "return_reason"
		},
		"2714": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2715": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/queries.ts",
			"qualifiedName": "__object"
		},
		"2716": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/return-reasons/index.d.ts",
			"qualifiedName": "return_reason"
		},
		"2717": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2718": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/queries.ts",
			"qualifiedName": "__object"
		},
		"2719": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/return-reasons/index.d.ts",
			"qualifiedName": "return_reason"
		},
		"2720": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2721": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/mutations.ts",
			"qualifiedName": "useAdminCreateReturnReason"
		},
		"2722": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/mutations.ts",
			"qualifiedName": "useAdminCreateReturnReason"
		},
		"2723": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/mutations.ts",
			"qualifiedName": "options"
		},
		"2724": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/mutations.ts",
			"qualifiedName": "useAdminUpdateReturnReason"
		},
		"2725": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/mutations.ts",
			"qualifiedName": "useAdminUpdateReturnReason"
		},
		"2726": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/mutations.ts",
			"qualifiedName": "id"
		},
		"2727": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/mutations.ts",
			"qualifiedName": "options"
		},
		"2728": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/mutations.ts",
			"qualifiedName": "useAdminDeleteReturnReason"
		},
		"2729": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/mutations.ts",
			"qualifiedName": "useAdminDeleteReturnReason"
		},
		"2730": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/mutations.ts",
			"qualifiedName": "id"
		},
		"2731": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/return-reasons/mutations.ts",
			"qualifiedName": "options"
		},
		"2732": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/returns/queries.ts",
			"qualifiedName": "adminReturnKeys"
		},
		"2733": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/returns/queries.ts",
			"qualifiedName": "useAdminReturns"
		},
		"2734": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/returns/queries.ts",
			"qualifiedName": "useAdminReturns"
		},
		"2735": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/returns/queries.ts",
			"qualifiedName": "options"
		},
		"2736": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/returns/queries.ts",
			"qualifiedName": "__object"
		},
		"2737": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"2738": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"2739": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"2740": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/returns/index.d.ts",
			"qualifiedName": "returns"
		},
		"2741": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2742": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/returns/queries.ts",
			"qualifiedName": "__object"
		},
		"2743": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"2744": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"2745": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"2746": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/returns/index.d.ts",
			"qualifiedName": "returns"
		},
		"2747": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2748": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/returns/queries.ts",
			"qualifiedName": "__object"
		},
		"2749": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"2750": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"2751": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"2752": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/returns/index.d.ts",
			"qualifiedName": "returns"
		},
		"2753": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2754": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/returns/queries.ts",
			"qualifiedName": "__object"
		},
		"2755": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"2756": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"2757": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"2758": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/returns/index.d.ts",
			"qualifiedName": "returns"
		},
		"2759": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2760": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/returns/mutations.ts",
			"qualifiedName": "useAdminReceiveReturn"
		},
		"2761": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/returns/mutations.ts",
			"qualifiedName": "useAdminReceiveReturn"
		},
		"2762": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/returns/mutations.ts",
			"qualifiedName": "id"
		},
		"2763": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/returns/mutations.ts",
			"qualifiedName": "options"
		},
		"2764": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/returns/mutations.ts",
			"qualifiedName": "useAdminCancelReturn"
		},
		"2765": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/returns/mutations.ts",
			"qualifiedName": "useAdminCancelReturn"
		},
		"2766": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/returns/mutations.ts",
			"qualifiedName": "id"
		},
		"2767": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/returns/mutations.ts",
			"qualifiedName": "options"
		},
		"2768": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/queries.ts",
			"qualifiedName": "adminSalesChannelsKeys"
		},
		"2769": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/queries.ts",
			"qualifiedName": "useAdminSalesChannel"
		},
		"2770": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/queries.ts",
			"qualifiedName": "useAdminSalesChannel"
		},
		"2771": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/queries.ts",
			"qualifiedName": "id"
		},
		"2772": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/queries.ts",
			"qualifiedName": "options"
		},
		"2773": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/queries.ts",
			"qualifiedName": "__object"
		},
		"2774": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
			"qualifiedName": "sales_channel"
		},
		"2775": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2776": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/queries.ts",
			"qualifiedName": "__object"
		},
		"2777": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
			"qualifiedName": "sales_channel"
		},
		"2778": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2779": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/queries.ts",
			"qualifiedName": "__object"
		},
		"2780": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
			"qualifiedName": "sales_channel"
		},
		"2781": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2782": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/queries.ts",
			"qualifiedName": "__object"
		},
		"2783": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
			"qualifiedName": "sales_channel"
		},
		"2784": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2785": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/queries.ts",
			"qualifiedName": "useAdminSalesChannels"
		},
		"2786": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/queries.ts",
			"qualifiedName": "useAdminSalesChannels"
		},
		"2787": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/queries.ts",
			"qualifiedName": "query"
		},
		"2788": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/queries.ts",
			"qualifiedName": "options"
		},
		"2789": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"2790": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"2791": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/queries.ts",
			"qualifiedName": "__object"
		},
		"2792": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"2793": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"2794": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"2795": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
			"qualifiedName": "sales_channels"
		},
		"2796": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2797": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/queries.ts",
			"qualifiedName": "__object"
		},
		"2798": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"2799": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"2800": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"2801": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
			"qualifiedName": "sales_channels"
		},
		"2802": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2803": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/queries.ts",
			"qualifiedName": "__object"
		},
		"2804": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"2805": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"2806": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"2807": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
			"qualifiedName": "sales_channels"
		},
		"2808": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2809": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/queries.ts",
			"qualifiedName": "__object"
		},
		"2810": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"2811": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"2812": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"2813": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/sales-channels/index.d.ts",
			"qualifiedName": "sales_channels"
		},
		"2814": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2815": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "useAdminCreateSalesChannel"
		},
		"2816": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "useAdminCreateSalesChannel"
		},
		"2817": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "options"
		},
		"2818": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "useAdminUpdateSalesChannel"
		},
		"2819": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "useAdminUpdateSalesChannel"
		},
		"2820": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "id"
		},
		"2821": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "options"
		},
		"2822": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "useAdminDeleteSalesChannel"
		},
		"2823": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "useAdminDeleteSalesChannel"
		},
		"2824": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "id"
		},
		"2825": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "options"
		},
		"2826": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "useAdminDeleteProductsFromSalesChannel"
		},
		"2827": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "useAdminDeleteProductsFromSalesChannel"
		},
		"2828": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "id"
		},
		"2829": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "options"
		},
		"2830": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "useAdminAddProductsToSalesChannel"
		},
		"2831": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "useAdminAddProductsToSalesChannel"
		},
		"2832": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "id"
		},
		"2833": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "options"
		},
		"2834": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "useAdminAddLocationToSalesChannel"
		},
		"2835": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "useAdminAddLocationToSalesChannel"
		},
		"2836": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "options"
		},
		"2837": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "__type"
		},
		"2838": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "__type.sales_channel_id"
		},
		"2839": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "__type.location_id"
		},
		"2840": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "__type"
		},
		"2841": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "__type.sales_channel_id"
		},
		"2842": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "__type.location_id"
		},
		"2843": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "useAdminRemoveLocationFromSalesChannel"
		},
		"2844": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "useAdminRemoveLocationFromSalesChannel"
		},
		"2845": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "options"
		},
		"2846": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "__type"
		},
		"2847": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "__type.sales_channel_id"
		},
		"2848": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "__type.location_id"
		},
		"2849": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "__type"
		},
		"2850": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "__type.sales_channel_id"
		},
		"2851": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/sales-channels/mutations.ts",
			"qualifiedName": "__type.location_id"
		},
		"2852": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/queries.ts",
			"qualifiedName": "adminShippingOptionKeys"
		},
		"2853": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/queries.ts",
			"qualifiedName": "useAdminShippingOptions"
		},
		"2854": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/queries.ts",
			"qualifiedName": "useAdminShippingOptions"
		},
		"2855": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/queries.ts",
			"qualifiedName": "query"
		},
		"2856": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/queries.ts",
			"qualifiedName": "options"
		},
		"2857": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"2858": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"2859": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/queries.ts",
			"qualifiedName": "__object"
		},
		"2860": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"2861": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"2862": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"2863": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-options/index.d.ts",
			"qualifiedName": "shipping_options"
		},
		"2864": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2865": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/queries.ts",
			"qualifiedName": "__object"
		},
		"2866": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"2867": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"2868": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"2869": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-options/index.d.ts",
			"qualifiedName": "shipping_options"
		},
		"2870": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2871": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/queries.ts",
			"qualifiedName": "__object"
		},
		"2872": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"2873": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"2874": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"2875": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-options/index.d.ts",
			"qualifiedName": "shipping_options"
		},
		"2876": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2877": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/queries.ts",
			"qualifiedName": "__object"
		},
		"2878": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"2879": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"2880": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"2881": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-options/index.d.ts",
			"qualifiedName": "shipping_options"
		},
		"2882": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2883": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/queries.ts",
			"qualifiedName": "useAdminShippingOption"
		},
		"2884": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/queries.ts",
			"qualifiedName": "useAdminShippingOption"
		},
		"2885": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/queries.ts",
			"qualifiedName": "id"
		},
		"2886": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/queries.ts",
			"qualifiedName": "options"
		},
		"2887": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/queries.ts",
			"qualifiedName": "__object"
		},
		"2888": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-options/index.d.ts",
			"qualifiedName": "shipping_option"
		},
		"2889": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2890": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/queries.ts",
			"qualifiedName": "__object"
		},
		"2891": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-options/index.d.ts",
			"qualifiedName": "shipping_option"
		},
		"2892": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2893": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/queries.ts",
			"qualifiedName": "__object"
		},
		"2894": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-options/index.d.ts",
			"qualifiedName": "shipping_option"
		},
		"2895": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2896": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/queries.ts",
			"qualifiedName": "__object"
		},
		"2897": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-options/index.d.ts",
			"qualifiedName": "shipping_option"
		},
		"2898": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2899": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/mutations.ts",
			"qualifiedName": "useAdminCreateShippingOption"
		},
		"2900": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/mutations.ts",
			"qualifiedName": "useAdminCreateShippingOption"
		},
		"2901": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/mutations.ts",
			"qualifiedName": "options"
		},
		"2902": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/mutations.ts",
			"qualifiedName": "useAdminUpdateShippingOption"
		},
		"2903": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/mutations.ts",
			"qualifiedName": "useAdminUpdateShippingOption"
		},
		"2904": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/mutations.ts",
			"qualifiedName": "id"
		},
		"2905": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/mutations.ts",
			"qualifiedName": "options"
		},
		"2906": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/mutations.ts",
			"qualifiedName": "useAdminDeleteShippingOption"
		},
		"2907": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/mutations.ts",
			"qualifiedName": "useAdminDeleteShippingOption"
		},
		"2908": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/mutations.ts",
			"qualifiedName": "id"
		},
		"2909": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-options/mutations.ts",
			"qualifiedName": "options"
		},
		"2910": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/queries.ts",
			"qualifiedName": "adminShippingProfileKeys"
		},
		"2911": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/queries.ts",
			"qualifiedName": "useAdminShippingProfiles"
		},
		"2912": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/queries.ts",
			"qualifiedName": "useAdminShippingProfiles"
		},
		"2913": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/queries.ts",
			"qualifiedName": "options"
		},
		"2914": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/queries.ts",
			"qualifiedName": "__object"
		},
		"2915": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-profiles/index.d.ts",
			"qualifiedName": "shipping_profiles"
		},
		"2916": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2917": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/queries.ts",
			"qualifiedName": "__object"
		},
		"2918": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-profiles/index.d.ts",
			"qualifiedName": "shipping_profiles"
		},
		"2919": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2920": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/queries.ts",
			"qualifiedName": "__object"
		},
		"2921": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-profiles/index.d.ts",
			"qualifiedName": "shipping_profiles"
		},
		"2922": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2923": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/queries.ts",
			"qualifiedName": "__object"
		},
		"2924": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-profiles/index.d.ts",
			"qualifiedName": "shipping_profiles"
		},
		"2925": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2926": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/queries.ts",
			"qualifiedName": "useAdminShippingProfile"
		},
		"2927": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/queries.ts",
			"qualifiedName": "useAdminShippingProfile"
		},
		"2928": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/queries.ts",
			"qualifiedName": "id"
		},
		"2929": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/queries.ts",
			"qualifiedName": "options"
		},
		"2930": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/queries.ts",
			"qualifiedName": "__object"
		},
		"2931": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-profiles/index.d.ts",
			"qualifiedName": "shipping_profile"
		},
		"2932": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2933": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/queries.ts",
			"qualifiedName": "__object"
		},
		"2934": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-profiles/index.d.ts",
			"qualifiedName": "shipping_profile"
		},
		"2935": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2936": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/queries.ts",
			"qualifiedName": "__object"
		},
		"2937": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-profiles/index.d.ts",
			"qualifiedName": "shipping_profile"
		},
		"2938": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2939": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/queries.ts",
			"qualifiedName": "__object"
		},
		"2940": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/shipping-profiles/index.d.ts",
			"qualifiedName": "shipping_profile"
		},
		"2941": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2942": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/mutations.ts",
			"qualifiedName": "useAdminCreateShippingProfile"
		},
		"2943": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/mutations.ts",
			"qualifiedName": "useAdminCreateShippingProfile"
		},
		"2944": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/mutations.ts",
			"qualifiedName": "options"
		},
		"2945": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/mutations.ts",
			"qualifiedName": "useAdminUpdateShippingProfile"
		},
		"2946": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/mutations.ts",
			"qualifiedName": "useAdminUpdateShippingProfile"
		},
		"2947": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/mutations.ts",
			"qualifiedName": "id"
		},
		"2948": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/mutations.ts",
			"qualifiedName": "options"
		},
		"2949": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/mutations.ts",
			"qualifiedName": "useAdminDeleteShippingProfile"
		},
		"2950": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/mutations.ts",
			"qualifiedName": "useAdminDeleteShippingProfile"
		},
		"2951": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/mutations.ts",
			"qualifiedName": "id"
		},
		"2952": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/shipping-profiles/mutations.ts",
			"qualifiedName": "options"
		},
		"2953": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/queries.ts",
			"qualifiedName": "adminStockLocationsKeys"
		},
		"2954": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/queries.ts",
			"qualifiedName": "useAdminStockLocations"
		},
		"2955": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/queries.ts",
			"qualifiedName": "useAdminStockLocations"
		},
		"2956": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/queries.ts",
			"qualifiedName": "query"
		},
		"2957": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/queries.ts",
			"qualifiedName": "options"
		},
		"2958": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"2959": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"2960": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/queries.ts",
			"qualifiedName": "__object"
		},
		"2961": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "limit"
		},
		"2962": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "offset"
		},
		"2963": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "count"
		},
		"2964": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/stock-locations/index.d.ts",
			"qualifiedName": "stock_locations"
		},
		"2965": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2966": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/queries.ts",
			"qualifiedName": "__object"
		},
		"2967": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "limit"
		},
		"2968": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "offset"
		},
		"2969": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "count"
		},
		"2970": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/stock-locations/index.d.ts",
			"qualifiedName": "stock_locations"
		},
		"2971": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2972": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/queries.ts",
			"qualifiedName": "__object"
		},
		"2973": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "limit"
		},
		"2974": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "offset"
		},
		"2975": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "count"
		},
		"2976": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/stock-locations/index.d.ts",
			"qualifiedName": "stock_locations"
		},
		"2977": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2978": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/queries.ts",
			"qualifiedName": "__object"
		},
		"2979": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "limit"
		},
		"2980": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "offset"
		},
		"2981": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "count"
		},
		"2982": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/stock-locations/index.d.ts",
			"qualifiedName": "stock_locations"
		},
		"2983": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2984": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/queries.ts",
			"qualifiedName": "useAdminStockLocation"
		},
		"2985": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/queries.ts",
			"qualifiedName": "useAdminStockLocation"
		},
		"2986": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/queries.ts",
			"qualifiedName": "id"
		},
		"2987": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/queries.ts",
			"qualifiedName": "options"
		},
		"2988": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/queries.ts",
			"qualifiedName": "__object"
		},
		"2989": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/stock-locations/index.d.ts",
			"qualifiedName": "stock_location"
		},
		"2990": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2991": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/queries.ts",
			"qualifiedName": "__object"
		},
		"2992": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/stock-locations/index.d.ts",
			"qualifiedName": "stock_location"
		},
		"2993": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2994": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/queries.ts",
			"qualifiedName": "__object"
		},
		"2995": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/stock-locations/index.d.ts",
			"qualifiedName": "stock_location"
		},
		"2996": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"2997": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/queries.ts",
			"qualifiedName": "__object"
		},
		"2998": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/stock-locations/index.d.ts",
			"qualifiedName": "stock_location"
		},
		"2999": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"3000": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/mutations.ts",
			"qualifiedName": "useAdminCreateStockLocation"
		},
		"3001": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/mutations.ts",
			"qualifiedName": "useAdminCreateStockLocation"
		},
		"3002": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/mutations.ts",
			"qualifiedName": "options"
		},
		"3003": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/mutations.ts",
			"qualifiedName": "useAdminUpdateStockLocation"
		},
		"3004": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/mutations.ts",
			"qualifiedName": "useAdminUpdateStockLocation"
		},
		"3005": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/mutations.ts",
			"qualifiedName": "id"
		},
		"3006": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/mutations.ts",
			"qualifiedName": "options"
		},
		"3007": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/mutations.ts",
			"qualifiedName": "useAdminDeleteStockLocation"
		},
		"3008": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/mutations.ts",
			"qualifiedName": "useAdminDeleteStockLocation"
		},
		"3009": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/mutations.ts",
			"qualifiedName": "id"
		},
		"3010": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/stock-locations/mutations.ts",
			"qualifiedName": "options"
		},
		"3011": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "adminStoreKeys"
		},
		"3012": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "useAdminStorePaymentProviders"
		},
		"3013": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "useAdminStorePaymentProviders"
		},
		"3014": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "options"
		},
		"3015": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "__object"
		},
		"3016": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/index.d.ts",
			"qualifiedName": "payment_providers"
		},
		"3017": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"3018": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "__object"
		},
		"3019": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/index.d.ts",
			"qualifiedName": "payment_providers"
		},
		"3020": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"3021": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "__object"
		},
		"3022": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/index.d.ts",
			"qualifiedName": "payment_providers"
		},
		"3023": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"3024": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "__object"
		},
		"3025": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/index.d.ts",
			"qualifiedName": "payment_providers"
		},
		"3026": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"3027": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "useAdminStoreTaxProviders"
		},
		"3028": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "useAdminStoreTaxProviders"
		},
		"3029": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "options"
		},
		"3030": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "__object"
		},
		"3031": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/index.d.ts",
			"qualifiedName": "tax_providers"
		},
		"3032": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"3033": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "__object"
		},
		"3034": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/index.d.ts",
			"qualifiedName": "tax_providers"
		},
		"3035": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"3036": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "__object"
		},
		"3037": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/index.d.ts",
			"qualifiedName": "tax_providers"
		},
		"3038": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"3039": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "__object"
		},
		"3040": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/index.d.ts",
			"qualifiedName": "tax_providers"
		},
		"3041": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"3042": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "useAdminStore"
		},
		"3043": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "useAdminStore"
		},
		"3044": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "options"
		},
		"3045": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "__object"
		},
		"3046": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/index.d.ts",
			"qualifiedName": "store"
		},
		"3047": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"3048": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "__object"
		},
		"3049": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/index.d.ts",
			"qualifiedName": "store"
		},
		"3050": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"3051": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "__object"
		},
		"3052": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/index.d.ts",
			"qualifiedName": "store"
		},
		"3053": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"3054": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/queries.ts",
			"qualifiedName": "__object"
		},
		"3055": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/store/index.d.ts",
			"qualifiedName": "store"
		},
		"3056": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"3057": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/mutations.ts",
			"qualifiedName": "useAdminUpdateStore"
		},
		"3058": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/mutations.ts",
			"qualifiedName": "useAdminUpdateStore"
		},
		"3059": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/mutations.ts",
			"qualifiedName": "options"
		},
		"3060": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/mutations.ts",
			"qualifiedName": "useAdminAddStoreCurrency"
		},
		"3061": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/mutations.ts",
			"qualifiedName": "useAdminAddStoreCurrency"
		},
		"3062": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/mutations.ts",
			"qualifiedName": "options"
		},
		"3063": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/mutations.ts",
			"qualifiedName": "useAdminDeleteStoreCurrency"
		},
		"3064": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/mutations.ts",
			"qualifiedName": "useAdminDeleteStoreCurrency"
		},
		"3065": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/store/mutations.ts",
			"qualifiedName": "options"
		},
		"3066": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/queries.ts",
			"qualifiedName": "adminSwapKeys"
		},
		"3067": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/queries.ts",
			"qualifiedName": "useAdminSwaps"
		},
		"3068": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/queries.ts",
			"qualifiedName": "useAdminSwaps"
		},
		"3069": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/queries.ts",
			"qualifiedName": "query"
		},
		"3070": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/queries.ts",
			"qualifiedName": "options"
		},
		"3071": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"3072": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"3073": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/queries.ts",
			"qualifiedName": "__object"
		},
		"3074": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"3075": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"3076": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"3077": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/swaps/index.d.ts",
			"qualifiedName": "swaps"
		},
		"3078": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"3079": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/queries.ts",
			"qualifiedName": "__object"
		},
		"3080": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"3081": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"3082": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"3083": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/swaps/index.d.ts",
			"qualifiedName": "swaps"
		},
		"3084": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"3085": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/queries.ts",
			"qualifiedName": "__object"
		},
		"3086": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"3087": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"3088": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"3089": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/swaps/index.d.ts",
			"qualifiedName": "swaps"
		},
		"3090": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"3091": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/queries.ts",
			"qualifiedName": "__object"
		},
		"3092": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"3093": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"3094": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"3095": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/swaps/index.d.ts",
			"qualifiedName": "swaps"
		},
		"3096": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"3097": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/queries.ts",
			"qualifiedName": "useAdminSwap"
		},
		"3098": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/queries.ts",
			"qualifiedName": "useAdminSwap"
		},
		"3099": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/queries.ts",
			"qualifiedName": "id"
		},
		"3100": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/queries.ts",
			"qualifiedName": "options"
		},
		"3101": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/queries.ts",
			"qualifiedName": "__object"
		},
		"3102": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/swaps/index.d.ts",
			"qualifiedName": "swap"
		},
		"3103": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"3104": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/queries.ts",
			"qualifiedName": "__object"
		},
		"3105": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/swaps/index.d.ts",
			"qualifiedName": "swap"
		},
		"3106": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"3107": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/queries.ts",
			"qualifiedName": "__object"
		},
		"3108": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/swaps/index.d.ts",
			"qualifiedName": "swap"
		},
		"3109": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"3110": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/queries.ts",
			"qualifiedName": "__object"
		},
		"3111": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/swaps/index.d.ts",
			"qualifiedName": "swap"
		},
		"3112": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"3113": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "useAdminCreateSwap"
		},
		"3114": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "useAdminCreateSwap"
		},
		"3115": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "orderId"
		},
		"3116": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "options"
		},
		"3117": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "useAdminCancelSwap"
		},
		"3118": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "useAdminCancelSwap"
		},
		"3119": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "orderId"
		},
		"3120": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "options"
		},
		"3121": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "AdminFulfillSwapReq"
		},
		"3122": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "__type"
		},
		"3123": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "__type.swap_id"
		},
		"3124": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "useAdminFulfillSwap"
		},
		"3125": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "useAdminFulfillSwap"
		},
		"3126": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "orderId"
		},
		"3127": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "options"
		},
		"3128": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "AdminCreateSwapShipmentReq"
		},
		"3129": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "__type"
		},
		"3130": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "__type.swap_id"
		},
		"3131": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "useAdminCreateSwapShipment"
		},
		"3132": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "useAdminCreateSwapShipment"
		},
		"3133": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "orderId"
		},
		"3134": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "options"
		},
		"3135": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "useAdminProcessSwapPayment"
		},
		"3136": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "useAdminProcessSwapPayment"
		},
		"3137": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "orderId"
		},
		"3138": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "options"
		},
		"3139": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "AdminCancelSwapFulfillmentReq"
		},
		"3140": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "__type"
		},
		"3141": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "__type.swap_id"
		},
		"3142": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "__type.fulfillment_id"
		},
		"3143": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "useAdminCancelSwapFulfillment"
		},
		"3144": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "useAdminCancelSwapFulfillment"
		},
		"3145": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "orderId"
		},
		"3146": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "options"
		},
		"3147": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "__type"
		},
		"3148": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "__type.swap_id"
		},
		"3149": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "__type.fulfillment_id"
		},
		"3150": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "__type"
		},
		"3151": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "__type.swap_id"
		},
		"3152": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/swaps/mutations.ts",
			"qualifiedName": "__type.fulfillment_id"
		},
		"3153": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/queries.ts",
			"qualifiedName": "adminTaxRateKeys"
		},
		"3154": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/queries.ts",
			"qualifiedName": "useAdminTaxRates"
		},
		"3155": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/queries.ts",
			"qualifiedName": "useAdminTaxRates"
		},
		"3156": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/queries.ts",
			"qualifiedName": "query"
		},
		"3157": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/queries.ts",
			"qualifiedName": "options"
		},
		"3158": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"3159": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"3160": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/queries.ts",
			"qualifiedName": "__object"
		},
		"3161": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"3162": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"3163": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"3164": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
			"qualifiedName": "tax_rates"
		},
		"3165": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"3166": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/queries.ts",
			"qualifiedName": "__object"
		},
		"3167": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"3168": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"3169": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"3170": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
			"qualifiedName": "tax_rates"
		},
		"3171": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"3172": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/queries.ts",
			"qualifiedName": "__object"
		},
		"3173": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"3174": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"3175": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"3176": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
			"qualifiedName": "tax_rates"
		},
		"3177": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"3178": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/queries.ts",
			"qualifiedName": "__object"
		},
		"3179": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"3180": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"3181": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"3182": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
			"qualifiedName": "tax_rates"
		},
		"3183": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"3184": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/queries.ts",
			"qualifiedName": "useAdminTaxRate"
		},
		"3185": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/queries.ts",
			"qualifiedName": "useAdminTaxRate"
		},
		"3186": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/queries.ts",
			"qualifiedName": "id"
		},
		"3187": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/queries.ts",
			"qualifiedName": "query"
		},
		"3188": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/queries.ts",
			"qualifiedName": "options"
		},
		"3189": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/queries.ts",
			"qualifiedName": "__object"
		},
		"3190": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
			"qualifiedName": "tax_rate"
		},
		"3191": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"3192": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/queries.ts",
			"qualifiedName": "__object"
		},
		"3193": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
			"qualifiedName": "tax_rate"
		},
		"3194": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"3195": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/queries.ts",
			"qualifiedName": "__object"
		},
		"3196": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
			"qualifiedName": "tax_rate"
		},
		"3197": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"3198": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/queries.ts",
			"qualifiedName": "__object"
		},
		"3199": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/tax-rates/index.d.ts",
			"qualifiedName": "tax_rate"
		},
		"3200": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"3201": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "useAdminCreateTaxRate"
		},
		"3202": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "useAdminCreateTaxRate"
		},
		"3203": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "options"
		},
		"3204": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "useAdminUpdateTaxRate"
		},
		"3205": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "useAdminUpdateTaxRate"
		},
		"3206": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "id"
		},
		"3207": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "options"
		},
		"3208": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "useAdminDeleteTaxRate"
		},
		"3209": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "useAdminDeleteTaxRate"
		},
		"3210": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "id"
		},
		"3211": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "options"
		},
		"3212": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "useAdminCreateProductTaxRates"
		},
		"3213": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "useAdminCreateProductTaxRates"
		},
		"3214": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "id"
		},
		"3215": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "options"
		},
		"3216": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "useAdminDeleteProductTaxRates"
		},
		"3217": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "useAdminDeleteProductTaxRates"
		},
		"3218": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "id"
		},
		"3219": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "options"
		},
		"3220": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "useAdminCreateProductTypeTaxRates"
		},
		"3221": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "useAdminCreateProductTypeTaxRates"
		},
		"3222": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "id"
		},
		"3223": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "options"
		},
		"3224": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "useAdminDeleteProductTypeTaxRates"
		},
		"3225": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "useAdminDeleteProductTypeTaxRates"
		},
		"3226": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "id"
		},
		"3227": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "options"
		},
		"3228": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "useAdminCreateShippingTaxRates"
		},
		"3229": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "useAdminCreateShippingTaxRates"
		},
		"3230": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "id"
		},
		"3231": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "options"
		},
		"3232": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "useAdminDeleteShippingTaxRates"
		},
		"3233": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "useAdminDeleteShippingTaxRates"
		},
		"3234": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "id"
		},
		"3235": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/tax-rates/mutations.ts",
			"qualifiedName": "options"
		},
		"3236": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/uploads/mutations.ts",
			"qualifiedName": "useAdminUploadFile"
		},
		"3237": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/uploads/mutations.ts",
			"qualifiedName": "useAdminUploadFile"
		},
		"3238": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/uploads/mutations.ts",
			"qualifiedName": "options"
		},
		"3239": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/uploads/mutations.ts",
			"qualifiedName": "useAdminUploadProtectedFile"
		},
		"3240": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/uploads/mutations.ts",
			"qualifiedName": "useAdminUploadProtectedFile"
		},
		"3241": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/uploads/mutations.ts",
			"qualifiedName": "options"
		},
		"3242": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/uploads/mutations.ts",
			"qualifiedName": "useAdminCreatePresignedDownloadUrl"
		},
		"3243": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/uploads/mutations.ts",
			"qualifiedName": "useAdminCreatePresignedDownloadUrl"
		},
		"3244": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/uploads/mutations.ts",
			"qualifiedName": "options"
		},
		"3245": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/uploads/mutations.ts",
			"qualifiedName": "useAdminDeleteFile"
		},
		"3246": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/uploads/mutations.ts",
			"qualifiedName": "useAdminDeleteFile"
		},
		"3247": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/uploads/mutations.ts",
			"qualifiedName": "options"
		},
		"3248": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/queries.ts",
			"qualifiedName": "adminUserKeys"
		},
		"3249": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/queries.ts",
			"qualifiedName": "useAdminUsers"
		},
		"3250": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/queries.ts",
			"qualifiedName": "useAdminUsers"
		},
		"3251": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/queries.ts",
			"qualifiedName": "query"
		},
		"3252": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/queries.ts",
			"qualifiedName": "options"
		},
		"3253": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"3254": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"3255": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/queries.ts",
			"qualifiedName": "__object"
		},
		"3256": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/users/index.d.ts",
			"qualifiedName": "users"
		},
		"3257": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"3258": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/queries.ts",
			"qualifiedName": "__object"
		},
		"3259": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/users/index.d.ts",
			"qualifiedName": "users"
		},
		"3260": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"3261": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/queries.ts",
			"qualifiedName": "__object"
		},
		"3262": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/users/index.d.ts",
			"qualifiedName": "users"
		},
		"3263": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"3264": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/queries.ts",
			"qualifiedName": "__object"
		},
		"3265": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/users/index.d.ts",
			"qualifiedName": "users"
		},
		"3266": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"3267": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/queries.ts",
			"qualifiedName": "useAdminUser"
		},
		"3268": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/queries.ts",
			"qualifiedName": "useAdminUser"
		},
		"3269": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/queries.ts",
			"qualifiedName": "id"
		},
		"3270": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/queries.ts",
			"qualifiedName": "options"
		},
		"3271": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/queries.ts",
			"qualifiedName": "__object"
		},
		"3272": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/users/index.d.ts",
			"qualifiedName": "user"
		},
		"3273": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"3274": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/queries.ts",
			"qualifiedName": "__object"
		},
		"3275": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/users/index.d.ts",
			"qualifiedName": "user"
		},
		"3276": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"3277": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/queries.ts",
			"qualifiedName": "__object"
		},
		"3278": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/users/index.d.ts",
			"qualifiedName": "user"
		},
		"3279": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"3280": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/queries.ts",
			"qualifiedName": "__object"
		},
		"3281": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/users/index.d.ts",
			"qualifiedName": "user"
		},
		"3282": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"3283": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/mutations.ts",
			"qualifiedName": "useAdminCreateUser"
		},
		"3284": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/mutations.ts",
			"qualifiedName": "useAdminCreateUser"
		},
		"3285": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/mutations.ts",
			"qualifiedName": "options"
		},
		"3286": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/mutations.ts",
			"qualifiedName": "useAdminUpdateUser"
		},
		"3287": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/mutations.ts",
			"qualifiedName": "useAdminUpdateUser"
		},
		"3288": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/mutations.ts",
			"qualifiedName": "id"
		},
		"3289": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/mutations.ts",
			"qualifiedName": "options"
		},
		"3290": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/mutations.ts",
			"qualifiedName": "useAdminDeleteUser"
		},
		"3291": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/mutations.ts",
			"qualifiedName": "useAdminDeleteUser"
		},
		"3292": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/mutations.ts",
			"qualifiedName": "id"
		},
		"3293": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/mutations.ts",
			"qualifiedName": "options"
		},
		"3294": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/mutations.ts",
			"qualifiedName": "useAdminResetPassword"
		},
		"3295": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/mutations.ts",
			"qualifiedName": "useAdminResetPassword"
		},
		"3296": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/mutations.ts",
			"qualifiedName": "options"
		},
		"3297": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/mutations.ts",
			"qualifiedName": "useAdminSendResetPasswordToken"
		},
		"3298": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/mutations.ts",
			"qualifiedName": "useAdminSendResetPasswordToken"
		},
		"3299": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/users/mutations.ts",
			"qualifiedName": "options"
		},
		"3300": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "adminVariantKeys"
		},
		"3301": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "useAdminVariants"
		},
		"3302": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "useAdminVariants"
		},
		"3303": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "query"
		},
		"3304": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "options"
		},
		"3305": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type"
		},
		"3306": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "__type.query"
		},
		"3307": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "__object"
		},
		"3308": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"3309": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"3310": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"3311": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/variants/index.d.ts",
			"qualifiedName": "variants"
		},
		"3312": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"3313": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "__object"
		},
		"3314": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"3315": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"3316": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"3317": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/variants/index.d.ts",
			"qualifiedName": "variants"
		},
		"3318": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"3319": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "__object"
		},
		"3320": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"3321": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"3322": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"3323": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/variants/index.d.ts",
			"qualifiedName": "variants"
		},
		"3324": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"3325": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "__object"
		},
		"3326": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "limit"
		},
		"3327": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "offset"
		},
		"3328": {
			"sourceFileName": "../../../packages/medusa/dist/types/common.d.ts",
			"qualifiedName": "count"
		},
		"3329": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/variants/index.d.ts",
			"qualifiedName": "variants"
		},
		"3330": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"3331": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "useAdminVariant"
		},
		"3332": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "useAdminVariant"
		},
		"3333": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "id"
		},
		"3334": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "query"
		},
		"3335": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "options"
		},
		"3336": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "__object"
		},
		"3337": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/variants/index.d.ts",
			"qualifiedName": "variant"
		},
		"3338": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"3339": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "__object"
		},
		"3340": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/variants/index.d.ts",
			"qualifiedName": "variant"
		},
		"3341": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"3342": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "__object"
		},
		"3343": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/variants/index.d.ts",
			"qualifiedName": "variant"
		},
		"3344": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"3345": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "__object"
		},
		"3346": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/variants/index.d.ts",
			"qualifiedName": "variant"
		},
		"3347": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"3348": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "useAdminVariantsInventory"
		},
		"3349": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "useAdminVariantsInventory"
		},
		"3350": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "id"
		},
		"3351": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "options"
		},
		"3352": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "__object"
		},
		"3353": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/variants/get-inventory.d.ts",
			"qualifiedName": "variant"
		},
		"3354": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"3355": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "__object"
		},
		"3356": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/variants/get-inventory.d.ts",
			"qualifiedName": "variant"
		},
		"3357": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"3358": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "__object"
		},
		"3359": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/variants/get-inventory.d.ts",
			"qualifiedName": "variant"
		},
		"3360": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"3361": {
			"sourceFileName": "../../../packages/medusa-react/src/hooks/admin/variants/queries.ts",
			"qualifiedName": "__object"
		},
		"3362": {
			"sourceFileName": "../../../packages/medusa/dist/api/routes/admin/variants/get-inventory.d.ts",
			"qualifiedName": "variant"
		},
		"3363": {
			"sourceFileName": "../../../packages/medusa-js/dist/index.d.ts",
			"qualifiedName": "response"
		},
		"3364": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "FormatVariantPriceParams"
		},
		"3365": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__type.variant"
		},
		"3366": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__type.region"
		},
		"3367": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__type.includeTaxes"
		},
		"3368": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__type.minimumFractionDigits"
		},
		"3369": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__type.maximumFractionDigits"
		},
		"3370": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__type.locale"
		},
		"3371": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "formatVariantPrice"
		},
		"3372": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "formatVariantPrice"
		},
		"3373": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__0"
		},
		"3374": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "ComputeVariantPriceParams"
		},
		"3375": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__type.variant"
		},
		"3376": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__type.region"
		},
		"3377": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__type.includeTaxes"
		},
		"3378": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "computeVariantPrice"
		},
		"3379": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "computeVariantPrice"
		},
		"3380": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__0"
		},
		"3381": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "getVariantPrice"
		},
		"3382": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "getVariantPrice"
		},
		"3383": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "variant"
		},
		"3384": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "region"
		},
		"3385": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "ComputeAmountParams"
		},
		"3386": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__type"
		},
		"3387": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__type.amount"
		},
		"3388": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__type.region"
		},
		"3389": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__type.includeTaxes"
		},
		"3390": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "computeAmount"
		},
		"3391": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "computeAmount"
		},
		"3392": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__0"
		},
		"3393": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "FormatAmountParams"
		},
		"3394": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__type"
		},
		"3395": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__type.amount"
		},
		"3396": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__type.region"
		},
		"3397": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__type.includeTaxes"
		},
		"3398": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__type.minimumFractionDigits"
		},
		"3399": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__type.maximumFractionDigits"
		},
		"3400": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__type.locale"
		},
		"3401": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "formatAmount"
		},
		"3402": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "formatAmount"
		},
		"3403": {
			"sourceFileName": "../../../packages/medusa-react/src/helpers/index.ts",
			"qualifiedName": "__0"
		},
		"3404": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "ProductVariantInfo"
		},
		"3405": {
			"sourceFileName": "../../../packages/medusa-react/src/types.ts",
			"qualifiedName": "RegionInfo"
		}
	}
}